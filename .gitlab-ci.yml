image: node:18-alpine

stages:
  - install
  - lint
  - test
  - sonar

cache:
  key:
    files:
      - package-lock.json
  paths:
    - node_modules/

before_script:
  - apk update && apk upgrade && apk add --no-cache chromium


install:
  stage: install
  script:
    - npm cache clear -f
    - npm cache verify
    - npm install --legacy-peer-deps 
  artifacts:
    paths:
      - /builds/dgtic-offshore/ecmca/ecmca-frontend/node_modules/
  rules:
    - if: ($CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "test" || $CI_COMMIT_BRANCH == "staging")

lint:
  stage: lint
  script:
    - npm install --legacy-peer-deps 
    - npm run lint
  needs: ["install"]
  rules:
    - if: ($CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "test" || $CI_COMMIT_BRANCH == "staging")

test:
  stage: test
  script:
    - export CHROME_BIN=/usr/bin/chromium-browser
    - npm install -g @angular/cli
    - npm install --legacy-peer-deps 
    - npm install -D karma-sonarqube-reporter --legacy-peer-deps
    - npm install -D sonarqube-scanner --legacy-peer-deps
    - npm run test
  artifacts:
    paths:
      - /builds/dgtic-offshore/ecmca/ecmca-frontend/coverage/
    reports:
      junit:
        - /builds/dgtic-offshore/ecmca/ecmca-frontend/coverage/ecmca-frontend/junit.xml
  rules:
    - if: ($CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "test" || $CI_COMMIT_BRANCH == "staging")

sonar:
  stage: sonar
  image: ${CI_REGISTRY}/dep/library/ci-library/sonarsource/sonar-scanner-cli:4.6
  variables:
    GIT_STRATEGY: clone
    GIT_DEPTH: 0
  script:
    - npm run sonar-scanner
  needs: ["test"]


    