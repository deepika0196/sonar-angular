import { Component, EventEmitter, HostListener, Input, Output, ViewChild, ViewEncapsulation } from '@angular/core';
import { MatPaginator } from '@angular/material/paginator';
import { MatTableDataSource } from '@angular/material/table';
import { finalize, of, takeUntil } from 'rxjs';
import { Observable } from 'rxjs/internal/Observable';
import { checkRequiredFields } from '../../../core/utils/basic.util';
import { ArqBaseComponent } from '../../../lib/utils/utils';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "../../../lib/services/arq-dialog.service";
import * as i3 from "../../services/arq-spinner.service";
import * as i4 from "@angular/common";
import * as i5 from "../arq-button/arq-button.component";
import * as i6 from "../arq-context-menu/arq-context-menu.component";
import * as i7 from "../arq-datepicker/arq-datepicker.component";
import * as i8 from "../arq-text-input/arq-text-input.component";
import * as i9 from "../arq-checkbox-basic/arq-checkbox-basic.component";
import * as i10 from "../arq-select/arq-select.component";
import * as i11 from "../arq-autocomplete/arq-autocomplete.component";
import * as i12 from "../arq-datetimepicker/arq-datetimepicker.component";
import * as i13 from "../arq-input-number/arq-input-number.component";
import * as i14 from "@angular/material/table";
import * as i15 from "@angular/material/checkbox";
import * as i16 from "@angular/material/icon";
import * as i17 from "@angular/material/form-field";
import * as i18 from "@angular/material/paginator";
import * as i19 from "@angular/material/input";
import * as i20 from "@angular/material/tooltip";
import * as i21 from "@angular/material/sort";
import * as i22 from "@angular/material/button";
const DEFAULT_CONFIG = {
    filterType: 'hide',
    filterPlaceholder: 'Filtrar...',
    filterLabel: 'Filtrar',
    noDataString: 'No hay datos',
    actions: [],
    actionsInContextMenu: false,
    actionColLabel: '',
    newRowInActionsTH: false,
    newRowInModal: false,
    disabled: false,
    disablePagination: false,
    pageSize: 5,
    selectColumn: false,
    editCallback: row => { },
    eventRow: row => { },
    eventNewRow: row => { },
    prepareFormGroup: formGroup => { }
};
export class ArqDatatableComponent extends ArqBaseComponent {
    constructor(formBuilder, serviceDialog, arqSpinnerService) {
        super();
        this.formBuilder = formBuilder;
        this.serviceDialog = serviceDialog;
        this.arqSpinnerService = arqSpinnerService;
        // Component inputs
        this._columnsSchema = [];
        this.loadDataEvent$ = new EventEmitter();
        this.selectEvent$ = new EventEmitter();
        this._isEditing = false;
        this.itemsPerPageLabel = 'Items por página';
        this.nextPageLabel = 'Siguiente';
        this.firstPageLabel = 'Primera';
        this.lastPageLabel = 'Última';
        this.previousPageLabel = 'Anterior';
        this.range = 'de';
        this.dataSource = new MatTableDataSource();
        this.displayedColumns = [];
        this.tableConfig = DEFAULT_CONFIG;
        this.dataRequest = { page: 0, size: 5 };
        this.totalElements = 0;
        this.isLoading = false;
        // ??
        this.valid = {};
        this.activeQueryFilter = '';
        this.activeFilter = {};
        this.displayedColumnsStatic = ['codigo', 'descripcion'];
        // Context Menu
        this.isDisplayContextMenu = false;
        this.rightClickMenuItems = [];
        // Select funcionality
        this.selectedRows = [];
        this.checkSelectedRow = (row) => !!this.selectedRows.filter(_ => row.id === _.id).length;
        // Template Functions
        this.iterateAndF = (_) => _.map((a) => a + 'f'); // Añade el sufijo 'f' a cada elemento del array
        this.toOf = (_) => of(_);
        this.findValue = (value, data, lang, type) => {
            const description = lang == 'ca' ? 'descriptionV' : 'description';
            let dataNew;
            // Si tenemos objeto en select o autocomplete no necesitamos buscar en el filtro
            if ((type == 'select' || type == 'autocomplete') && value?.value) {
                return value[description];
            }
            if (type == 'select' && data && !Array.isArray(data)) {
                data.subscribe((e) => (dataNew = e));
            }
            else {
                dataNew = data;
            }
            // prettier-ignore
            return (dataNew?.find((_) => {
                if (!value)
                    return false;
                else
                    return (typeof value !== 'string') ? (_.value === value.value) : (_.value === value);
            })?.[description] || value);
        };
        this.findSrc = (value, data) => {
            // prettier-ignore
            return (data.find((_) => {
                if (!value)
                    return false;
                else
                    return _.value === value;
            })?.src || value);
        };
        this.hideIcon = false;
    }
    ngAfterViewInit() {
        this.customPaginator();
    }
    ngOnInit() {
        this.fg = { ...this._form };
        this.fgCopy = { ...this._form };
        this._columnsSchema.forEach(col => {
            if (col.fullObject === undefined) {
                col.fullObject = true;
            }
            if (col.isEditable === undefined) {
                col.isEditable = true;
            }
            if (!col.defaultValue) {
                col.defaultValue = null;
            }
            if (col.dataFnReq) {
                col.dataFnReq({ page: 0, size: 10 }).subscribe(res => (col.data = res.content));
            }
            if (col.dataFn) {
                col.dataFn.subscribe((e) => (col.data = e));
            }
            if (col.type == 'calc') {
                col.isEditable = false;
                col.isCreable = false;
                col.isSortable = false;
                if (!col.calculate) {
                    console.error('calculate function is required for calc type');
                }
            }
        });
        if (!this.loadedData$ && !this.loadDataEvent$)
            checkRequiredFields(this._loadDataFn || this._loadDataMantFn, 'loadDataFn');
        if (!this._loadDataFn && !this._loadDataMantFn) {
            checkRequiredFields(this.loadedData$, 'loadedData');
            checkRequiredFields(this.loadDataEvent$, 'loadDataEvent');
        }
        checkRequiredFields(this._columnsSchema, 'columnsSchema');
        this.initializeDatatable();
    }
    ngOnChanges(changes) {
        if (changes) {
            this.displayedColumns = this._columnsSchema
                ?.filter((col) => col.isHidden != true)
                .map((col) => col.key);
            if (this.tableConfig?.actions?.length && !this.tableConfig?.actionsInContextMenu)
                this.showActionsCol();
            if (changes['_tableConfig'] &&
                changes['_tableConfig']['currentValue'] &&
                changes['_tableConfig']['currentValue']['selectColumn']) {
                this._tableConfig.selectColumn = changes['_tableConfig']['currentValue']['selectColumn'];
                this.tableConfig.selectColumn = changes['_tableConfig']['currentValue']['selectColumn'];
                this.showSelectCol(changes['_tableConfig']['currentValue']['selectColumn']);
            }
        }
    }
    enable() {
        this.readonly = false;
    }
    disable() {
        this.readonly = true;
        this.stopEditing();
    }
    action() {
        return (row) => {
            row.isEdit = !row.isEdit;
            for (const key in row) {
                if (Object.prototype.hasOwnProperty.call(row, key)) {
                    this._form?.controls[key]?.setValue(row[key], { emitEvent: false });
                }
            }
            if (this.tableConfig.prepareFormGroup && this._form) {
                this.tableConfig.prepareFormGroup(this._form);
                this._form.updateValueAndValidity({ emitEvent: false });
            }
            this._isEditing = true;
            row.newRow = false;
        };
    }
    initializeDatatable() {
        this.setTableConfig();
        this.showFilters = this.tableConfig.filterType == 'both' || this.tableConfig.filterType == 'column';
        this.displayedColumns = this._columnsSchema?.filter((col) => col.isHidden != true).map((col) => col.key);
        if (this.tableConfig.actions?.length && !this.tableConfig.actionsInContextMenu)
            this.showActionsCol();
        this.showSelectCol(!!this.tableConfig.selectColumn);
        if (this.loadedData$) {
            this.loadedData$.pipe(takeUntil(this.unsubscribe$)).subscribe({
                next: (res) => {
                    res = this.addIdsIfNecesary(res);
                    this.dataSource.data = res.content;
                    this.totalElements = res.totalElements;
                    this.stopLoading();
                },
                error: () => this.stopLoading()
            });
        }
        if (this.refreshData$)
            this.refreshData$.pipe(takeUntil(this.unsubscribe$)).subscribe(_ => this.refreshData());
        this.originalFilterType = this.tableConfig?.filterType;
        this.tableConfig?.actions?.forEach((element) => {
            if (element.inline) {
                element.action = this.action();
            }
        });
        this.refreshData();
    }
    refreshData() {
        this.startLoading();
        this.stopEditingAllRows();
        if (this.loadDataEvent$.observers.length) {
            this.loadDataEvent$.emit(this.dataRequest);
        }
        else {
            if (this._loadDataFn) {
                this._isEditing = true;
                this._loadDataFn(this.dataRequest)
                    .pipe(finalize(() => {
                    this._isEditing = false;
                    this.stopLoading();
                }))
                    .subscribe(res => {
                    res = this.addIdsIfNecesary(res);
                    this.dataSource.data = res.content;
                    this.totalElements = res.totalElements;
                });
            }
            else {
                this._loadDataMantFn(this.dataRequest)
                    .pipe(finalize(() => {
                    this._isEditing = false;
                    this.stopLoading();
                }))
                    .subscribe(res => {
                    res = this.addIdsIfNecesary(res);
                    this.dataSource.data = res.content;
                    this.totalElements = res.totalElements;
                });
            }
        }
    }
    startLoading() {
        this.isLoading = true;
        this.arqSpinnerService.show();
    }
    stopLoading() {
        this.isLoading = false;
        this.arqSpinnerService.hide();
    }
    addIdsIfNecesary(res) {
        res.content = res.content.map((column, index) => {
            if (!Object.keys(column).includes('id'))
                column.id = index;
            return column;
        });
        return res;
    }
    setTableConfig() {
        this.tableConfig = {
            filterType: this._tableConfig?.filterType ? this._tableConfig?.filterType : DEFAULT_CONFIG.filterType,
            filterPlaceholder: this._tableConfig?.filterPlaceholder
                ? this._tableConfig.filterPlaceholder
                : DEFAULT_CONFIG.filterPlaceholder,
            filterLabel: this._tableConfig?.filterLabel ? this._tableConfig?.filterLabel : DEFAULT_CONFIG.filterLabel,
            noDataString: this._tableConfig?.noDataString ? this._tableConfig?.noDataString : DEFAULT_CONFIG.noDataString,
            footerTable: this._tableConfig?.footerTable ? this._tableConfig?.footerTable : DEFAULT_CONFIG.footerTable,
            footerTableString: this._tableConfig?.footerTableString
                ? this._tableConfig?.footerTableString
                : DEFAULT_CONFIG.footerTableString,
            headerTable: this._tableConfig?.headerTable ? this._tableConfig?.headerTable : DEFAULT_CONFIG.headerTable,
            headerTableString: this._tableConfig?.headerTableString
                ? this._tableConfig?.headerTableString
                : DEFAULT_CONFIG.headerTableString,
            actions: this._tableConfig?.actions ? this._tableConfig?.actions : DEFAULT_CONFIG.actions,
            actionsInContextMenu: this._tableConfig?.actionsInContextMenu
                ? this._tableConfig?.actionsInContextMenu
                : DEFAULT_CONFIG.actionsInContextMenu,
            actionColLabel: this._tableConfig?.actionColLabel
                ? this._tableConfig?.actionColLabel
                : DEFAULT_CONFIG.actionColLabel,
            newRowInActionsTH: this._tableConfig?.newRowInActionsTH
                ? this._tableConfig?.newRowInActionsTH
                : DEFAULT_CONFIG.newRowInActionsTH,
            newRowInModal: this._tableConfig?.newRowInModal ? this._tableConfig?.newRowInModal : DEFAULT_CONFIG.newRowInModal,
            disablePagination: this._tableConfig?.disablePagination
                ? this._tableConfig?.disablePagination
                : DEFAULT_CONFIG.disablePagination,
            disableSorting: this._tableConfig?.disableSorting
                ? this._tableConfig?.disableSorting
                : DEFAULT_CONFIG.disableSorting,
            pageSize: this._tableConfig?.pageSize ? this._tableConfig?.pageSize : DEFAULT_CONFIG.pageSize,
            editCallback: this._tableConfig?.editCallback ? this._tableConfig?.editCallback : DEFAULT_CONFIG.editCallback,
            eventRow: this._tableConfig?.eventRow ? this._tableConfig?.eventRow : DEFAULT_CONFIG.eventRow,
            eventNewRow: this._tableConfig?.eventNewRow ? this._tableConfig?.eventNewRow : DEFAULT_CONFIG.eventNewRow,
            selectColumn: this._tableConfig.selectColumn ? this._tableConfig.selectColumn : DEFAULT_CONFIG.selectColumn,
            prepareFormGroup: this._tableConfig?.prepareFormGroup
                ? this._tableConfig?.prepareFormGroup
                : DEFAULT_CONFIG.prepareFormGroup
        };
        if (this._tableConfig?.disabled) {
            this.readonly = this._tableConfig?.disabled;
            this._isEditing = false;
            this._columnsSchema.forEach((col) => {
                col.isEditable = false;
                col.isCreable = false;
            });
        }
        this.dataRequest.size = this.tableConfig?.pageSize || 5;
    }
    customPaginator() {
        this.paginator._intl.itemsPerPageLabel = this.itemsPerPageLabel;
        this.paginator._intl.firstPageLabel = this.firstPageLabel;
        this.paginator._intl.lastPageLabel = this.lastPageLabel;
        this.paginator._intl.nextPageLabel = this.nextPageLabel;
        this.paginator._intl.previousPageLabel = this.previousPageLabel;
        this.paginator._intl.getRangeLabel = (page, pageSize, length) => {
            const start = page * pageSize + 1;
            const end = (page + 1) * pageSize;
            return `${start} - ${end} ${this.range} ${length}`;
        };
    }
    nextPage(event) {
        this.dataRequest.page = +event.pageIndex.toString();
        this.dataRequest.size = +event.pageSize.toString();
        this.refreshData();
    }
    autocFilter(data, value) {
        let dataNew;
        if (data) {
            if (typeof data == 'function') {
                return data;
            }
            else {
                if (Array.isArray(data)) {
                    dataNew = data;
                }
                else {
                    data.subscribe((e) => (dataNew = e));
                }
            }
            return dataNew?.filter((_) => _.description.toLowerCase().includes((typeof value == 'string' ? value : value.description).toLowerCase()));
        }
    }
    editCol(col, row) {
        if (typeof col.isEditable == 'boolean') {
            return col.isEditable;
        }
        return col.isEditable(row);
    }
    editRow(row) {
        let form = row.newRow ? this.fg : this._form;
        form.updateValueAndValidity();
        if (this.tableConfig.editCallback) {
            const editCallback = this.tableConfig.editCallback({ ...row, ...form.value }, form);
            if (editCallback instanceof Observable) {
                editCallback?.subscribe({
                    next: () => {
                        this.readonly = false;
                        this._isEditing = false;
                        row.isEdit = false;
                        row.isCreate = false;
                        this.refreshData();
                    }
                });
            }
            else {
                this.readonly = false;
                this._isEditing = false;
                row.isEdit = false;
                row.isCreate = false;
                this.refreshData();
            }
        }
        else {
            console.error('Not edit callback defined');
        }
    }
    showActionsCol(show = true) {
        if (show) {
            if (!this.displayedColumns.includes('actions'))
                this.displayedColumns.push('actions');
        }
        else {
            if (this.tableConfig.actionsInContextMenu)
                this.displayedColumns = this.displayedColumns.filter((col) => col !== 'actions');
        }
    }
    hideFilter(b) {
        this.hideIcon = !b;
        this.tableConfig.filterType = this.originalFilterType;
        if (this.hideIcon) {
            this.tableConfig.filterType = 'hide';
        }
    }
    inputHandler(e, id, key) {
        if (!this.valid[id])
            this.valid[id] = {};
        this.valid[id][key] = e;
    }
    addNewRow() {
        this.readonly = true;
        this.fg = this.cloneFormGroup();
        if (this.tableConfig.prepareFormGroup) {
            this.tableConfig.prepareFormGroup(this.fg);
        }
        let el = {};
        el = this.fg.value;
        el.newRow = true;
        el.isCreate = true;
        el.isEdit = false;
        if (this.tableConfig.newRowInModal) {
            this.openDialog(el);
        }
        else {
            this._isEditing = true;
            this.dataSource.data.unshift(el);
            this.dataSource.data = this.dataSource.data;
        }
    }
    openDialog(el) {
        const resp = this.tableConfig.eventNewRow ? this.tableConfig.eventNewRow(el) : null;
        if (resp) {
            this.serviceDialog.open(resp.data, resp.component).subscribe((res) => {
                if (res) {
                    this.dataSource.data.unshift(res);
                    this.dataSource.data = this.dataSource.data;
                }
            });
        }
        this.readonly = false;
    }
    showSelectCol(show = true) {
        if (show) {
            if (!this.displayedColumns.includes('selectColumn'))
                this.displayedColumns.unshift('selectColumn');
        }
        else {
            this.displayedColumns = this.displayedColumns.filter((col) => col !== 'selectColumn');
        }
    }
    // Context Menu
    displayContextMenu(event, row) {
        if (this.tableConfig.actionsInContextMenu) {
            this.rightClickMenuItems = [];
            this.tableConfig.actions?.forEach((action) => {
                this.rightClickMenuItems.push({ menuText: action.tooltip, action: action.action, row: row });
            });
            this.isDisplayContextMenu = true;
            this.rightClickMenuPositions = {
                x: event.clientX,
                y: event.clientY
            };
        }
    }
    event() {
        this.isDisplayContextMenu = false;
    }
    // Sorting
    sortHandler(ev) {
        if (this._isEditing)
            return;
        if (ev.direction !== '') {
            this.dataRequest.sort = ev.active + ',' + ev.direction;
        }
        else {
            delete this.dataRequest.sort;
        }
        this.refreshData();
    }
    // Filtering
    filterHandler(ev, col) {
        if (ev.keyCode !== 13)
            return;
        if (ev.target.value !== '') {
            this.dataRequest.filter = ev.target.value;
            this.dataRequest.filterCol = col;
        }
        else {
            delete this.dataRequest.filter;
            delete this.dataRequest.filterCol;
        }
        this.refreshData();
    }
    obtenerElemento(obj, prop) {
        if (typeof obj !== 'object')
            throw 'getProp: obj is not an object';
        if (typeof prop !== 'string')
            throw 'getProp: prop is not a string';
        // Replace [] notation with dot notation
        prop = prop.replace(/\[["'`](.*)["'`]\]/g, '.$1');
        return prop.split('.').reduce(function (prev, curr) {
            return prev ? prev[curr] : undefined;
        }, obj || self);
    }
    cloneFormGroup() {
        let el = {};
        this._columnsSchema.forEach((col) => {
            el[col.key] = col.defaultValue;
        });
        return this.formBuilder.group(el);
    }
    eventRow(row) {
        if (this.rowClicked === row.id)
            this.rowClicked = -1;
        else
            this.rowClicked = row.id;
        this.tableConfig.eventRow && !row.isEdit
            ? this.tableConfig.eventRow(row)
            : console.error('Not edit callback defined');
    }
    // Select funcionality
    toggleSelectRow(row) {
        if (this.checkSelectedRow(row))
            this.selectedRows = this.selectedRows.filter(_ => _.id !== row.id);
        else
            this.selectedRows.push(row);
        this.selectEvent$.emit({ selected: this.selectedRows, lastSelection: row });
    }
    cleanSelectionRows() {
        this.selectedRows = [];
        this.selectEvent$.emit({ selected: this.selectedRows, lastSelection: [] });
    }
    stopEditing(row) {
        this._isEditing = false;
        if (row) {
            this.stopEditingRow(row);
        }
        else {
            this.stopEditingAllRows();
        }
    }
    stopEditingAllRows() {
        this.dataSource.data.forEach((row) => {
            this.stopEditingRow(row);
        });
    }
    stopEditingRow(row) {
        row.isEdit = false;
        row.isCreate = false;
        if (row.newRow) {
            this.dataSource.data.shift();
        }
        row.newRow = false;
    }
    desactivarItems(action) {
        if (action.inline) {
            this._isEditing = true;
        }
    }
    actionHandler(action, element) {
        this.stopEditingAllRows();
        const result = action.action(element);
        if (result instanceof Observable) {
            result?.subscribe({
                next: () => this.refreshData()
            });
        }
        this.desactivarItems(action);
    }
}
ArqDatatableComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: ArqDatatableComponent, deps: [{ token: i1.FormBuilder }, { token: i2.ArqDialogService }, { token: i3.ArqSpinnerService }], target: i0.ɵɵFactoryTarget.Component });
ArqDatatableComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: ArqDatatableComponent, selector: "arq-datatable", inputs: { _columnsSchema: ["columnsSchema", "_columnsSchema"], _tableConfig: ["tableConfig", "_tableConfig"], loadedData$: ["loadedData", "loadedData$"], _loadDataFn: ["loadDataFn", "_loadDataFn"], refreshData$: ["refreshData", "refreshData$"], _form: ["form", "_form"], _isEditing: ["isEditing", "_isEditing"], itemsPerPageLabel: "itemsPerPageLabel", nextPageLabel: "nextPageLabel", firstPageLabel: "firstPageLabel", lastPageLabel: "lastPageLabel", previousPageLabel: "previousPageLabel", range: "range", _loadDataMantFn: ["loadDataMantFn", "_loadDataMantFn"] }, outputs: { loadDataEvent$: "loadDataEvent", selectEvent$: "selectEvent" }, host: { listeners: { "document:click": "event()", "document:scroll": "event($event)" } }, viewQueries: [{ propertyName: "paginator", first: true, predicate: MatPaginator, descendants: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: "<div class=\"mat-elevation-z8\">\r\n  <!-- TABLE HEADER  -->\r\n  <div *ngIf=\"tableConfig.headerTableString\" [innerHTML]=\"tableConfig.headerTableString\"></div>\r\n  <div *ngIf=\"tableConfig.headerTable\" style=\"margin: 1em; display: flex; justify-content: flex-end\">\r\n    <ng-container>\r\n      <button\r\n        style=\"margin-left: 1em; margin-top: 1em\"\r\n        mat-raised-button\r\n        type=\"button\"\r\n        *ngFor=\"let btn of tableConfig.headerTable\"\r\n        [color]=\"btn.color ? btn.color : 'primary'\"\r\n        [matTooltip]=\"btn.tooltip ? btn.tooltip : ''\"\r\n        (click)=\"btn.action(this)\">\r\n        <mat-icon *ngIf=\"btn.icon\">{{ btn.icon }}</mat-icon>\r\n        {{ btn.label }}\r\n      </button>\r\n    </ng-container>\r\n  </div>\r\n\r\n  <!-- FILTER -->\r\n  <mat-form-field\r\n    appearance=\"outline\"\r\n    subscriptSizing=\"dynamic\"\r\n    class=\"table-filter\"\r\n    *ngIf=\"tableConfig.filterType === 'global' || tableConfig.filterType === 'both'\">\r\n    <mat-label>{{ tableConfig.filterLabel }}</mat-label>\r\n    <input\r\n      matInput\r\n      (keyup)=\"filterHandler($event, 'global')\"\r\n      placeholder=\"{{ tableConfig.filterPlaceholder }}\"\r\n      #input />\r\n  </mat-form-field>\r\n\r\n  <!-- TABLE -->\r\n  <table\r\n    #table\r\n    mat-table\r\n    [dataSource]=\"dataSource\"\r\n    class=\"mat-elevation-z8\"\r\n    matSort\r\n    (matSortChange)=\"sortHandler($event)\">\r\n    <!-- Select column -->\r\n    <ng-container matColumnDef=\"selectColumn\" *ngIf=\"tableConfig.selectColumn\">\r\n      <th\r\n        mat-header-cell\r\n        class=\"header-datatable\"\r\n        *matHeaderCellDef\r\n        style=\"cursor: pointer !important\"\r\n        (click)=\"cleanSelectionRows()\">\r\n        <!-- <mat-checkbox [checked]=\"false\" [disabled]=\"true\"></mat-checkbox> -->\r\n        ({{ selectedRows.length }})\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"toggleSelectRow(element)\">\r\n        <mat-checkbox [checked]=\"checkSelectedRow(element)\" [disabled]=\"true\"></mat-checkbox>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- Dynamic Columns -->\r\n    <ng-container [matColumnDef]=\"col.key\" *ngFor=\"let col of _columnsSchema\">\r\n      <ng-container *ngIf=\"tableConfig.disableSorting || col.isSortable === false\">\r\n        <th mat-header-cell class=\"header-datatable\" *matHeaderCellDef>{{ col.label }}</th>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"!tableConfig.disableSorting && col.isSortable !== false\">\r\n        <th mat-header-cell class=\"header-datatable\" *matHeaderCellDef mat-sort-header>\r\n          {{ col.label }}\r\n        </th>\r\n      </ng-container>\r\n      <!-- Data rows -->\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"eventRow(element)\">\r\n        <!-- Normal rows -->\r\n        <div\r\n          [ngSwitch]=\"col.type\"\r\n          *ngIf=\"!element.isEdit && !element.isCreate\"\r\n          (contextmenu)=\"displayContextMenu($event, element); (false)\">\r\n          <span *ngSwitchCase=\"'date'\">\r\n            {{ element[col.key] | date : 'dd/MM/yyyy' }}\r\n          </span>\r\n          <span *ngSwitchCase=\"'datetimepicker'\">\r\n            {{ element[col.key] | date : 'dd/MM/yyyy HH:mm' }}\r\n          </span>\r\n          <span *ngSwitchCase=\"'boolean'\">\r\n            {{ element[col.key] ? '&#10003;' : '&#10005;' }}\r\n          </span>\r\n          <span *ngSwitchCase=\"'select'\">\r\n            {{ findValue(element[col.key], col.data, col.lang, col.type) }}\r\n          </span>\r\n          <span *ngSwitchCase=\"'autocomplete'\">\r\n            {{ findValue(element[col.key], col.data, col.lang, col.type) }}\r\n          </span>\r\n          <span *ngSwitchCase=\"'image'\">\r\n            <img [src]=\"findSrc(element[col.key], col.data)\" />\r\n          </span>\r\n          <span *ngSwitchCase=\"'calc'\">\r\n            {{ col?.calculate(element) }}\r\n          </span>\r\n          <span *ngSwitchDefault>\r\n            {{ col.subkey ? this.obtenerElemento(element, col.key) : element[col.key] }}\r\n          </span>\r\n        </div>\r\n\r\n        <!-- Editing rows -->\r\n\r\n        <div [ngSwitch]=\"col.type\" *ngIf=\"element.isEdit && _form\" class=\"inputs-edit\">\r\n          <div *ngSwitchCase=\"'date'\" [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"editCol(col, element) && !col.subkey; else elseBlockNoEditable\">\r\n              <arq-datepicker [fGroup]=\"_form\" [value]=\"col.key\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'datetimepicker'\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"editCol(col, element) && !col.subkey; else elseBlockNoEditable\">\r\n              <arq-datetimepicker [value]=\"col.key\" [fGroup]=\"_form\"></arq-datetimepicker>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'boolean'\"\r\n            appearance=\"outline\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"editCol(col, element) && !col.subkey; else elseBlockNoEditable\">\r\n              <arq-checkbox-basic [value]=\"col.key\" [fGroup]=\"this._form\"></arq-checkbox-basic>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'select'\"\r\n            appearance=\"outline\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"editCol(col, element) && !col.subkey; else elseBlockNoEditable\">\r\n              <arq-select\r\n                [emptyOption]=\"true\"\r\n                [value]=\"col.key\"\r\n                [fGroup]=\"this._form\"\r\n                [selectOptionsList]=\"col.data || col.dataFn\"\r\n                (change)=\"inputHandler($event, element.id, col.key)\"\r\n                [fullObject]=\"col.fullObject\"\r\n                [lang]=\"col.lang\">\r\n              </arq-select>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'autocomplete'\"\r\n            appearance=\"outline\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"editCol(col, element) && !col.subkey; else elseBlockNoEditable\">\r\n              <arq-autocomplete\r\n                [options]=\"autocFilter(col.dataFnReq, element[col.key])\"\r\n                [panelWidth]=\"col.panelWidth || 'auto'\"\r\n                [dependsOn]=\"col.dependsOn\"\r\n                [value]=\"col.key\"\r\n                [fGroup]=\"this._form\"\r\n                (change)=\"inputHandler($event, element.id, col.key)\"\r\n                [lang]=\"col.lang\"\r\n                [defaultSize]=\"col.defaultSize || 10\">\r\n              </arq-autocomplete>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'number'\"\r\n            appearance=\"outline\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"editCol(col, element) && !col.subkey; else elseBlockNoEditable\">\r\n              <arq-input-number\r\n                [value]=\"col.key\"\r\n                [fGroup]=\"this._form\"\r\n                (change)=\"inputHandler($event, element.id, col.key)\">\r\n              </arq-input-number>\r\n            </div>\r\n          </div>\r\n\r\n          <div *ngSwitchDefault [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"editCol(col, element) && !col.subkey; else elseBlockNoEditable\">\r\n              <arq-text-input\r\n                [value]=\"col.key\"\r\n                [fGroup]=\"this._form\"\r\n                [maxLength]=\"col.maxLength ? col.maxLength : 100\"\r\n                (change)=\"inputHandler($event, element.id, col.key)\">\r\n              </arq-text-input>\r\n            </div>\r\n          </div>\r\n\r\n          <ng-template #elseBlockNoEditable>\r\n            <div [ngSwitch]=\"col.type\">\r\n              <span *ngSwitchCase=\"'date'\">\r\n                {{ element[col.key] | date : 'dd/MM/yyyy' }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'datetimepicker'\">\r\n                {{ element[col.key] | date : 'dd/MM/yyyy' }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'boolean'\">\r\n                {{ element[col.key] ? '&#10003;' : '&#10005;' }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'select'\">\r\n                {{ findValue(element[col.key], col.data || col.dataFn, col.lang, col.type) }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'autocomplete'\">\r\n                {{ findValue(element[col.key], col.data || col.dataFnReq, col.lang, col.type) }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'image'\">\r\n                <img [src]=\"findSrc(element[col.key], col.data)\" />\r\n              </span>\r\n              <span *ngSwitchDefault>\r\n                {{ col.subkey ? this.obtenerElemento(element, col.key) : element[col.key] }}\r\n              </span>\r\n            </div>\r\n          </ng-template>\r\n        </div>\r\n\r\n        <div [ngSwitch]=\"col.type\" *ngIf=\"element.isCreate && fg\" class=\"inputs-edit\">\r\n          <div *ngSwitchCase=\"'date'\" [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"col.isCreable !== false && !col.subkey; else elseBlockShow\">\r\n              <arq-datepicker [fGroup]=\"fg\" [value]=\"col.key\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'datetimepicker'\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"col.isCreable !== false && !col.subkey; else elseBlockShow\">\r\n              <arq-datetimepicker [value]=\"col.key\" [fGroup]=\"fg\"></arq-datetimepicker>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'boolean'\"\r\n            appearance=\"outline\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"col.isCreable !== false && !col.subkey; else elseBlockShow\">\r\n              <arq-checkbox-basic [value]=\"col.key\" [fGroup]=\"fg\"></arq-checkbox-basic>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'select'\"\r\n            appearance=\"outline\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"col.isCreable !== false && !col.subkey; else elseBlockShow\">\r\n              <arq-select\r\n                [fullObject]=\"col.fullObject\"\r\n                [emptyOption]=\"true\"\r\n                [value]=\"col.key\"\r\n                [fGroup]=\"fg\"\r\n                [selectOptionsList]=\"col.data || col.dataFn\"\r\n                (change)=\"inputHandler($event, element.id, col.key)\"\r\n                [lang]=\"col.lang\">\r\n              </arq-select>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'autocomplete'\"\r\n            appearance=\"outline\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"col.isCreable !== false && !col.subkey; else elseBlockShow\">\r\n              <arq-autocomplete\r\n                [options]=\"autocFilter(col.dataFnReq, element[col.key])\"\r\n                [panelWidth]=\"col.panelWidth || 'auto'\"\r\n                [dependsOn]=\"col.dependsOn\"\r\n                [value]=\"col.key\"\r\n                [fGroup]=\"fg\"\r\n                (change)=\"inputHandler($event, element.id, col.key)\"\r\n                [lang]=\"col.lang\"\r\n                [defaultSize]=\"col.defaultSize || 10\">\r\n              </arq-autocomplete>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'number'\"\r\n            appearance=\"outline\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"col.isCreable !== false && !col.subkey; else elseBlockShow\">\r\n              <arq-input-number [value]=\"col.key\" [fGroup]=\"fg\" (change)=\"inputHandler($event, element.id, col.key)\">\r\n              </arq-input-number>\r\n            </div>\r\n          </div>\r\n\r\n          <div *ngSwitchDefault [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"col.isCreable !== false && !col.subkey; else elseBlockShow\">\r\n              <arq-text-input\r\n                [value]=\"col.key\"\r\n                [fGroup]=\"fg\"\r\n                [maxLength]=\"col.maxLength ? col.maxLength : 100\"\r\n                (change)=\"inputHandler($event, element.id, col.key)\">\r\n              </arq-text-input>\r\n            </div>\r\n          </div>\r\n\r\n          <ng-template #elseBlockShow>\r\n            <div [ngSwitch]=\"col.type\">\r\n              <span *ngSwitchCase=\"'date'\">\r\n                {{ element[col.key] | date : 'dd/MM/yyyy' }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'datetimepicker'\">\r\n                {{ element[col.key] | date : 'dd/MM/yyyy' }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'boolean'\">\r\n                {{ element[col.key] ? '&#10003;' : '&#10005;' }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'select'\">\r\n                {{ findValue(element[col.key], col.data || col.dataFn, col.lang, col.type) }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'autocomplete'\">\r\n                {{ findValue(element[col.key], col.data || col.dataFnReq, col.lang, col.type) }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'image'\">\r\n                <img [src]=\"findSrc(element[col.key], col.data)\" />\r\n              </span>\r\n              <span *ngSwitchDefault>\r\n                {{ col.subkey ? this.obtenerElemento(element, col.key) : element[col.key] }}\r\n              </span>\r\n            </div>\r\n          </ng-template>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- Actions Columns -->\r\n    <ng-container matColumnDef=\"actions\" *ngIf=\"tableConfig.actions?.length\">\r\n      <th mat-header-cell class=\"header-datatable\" *matHeaderCellDef>\r\n        {{ tableConfig.actionColLabel }}\r\n        <arq-button\r\n          *ngIf=\"tableConfig.newRowInActionsTH\"\r\n          class=\"material-icons arq-toolbar-menu add-button\"\r\n          [ngClass]=\"{ disabled: readonly || _isEditing }\"\r\n          (click)=\"addNewRow()\"\r\n          [matTooltip]=\"readonly ? '' : 'Crear'\"\r\n          color=\"primary\"\r\n          [icon]=\"'add_box'\"\r\n          [tipoButton]=\"'icon'\"\r\n          [readonly]=\"readonly || _isEditing\">\r\n        </arq-button>\r\n\r\n        <ng-template [ngIf]=\"tableConfig.newRowInActionsTH && showFilters\">\r\n          <arq-button\r\n            *ngIf=\"hideIcon\"\r\n            class=\"material-icons arq-toolbar-menu add-button\"\r\n            (click)=\"hideFilter(true)\"\r\n            matTooltip=\"ocultar filtros\"\r\n            color=\"primary\"\r\n            [icon]=\"'visibility'\"\r\n            [tipoButton]=\"'icon'\">\r\n          </arq-button>\r\n          <arq-button\r\n            *ngIf=\"!hideIcon\"\r\n            class=\"material-icons arq-toolbar-menu add-button\"\r\n            (click)=\"hideFilter(false)\"\r\n            matTooltip=\"ocultar filtros\"\r\n            color=\"primary\"\r\n            [icon]=\"'visibility_off'\"\r\n            [tipoButton]=\"'icon'\">\r\n          </arq-button>\r\n        </ng-template>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element\" class=\"noCursor\">\r\n        <div class=\"action-buttons\" style=\"display: flex\">\r\n          <ng-container *ngIf=\"!element.isEdit && !element.isCreate\">\r\n            <ng-container *ngFor=\"let action of tableConfig.actions\">\r\n              <ng-container *ngIf=\"action.displayWhenDisabled || (!action.displayWhenDisabled && !readonly)\">\r\n                <button\r\n                  mat-button\r\n                  *ngIf=\"!(action.displayCondition && !action.displayCondition(element)); else hiddenButton\"\r\n                  class=\"btn-strech\"\r\n                  (click)=\"this.actionHandler(action, element)\"\r\n                  [matTooltip]=\"action.tooltip\"\r\n                  [color]=\"action.color || 'primary'\"\r\n                  [disabled]=\"!(element.isCreate || element.isEdit) && _isEditing\">\r\n                  <mat-icon *ngIf=\"!action.label\">{{ action.icon }}</mat-icon>\r\n                  <span *ngIf=\"action.label\">{{ action.label }}</span>\r\n                </button>\r\n              </ng-container>\r\n              <ng-template #hiddenButton>\r\n                <button mat-button mat-button class=\"hidden\" class=\"hidden\"></button>\r\n              </ng-template>\r\n            </ng-container>\r\n          </ng-container>\r\n          <ng-container *ngIf=\"(element.isEdit || element.isCreate) && _isEditing\">\r\n            <div class=\"btn-edit\">\r\n              <arq-button\r\n                class=\"material-icons arq-toolbar-menu save-button\"\r\n                (click)=\"editRow(element); showActionsCol(false)\"\r\n                matTooltip=\"Guardar Cambios\"\r\n                color=\"primary\"\r\n                [icon]=\"'check_circle'\"\r\n                [tipoButton]=\"'icon'\"></arq-button>\r\n              <arq-button\r\n                class=\"material-icons arq-toolbar-menu cancel-button\"\r\n                (click)=\"showActionsCol(false); stopEditing(element)\"\r\n                matTooltip=\"Cancelar\"\r\n                color=\"warn\"\r\n                [icon]=\"'cancel'\"\r\n                [tipoButton]=\"'icon'\"></arq-button>\r\n            </div>\r\n          </ng-container>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- Filter Rows -->\r\n    <ng-container [matColumnDef]=\"'selectColumnf'\">\r\n      <th mat-header-cell *matHeaderCellDef></th>\r\n    </ng-container>\r\n    <ng-container [matColumnDef]=\"col.key + 'f'\" *ngFor=\"let col of _columnsSchema\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        <ng-container\r\n          *ngIf=\"\r\n            col.isFilterable !== false &&\r\n            (tableConfig.filterType === 'column' || tableConfig.filterType === 'both') &&\r\n            col.key !== 'selectColumn' &&\r\n            col.key !== 'actions'\r\n          \">\r\n          <mat-form-field\r\n            class=\"filter-toolbar\"\r\n            subscriptSizing=\"dynamic\"\r\n            [ngClass]=\"{ small: true }\"\r\n            appearance=\"outline\">\r\n            <input\r\n              matInput\r\n              [disabled]=\"this._isEditing\"\r\n              (keyup)=\"filterHandler($event, col.key)\"\r\n              placeholder=\"{{ tableConfig.filterLabel }}\" />\r\n          </mat-form-field>\r\n        </ng-container>\r\n      </th>\r\n    </ng-container>\r\n    <ng-container [matColumnDef]=\"'actionsf'\">\r\n      <th mat-header-cell *matHeaderCellDef></th>\r\n    </ng-container>\r\n\r\n    <!-- HEADERS AND FILTERS -->\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr\r\n      mat-header-row\r\n      *matHeaderRowDef=\"iterateAndF(displayedColumns)\"\r\n      [ngClass]=\"{ hidden_row: tableConfig.filterType === 'hide' }\"></tr>\r\n    <tr\r\n      mat-row\r\n      *matRowDef=\"let row; columns: displayedColumns\"\r\n      [style.background-color]=\"rowClicked === row.id ? '#f2f2f2' : ''\"></tr>\r\n\r\n    <!-- Row shown when there is no matching data. -->\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n      <td *ngIf=\"!isLoading\" class=\"mat-cell\" colspan=\"4\">{{ tableConfig.noDataString }}</td>\r\n    </tr>\r\n  </table>\r\n\r\n  <!-- PAGINATOR -->\r\n  <mat-paginator\r\n    [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n    showFirstLastButtons\r\n    [pageSize]=\"tableConfig.pageSize\"\r\n    [length]=\"totalElements\"\r\n    (page)=\"nextPage($event)\">\r\n  </mat-paginator>\r\n\r\n  <!-- TABLE FOOTER  -->\r\n  <div *ngIf=\"tableConfig.footerTableString\" [innerHTML]=\"tableConfig.footerTableString\"></div>\r\n  <div *ngIf=\"tableConfig.footerTable\" style=\"margin: 1em; display: flex; justify-content: flex-end\">\r\n    <ng-container>\r\n      <button\r\n        mat-stroked-button\r\n        *ngFor=\"let btn of tableConfig.footerTable\"\r\n        [color]=\"btn.color ? btn.color : 'primary'\"\r\n        [matTooltip]=\"btn.tooltip ? btn.tooltip : ''\"\r\n        (click)=\"btn.action()\">\r\n        <mat-icon *ngIf=\"btn.icon\">{{ btn.icon }}</mat-icon>\r\n        {{ btn.label }}\r\n      </button>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n\r\n<!-- CONTEXT-MENU -->\r\n<arq-context-menu\r\n  *ngIf=\"rightClickMenuItems.length > 0 && isDisplayContextMenu\"\r\n  [contextMenuItems]=\"rightClickMenuItems\"\r\n  (onContextMenuItemClick)=\"$event.data.action($event.data.row); showActionsCol()\"\r\n  [menuPositions]=\"rightClickMenuPositions\">\r\n</arq-context-menu>\r\n", styles: ["table{overflow:scroll}table,.table-filter{width:98%}.header-datatable{font-weight:700;text-align:left;font-size:.9em;color:#1e1d1d;background-color:#e0e0e0!important;border:2px solid;border-color:#fff;text-transform:uppercase}.header-datatable:hover{background-color:#0c556d!important;color:#fff}.mat-button.mat-small{min-width:1%}.hidden_row{display:none}.disabled{cursor:not-allowed}.hidden{opacity:0;pointer-events:none}.mat-mdc-row:hover .mat-mdc-cell{background-color:#e0e0e0}.mat-mdc-row .mat-mdc-cell{cursor:pointer}.noCursor{cursor:default!important}.mat-mdc-table .mdc-data-table__header-row{height:30px}.mat-mdc-icon-button.mat-mdc-button-base{height:auto}.mdc-data-table__cell,.mdc-data-table__header-cell{padding:7px!important}.filter-toolbar,.filter-toolbar .mat-mdc-form-field-infix{width:100%}.inputs-edit .type-date.mat-mdc-form-field{padding-bottom:0!important}.scroll-custom p:not(:last-child){margin-bottom:1rem}.scroll-custom::-webkit-scrollbar{height:8px;width:8px;border:4px solid #d5d5d5}.scroll-custom::-webkit-scrollbar-thumb{background:#ccc;border-radius:4px}.scroll-custom::-webkit-scrollbar-thumb:active{background-color:#999}.scroll-custom::-webkit-scrollbar-thumb:hover{background:#b3b3b3;box-shadow:0 0 2px 1px #0003}.scroll-custom::-webkit-scrollbar-track{background:#e1e1e1;border-radius:4px}.scroll-custom::-webkit-scrollbar-track:hover,.scroll-custom::-webkit-scrollbar-track:active{background:#d4d4d4}.scroll-custom::-webkit-scrollbar-thumb:horizontal{border-radius:10px}.btn-strech{padding-top:0!important;padding-bottom:0!important}\n"], dependencies: [{ kind: "directive", type: i4.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i4.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "directive", type: i4.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { kind: "directive", type: i4.NgSwitchDefault, selector: "[ngSwitchDefault]" }, { kind: "component", type: i5.ArqButtonComponent, selector: "arq-button", inputs: ["readonly", "label", "color", "type", "icon", "tipoButton", "btnName"] }, { kind: "component", type: i6.ArqContextMenuComponent, selector: "arq-context-menu", inputs: ["contextMenuItems", "menuPositions"], outputs: ["onContextMenuItemClick"] }, { kind: "component", type: i7.ArqDatepickerComponent, selector: "arq-datepicker", inputs: ["label", "hint", "disabled"] }, { kind: "component", type: i8.ArqTextInputComponent, selector: "arq-text-input", inputs: ["maxLength", "append", "disabled"] }, { kind: "component", type: i9.ArqCheckboxBasicComponent, selector: "arq-checkbox-basic", inputs: ["color", "checked", "disabled", "sectionClass", "spanClass", "checkbox_down", "checkbox_sn"] }, { kind: "component", type: i10.ArqSelectComponent, selector: "arq-select", inputs: ["disabled", "selectOptionsList", "emptyOption", "fullObject", "multiple"], outputs: ["selectionChange"] }, { kind: "component", type: i11.ArqAutocompleteComponent, selector: "arq-autocomplete", inputs: ["ariaLabel", "autoActiveFirstOption", "autoSelectActiveOption", "panelWidth", "nameOptions", "type", "options", "dependsOn", "filterBack", "defaultSize", "nextPageLabel", "firstPageLabel", "lastPageLabel", "previousPageLabel", "range"], outputs: ["closed", "opened", "emitValue"] }, { kind: "component", type: i12.ArqDateTimepickerComponent, selector: "arq-datetimepicker", inputs: ["withHours", "hint", "disabled"] }, { kind: "component", type: i13.ArqInputNumberComponent, selector: "arq-input-number", inputs: ["maxLength", "append"] }, { kind: "component", type: i14.MatTable, selector: "mat-table, table[mat-table]", exportAs: ["matTable"] }, { kind: "directive", type: i14.MatHeaderCellDef, selector: "[matHeaderCellDef]" }, { kind: "directive", type: i14.MatHeaderRowDef, selector: "[matHeaderRowDef]", inputs: ["matHeaderRowDef", "matHeaderRowDefSticky"] }, { kind: "directive", type: i14.MatColumnDef, selector: "[matColumnDef]", inputs: ["sticky", "matColumnDef"] }, { kind: "directive", type: i14.MatCellDef, selector: "[matCellDef]" }, { kind: "directive", type: i14.MatRowDef, selector: "[matRowDef]", inputs: ["matRowDefColumns", "matRowDefWhen"] }, { kind: "directive", type: i14.MatHeaderCell, selector: "mat-header-cell, th[mat-header-cell]" }, { kind: "directive", type: i14.MatCell, selector: "mat-cell, td[mat-cell]" }, { kind: "component", type: i14.MatHeaderRow, selector: "mat-header-row, tr[mat-header-row]", exportAs: ["matHeaderRow"] }, { kind: "component", type: i14.MatRow, selector: "mat-row, tr[mat-row]", exportAs: ["matRow"] }, { kind: "directive", type: i14.MatNoDataRow, selector: "ng-template[matNoDataRow]" }, { kind: "component", type: i15.MatCheckbox, selector: "mat-checkbox", inputs: ["disableRipple", "color", "tabIndex"], exportAs: ["matCheckbox"] }, { kind: "component", type: i16.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "component", type: i17.MatFormField, selector: "mat-form-field", inputs: ["hideRequiredMarker", "color", "floatLabel", "appearance", "subscriptSizing", "hintLabel"], exportAs: ["matFormField"] }, { kind: "directive", type: i17.MatLabel, selector: "mat-label" }, { kind: "component", type: i18.MatPaginator, selector: "mat-paginator", inputs: ["disabled"], exportAs: ["matPaginator"] }, { kind: "directive", type: i19.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { kind: "directive", type: i20.MatTooltip, selector: "[matTooltip]", exportAs: ["matTooltip"] }, { kind: "directive", type: i21.MatSort, selector: "[matSort]", inputs: ["matSortDisabled", "matSortActive", "matSortStart", "matSortDirection", "matSortDisableClear"], outputs: ["matSortChange"], exportAs: ["matSort"] }, { kind: "component", type: i21.MatSortHeader, selector: "[mat-sort-header]", inputs: ["disabled", "mat-sort-header", "arrowPosition", "start", "sortActionDescription", "disableClear"], exportAs: ["matSortHeader"] }, { kind: "component", type: i22.MatButton, selector: "    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  ", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { kind: "pipe", type: i4.DatePipe, name: "date" }], encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: ArqDatatableComponent, decorators: [{
            type: Component,
            args: [{ selector: 'arq-datatable', encapsulation: ViewEncapsulation.None, template: "<div class=\"mat-elevation-z8\">\r\n  <!-- TABLE HEADER  -->\r\n  <div *ngIf=\"tableConfig.headerTableString\" [innerHTML]=\"tableConfig.headerTableString\"></div>\r\n  <div *ngIf=\"tableConfig.headerTable\" style=\"margin: 1em; display: flex; justify-content: flex-end\">\r\n    <ng-container>\r\n      <button\r\n        style=\"margin-left: 1em; margin-top: 1em\"\r\n        mat-raised-button\r\n        type=\"button\"\r\n        *ngFor=\"let btn of tableConfig.headerTable\"\r\n        [color]=\"btn.color ? btn.color : 'primary'\"\r\n        [matTooltip]=\"btn.tooltip ? btn.tooltip : ''\"\r\n        (click)=\"btn.action(this)\">\r\n        <mat-icon *ngIf=\"btn.icon\">{{ btn.icon }}</mat-icon>\r\n        {{ btn.label }}\r\n      </button>\r\n    </ng-container>\r\n  </div>\r\n\r\n  <!-- FILTER -->\r\n  <mat-form-field\r\n    appearance=\"outline\"\r\n    subscriptSizing=\"dynamic\"\r\n    class=\"table-filter\"\r\n    *ngIf=\"tableConfig.filterType === 'global' || tableConfig.filterType === 'both'\">\r\n    <mat-label>{{ tableConfig.filterLabel }}</mat-label>\r\n    <input\r\n      matInput\r\n      (keyup)=\"filterHandler($event, 'global')\"\r\n      placeholder=\"{{ tableConfig.filterPlaceholder }}\"\r\n      #input />\r\n  </mat-form-field>\r\n\r\n  <!-- TABLE -->\r\n  <table\r\n    #table\r\n    mat-table\r\n    [dataSource]=\"dataSource\"\r\n    class=\"mat-elevation-z8\"\r\n    matSort\r\n    (matSortChange)=\"sortHandler($event)\">\r\n    <!-- Select column -->\r\n    <ng-container matColumnDef=\"selectColumn\" *ngIf=\"tableConfig.selectColumn\">\r\n      <th\r\n        mat-header-cell\r\n        class=\"header-datatable\"\r\n        *matHeaderCellDef\r\n        style=\"cursor: pointer !important\"\r\n        (click)=\"cleanSelectionRows()\">\r\n        <!-- <mat-checkbox [checked]=\"false\" [disabled]=\"true\"></mat-checkbox> -->\r\n        ({{ selectedRows.length }})\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"toggleSelectRow(element)\">\r\n        <mat-checkbox [checked]=\"checkSelectedRow(element)\" [disabled]=\"true\"></mat-checkbox>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- Dynamic Columns -->\r\n    <ng-container [matColumnDef]=\"col.key\" *ngFor=\"let col of _columnsSchema\">\r\n      <ng-container *ngIf=\"tableConfig.disableSorting || col.isSortable === false\">\r\n        <th mat-header-cell class=\"header-datatable\" *matHeaderCellDef>{{ col.label }}</th>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"!tableConfig.disableSorting && col.isSortable !== false\">\r\n        <th mat-header-cell class=\"header-datatable\" *matHeaderCellDef mat-sort-header>\r\n          {{ col.label }}\r\n        </th>\r\n      </ng-container>\r\n      <!-- Data rows -->\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"eventRow(element)\">\r\n        <!-- Normal rows -->\r\n        <div\r\n          [ngSwitch]=\"col.type\"\r\n          *ngIf=\"!element.isEdit && !element.isCreate\"\r\n          (contextmenu)=\"displayContextMenu($event, element); (false)\">\r\n          <span *ngSwitchCase=\"'date'\">\r\n            {{ element[col.key] | date : 'dd/MM/yyyy' }}\r\n          </span>\r\n          <span *ngSwitchCase=\"'datetimepicker'\">\r\n            {{ element[col.key] | date : 'dd/MM/yyyy HH:mm' }}\r\n          </span>\r\n          <span *ngSwitchCase=\"'boolean'\">\r\n            {{ element[col.key] ? '&#10003;' : '&#10005;' }}\r\n          </span>\r\n          <span *ngSwitchCase=\"'select'\">\r\n            {{ findValue(element[col.key], col.data, col.lang, col.type) }}\r\n          </span>\r\n          <span *ngSwitchCase=\"'autocomplete'\">\r\n            {{ findValue(element[col.key], col.data, col.lang, col.type) }}\r\n          </span>\r\n          <span *ngSwitchCase=\"'image'\">\r\n            <img [src]=\"findSrc(element[col.key], col.data)\" />\r\n          </span>\r\n          <span *ngSwitchCase=\"'calc'\">\r\n            {{ col?.calculate(element) }}\r\n          </span>\r\n          <span *ngSwitchDefault>\r\n            {{ col.subkey ? this.obtenerElemento(element, col.key) : element[col.key] }}\r\n          </span>\r\n        </div>\r\n\r\n        <!-- Editing rows -->\r\n\r\n        <div [ngSwitch]=\"col.type\" *ngIf=\"element.isEdit && _form\" class=\"inputs-edit\">\r\n          <div *ngSwitchCase=\"'date'\" [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"editCol(col, element) && !col.subkey; else elseBlockNoEditable\">\r\n              <arq-datepicker [fGroup]=\"_form\" [value]=\"col.key\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'datetimepicker'\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"editCol(col, element) && !col.subkey; else elseBlockNoEditable\">\r\n              <arq-datetimepicker [value]=\"col.key\" [fGroup]=\"_form\"></arq-datetimepicker>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'boolean'\"\r\n            appearance=\"outline\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"editCol(col, element) && !col.subkey; else elseBlockNoEditable\">\r\n              <arq-checkbox-basic [value]=\"col.key\" [fGroup]=\"this._form\"></arq-checkbox-basic>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'select'\"\r\n            appearance=\"outline\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"editCol(col, element) && !col.subkey; else elseBlockNoEditable\">\r\n              <arq-select\r\n                [emptyOption]=\"true\"\r\n                [value]=\"col.key\"\r\n                [fGroup]=\"this._form\"\r\n                [selectOptionsList]=\"col.data || col.dataFn\"\r\n                (change)=\"inputHandler($event, element.id, col.key)\"\r\n                [fullObject]=\"col.fullObject\"\r\n                [lang]=\"col.lang\">\r\n              </arq-select>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'autocomplete'\"\r\n            appearance=\"outline\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"editCol(col, element) && !col.subkey; else elseBlockNoEditable\">\r\n              <arq-autocomplete\r\n                [options]=\"autocFilter(col.dataFnReq, element[col.key])\"\r\n                [panelWidth]=\"col.panelWidth || 'auto'\"\r\n                [dependsOn]=\"col.dependsOn\"\r\n                [value]=\"col.key\"\r\n                [fGroup]=\"this._form\"\r\n                (change)=\"inputHandler($event, element.id, col.key)\"\r\n                [lang]=\"col.lang\"\r\n                [defaultSize]=\"col.defaultSize || 10\">\r\n              </arq-autocomplete>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'number'\"\r\n            appearance=\"outline\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"editCol(col, element) && !col.subkey; else elseBlockNoEditable\">\r\n              <arq-input-number\r\n                [value]=\"col.key\"\r\n                [fGroup]=\"this._form\"\r\n                (change)=\"inputHandler($event, element.id, col.key)\">\r\n              </arq-input-number>\r\n            </div>\r\n          </div>\r\n\r\n          <div *ngSwitchDefault [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"editCol(col, element) && !col.subkey; else elseBlockNoEditable\">\r\n              <arq-text-input\r\n                [value]=\"col.key\"\r\n                [fGroup]=\"this._form\"\r\n                [maxLength]=\"col.maxLength ? col.maxLength : 100\"\r\n                (change)=\"inputHandler($event, element.id, col.key)\">\r\n              </arq-text-input>\r\n            </div>\r\n          </div>\r\n\r\n          <ng-template #elseBlockNoEditable>\r\n            <div [ngSwitch]=\"col.type\">\r\n              <span *ngSwitchCase=\"'date'\">\r\n                {{ element[col.key] | date : 'dd/MM/yyyy' }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'datetimepicker'\">\r\n                {{ element[col.key] | date : 'dd/MM/yyyy' }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'boolean'\">\r\n                {{ element[col.key] ? '&#10003;' : '&#10005;' }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'select'\">\r\n                {{ findValue(element[col.key], col.data || col.dataFn, col.lang, col.type) }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'autocomplete'\">\r\n                {{ findValue(element[col.key], col.data || col.dataFnReq, col.lang, col.type) }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'image'\">\r\n                <img [src]=\"findSrc(element[col.key], col.data)\" />\r\n              </span>\r\n              <span *ngSwitchDefault>\r\n                {{ col.subkey ? this.obtenerElemento(element, col.key) : element[col.key] }}\r\n              </span>\r\n            </div>\r\n          </ng-template>\r\n        </div>\r\n\r\n        <div [ngSwitch]=\"col.type\" *ngIf=\"element.isCreate && fg\" class=\"inputs-edit\">\r\n          <div *ngSwitchCase=\"'date'\" [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"col.isCreable !== false && !col.subkey; else elseBlockShow\">\r\n              <arq-datepicker [fGroup]=\"fg\" [value]=\"col.key\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'datetimepicker'\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"col.isCreable !== false && !col.subkey; else elseBlockShow\">\r\n              <arq-datetimepicker [value]=\"col.key\" [fGroup]=\"fg\"></arq-datetimepicker>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'boolean'\"\r\n            appearance=\"outline\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"col.isCreable !== false && !col.subkey; else elseBlockShow\">\r\n              <arq-checkbox-basic [value]=\"col.key\" [fGroup]=\"fg\"></arq-checkbox-basic>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'select'\"\r\n            appearance=\"outline\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"col.isCreable !== false && !col.subkey; else elseBlockShow\">\r\n              <arq-select\r\n                [fullObject]=\"col.fullObject\"\r\n                [emptyOption]=\"true\"\r\n                [value]=\"col.key\"\r\n                [fGroup]=\"fg\"\r\n                [selectOptionsList]=\"col.data || col.dataFn\"\r\n                (change)=\"inputHandler($event, element.id, col.key)\"\r\n                [lang]=\"col.lang\">\r\n              </arq-select>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'autocomplete'\"\r\n            appearance=\"outline\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"col.isCreable !== false && !col.subkey; else elseBlockShow\">\r\n              <arq-autocomplete\r\n                [options]=\"autocFilter(col.dataFnReq, element[col.key])\"\r\n                [panelWidth]=\"col.panelWidth || 'auto'\"\r\n                [dependsOn]=\"col.dependsOn\"\r\n                [value]=\"col.key\"\r\n                [fGroup]=\"fg\"\r\n                (change)=\"inputHandler($event, element.id, col.key)\"\r\n                [lang]=\"col.lang\"\r\n                [defaultSize]=\"col.defaultSize || 10\">\r\n              </arq-autocomplete>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'number'\"\r\n            appearance=\"outline\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"col.isCreable !== false && !col.subkey; else elseBlockShow\">\r\n              <arq-input-number [value]=\"col.key\" [fGroup]=\"fg\" (change)=\"inputHandler($event, element.id, col.key)\">\r\n              </arq-input-number>\r\n            </div>\r\n          </div>\r\n\r\n          <div *ngSwitchDefault [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"col.isCreable !== false && !col.subkey; else elseBlockShow\">\r\n              <arq-text-input\r\n                [value]=\"col.key\"\r\n                [fGroup]=\"fg\"\r\n                [maxLength]=\"col.maxLength ? col.maxLength : 100\"\r\n                (change)=\"inputHandler($event, element.id, col.key)\">\r\n              </arq-text-input>\r\n            </div>\r\n          </div>\r\n\r\n          <ng-template #elseBlockShow>\r\n            <div [ngSwitch]=\"col.type\">\r\n              <span *ngSwitchCase=\"'date'\">\r\n                {{ element[col.key] | date : 'dd/MM/yyyy' }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'datetimepicker'\">\r\n                {{ element[col.key] | date : 'dd/MM/yyyy' }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'boolean'\">\r\n                {{ element[col.key] ? '&#10003;' : '&#10005;' }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'select'\">\r\n                {{ findValue(element[col.key], col.data || col.dataFn, col.lang, col.type) }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'autocomplete'\">\r\n                {{ findValue(element[col.key], col.data || col.dataFnReq, col.lang, col.type) }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'image'\">\r\n                <img [src]=\"findSrc(element[col.key], col.data)\" />\r\n              </span>\r\n              <span *ngSwitchDefault>\r\n                {{ col.subkey ? this.obtenerElemento(element, col.key) : element[col.key] }}\r\n              </span>\r\n            </div>\r\n          </ng-template>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- Actions Columns -->\r\n    <ng-container matColumnDef=\"actions\" *ngIf=\"tableConfig.actions?.length\">\r\n      <th mat-header-cell class=\"header-datatable\" *matHeaderCellDef>\r\n        {{ tableConfig.actionColLabel }}\r\n        <arq-button\r\n          *ngIf=\"tableConfig.newRowInActionsTH\"\r\n          class=\"material-icons arq-toolbar-menu add-button\"\r\n          [ngClass]=\"{ disabled: readonly || _isEditing }\"\r\n          (click)=\"addNewRow()\"\r\n          [matTooltip]=\"readonly ? '' : 'Crear'\"\r\n          color=\"primary\"\r\n          [icon]=\"'add_box'\"\r\n          [tipoButton]=\"'icon'\"\r\n          [readonly]=\"readonly || _isEditing\">\r\n        </arq-button>\r\n\r\n        <ng-template [ngIf]=\"tableConfig.newRowInActionsTH && showFilters\">\r\n          <arq-button\r\n            *ngIf=\"hideIcon\"\r\n            class=\"material-icons arq-toolbar-menu add-button\"\r\n            (click)=\"hideFilter(true)\"\r\n            matTooltip=\"ocultar filtros\"\r\n            color=\"primary\"\r\n            [icon]=\"'visibility'\"\r\n            [tipoButton]=\"'icon'\">\r\n          </arq-button>\r\n          <arq-button\r\n            *ngIf=\"!hideIcon\"\r\n            class=\"material-icons arq-toolbar-menu add-button\"\r\n            (click)=\"hideFilter(false)\"\r\n            matTooltip=\"ocultar filtros\"\r\n            color=\"primary\"\r\n            [icon]=\"'visibility_off'\"\r\n            [tipoButton]=\"'icon'\">\r\n          </arq-button>\r\n        </ng-template>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element\" class=\"noCursor\">\r\n        <div class=\"action-buttons\" style=\"display: flex\">\r\n          <ng-container *ngIf=\"!element.isEdit && !element.isCreate\">\r\n            <ng-container *ngFor=\"let action of tableConfig.actions\">\r\n              <ng-container *ngIf=\"action.displayWhenDisabled || (!action.displayWhenDisabled && !readonly)\">\r\n                <button\r\n                  mat-button\r\n                  *ngIf=\"!(action.displayCondition && !action.displayCondition(element)); else hiddenButton\"\r\n                  class=\"btn-strech\"\r\n                  (click)=\"this.actionHandler(action, element)\"\r\n                  [matTooltip]=\"action.tooltip\"\r\n                  [color]=\"action.color || 'primary'\"\r\n                  [disabled]=\"!(element.isCreate || element.isEdit) && _isEditing\">\r\n                  <mat-icon *ngIf=\"!action.label\">{{ action.icon }}</mat-icon>\r\n                  <span *ngIf=\"action.label\">{{ action.label }}</span>\r\n                </button>\r\n              </ng-container>\r\n              <ng-template #hiddenButton>\r\n                <button mat-button mat-button class=\"hidden\" class=\"hidden\"></button>\r\n              </ng-template>\r\n            </ng-container>\r\n          </ng-container>\r\n          <ng-container *ngIf=\"(element.isEdit || element.isCreate) && _isEditing\">\r\n            <div class=\"btn-edit\">\r\n              <arq-button\r\n                class=\"material-icons arq-toolbar-menu save-button\"\r\n                (click)=\"editRow(element); showActionsCol(false)\"\r\n                matTooltip=\"Guardar Cambios\"\r\n                color=\"primary\"\r\n                [icon]=\"'check_circle'\"\r\n                [tipoButton]=\"'icon'\"></arq-button>\r\n              <arq-button\r\n                class=\"material-icons arq-toolbar-menu cancel-button\"\r\n                (click)=\"showActionsCol(false); stopEditing(element)\"\r\n                matTooltip=\"Cancelar\"\r\n                color=\"warn\"\r\n                [icon]=\"'cancel'\"\r\n                [tipoButton]=\"'icon'\"></arq-button>\r\n            </div>\r\n          </ng-container>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- Filter Rows -->\r\n    <ng-container [matColumnDef]=\"'selectColumnf'\">\r\n      <th mat-header-cell *matHeaderCellDef></th>\r\n    </ng-container>\r\n    <ng-container [matColumnDef]=\"col.key + 'f'\" *ngFor=\"let col of _columnsSchema\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        <ng-container\r\n          *ngIf=\"\r\n            col.isFilterable !== false &&\r\n            (tableConfig.filterType === 'column' || tableConfig.filterType === 'both') &&\r\n            col.key !== 'selectColumn' &&\r\n            col.key !== 'actions'\r\n          \">\r\n          <mat-form-field\r\n            class=\"filter-toolbar\"\r\n            subscriptSizing=\"dynamic\"\r\n            [ngClass]=\"{ small: true }\"\r\n            appearance=\"outline\">\r\n            <input\r\n              matInput\r\n              [disabled]=\"this._isEditing\"\r\n              (keyup)=\"filterHandler($event, col.key)\"\r\n              placeholder=\"{{ tableConfig.filterLabel }}\" />\r\n          </mat-form-field>\r\n        </ng-container>\r\n      </th>\r\n    </ng-container>\r\n    <ng-container [matColumnDef]=\"'actionsf'\">\r\n      <th mat-header-cell *matHeaderCellDef></th>\r\n    </ng-container>\r\n\r\n    <!-- HEADERS AND FILTERS -->\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr\r\n      mat-header-row\r\n      *matHeaderRowDef=\"iterateAndF(displayedColumns)\"\r\n      [ngClass]=\"{ hidden_row: tableConfig.filterType === 'hide' }\"></tr>\r\n    <tr\r\n      mat-row\r\n      *matRowDef=\"let row; columns: displayedColumns\"\r\n      [style.background-color]=\"rowClicked === row.id ? '#f2f2f2' : ''\"></tr>\r\n\r\n    <!-- Row shown when there is no matching data. -->\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n      <td *ngIf=\"!isLoading\" class=\"mat-cell\" colspan=\"4\">{{ tableConfig.noDataString }}</td>\r\n    </tr>\r\n  </table>\r\n\r\n  <!-- PAGINATOR -->\r\n  <mat-paginator\r\n    [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n    showFirstLastButtons\r\n    [pageSize]=\"tableConfig.pageSize\"\r\n    [length]=\"totalElements\"\r\n    (page)=\"nextPage($event)\">\r\n  </mat-paginator>\r\n\r\n  <!-- TABLE FOOTER  -->\r\n  <div *ngIf=\"tableConfig.footerTableString\" [innerHTML]=\"tableConfig.footerTableString\"></div>\r\n  <div *ngIf=\"tableConfig.footerTable\" style=\"margin: 1em; display: flex; justify-content: flex-end\">\r\n    <ng-container>\r\n      <button\r\n        mat-stroked-button\r\n        *ngFor=\"let btn of tableConfig.footerTable\"\r\n        [color]=\"btn.color ? btn.color : 'primary'\"\r\n        [matTooltip]=\"btn.tooltip ? btn.tooltip : ''\"\r\n        (click)=\"btn.action()\">\r\n        <mat-icon *ngIf=\"btn.icon\">{{ btn.icon }}</mat-icon>\r\n        {{ btn.label }}\r\n      </button>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n\r\n<!-- CONTEXT-MENU -->\r\n<arq-context-menu\r\n  *ngIf=\"rightClickMenuItems.length > 0 && isDisplayContextMenu\"\r\n  [contextMenuItems]=\"rightClickMenuItems\"\r\n  (onContextMenuItemClick)=\"$event.data.action($event.data.row); showActionsCol()\"\r\n  [menuPositions]=\"rightClickMenuPositions\">\r\n</arq-context-menu>\r\n", styles: ["table{overflow:scroll}table,.table-filter{width:98%}.header-datatable{font-weight:700;text-align:left;font-size:.9em;color:#1e1d1d;background-color:#e0e0e0!important;border:2px solid;border-color:#fff;text-transform:uppercase}.header-datatable:hover{background-color:#0c556d!important;color:#fff}.mat-button.mat-small{min-width:1%}.hidden_row{display:none}.disabled{cursor:not-allowed}.hidden{opacity:0;pointer-events:none}.mat-mdc-row:hover .mat-mdc-cell{background-color:#e0e0e0}.mat-mdc-row .mat-mdc-cell{cursor:pointer}.noCursor{cursor:default!important}.mat-mdc-table .mdc-data-table__header-row{height:30px}.mat-mdc-icon-button.mat-mdc-button-base{height:auto}.mdc-data-table__cell,.mdc-data-table__header-cell{padding:7px!important}.filter-toolbar,.filter-toolbar .mat-mdc-form-field-infix{width:100%}.inputs-edit .type-date.mat-mdc-form-field{padding-bottom:0!important}.scroll-custom p:not(:last-child){margin-bottom:1rem}.scroll-custom::-webkit-scrollbar{height:8px;width:8px;border:4px solid #d5d5d5}.scroll-custom::-webkit-scrollbar-thumb{background:#ccc;border-radius:4px}.scroll-custom::-webkit-scrollbar-thumb:active{background-color:#999}.scroll-custom::-webkit-scrollbar-thumb:hover{background:#b3b3b3;box-shadow:0 0 2px 1px #0003}.scroll-custom::-webkit-scrollbar-track{background:#e1e1e1;border-radius:4px}.scroll-custom::-webkit-scrollbar-track:hover,.scroll-custom::-webkit-scrollbar-track:active{background:#d4d4d4}.scroll-custom::-webkit-scrollbar-thumb:horizontal{border-radius:10px}.btn-strech{padding-top:0!important;padding-bottom:0!important}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.FormBuilder }, { type: i2.ArqDialogService }, { type: i3.ArqSpinnerService }]; }, propDecorators: { _columnsSchema: [{
                type: Input,
                args: ['columnsSchema']
            }], _tableConfig: [{
                type: Input,
                args: ['tableConfig']
            }], loadedData$: [{
                type: Input,
                args: ['loadedData']
            }], _loadDataFn: [{
                type: Input,
                args: ['loadDataFn']
            }], refreshData$: [{
                type: Input,
                args: ['refreshData']
            }], loadDataEvent$: [{
                type: Output,
                args: ['loadDataEvent']
            }], selectEvent$: [{
                type: Output,
                args: ['selectEvent']
            }], _form: [{
                type: Input,
                args: ['form']
            }], _isEditing: [{
                type: Input,
                args: ['isEditing']
            }], itemsPerPageLabel: [{
                type: Input,
                args: ['itemsPerPageLabel']
            }], nextPageLabel: [{
                type: Input,
                args: ['nextPageLabel']
            }], firstPageLabel: [{
                type: Input,
                args: ['firstPageLabel']
            }], lastPageLabel: [{
                type: Input,
                args: ['lastPageLabel']
            }], previousPageLabel: [{
                type: Input,
                args: ['previousPageLabel']
            }], range: [{
                type: Input,
                args: ['range']
            }], _loadDataMantFn: [{
                type: Input,
                args: ['loadDataMantFn']
            }], paginator: [{
                type: ViewChild,
                args: [MatPaginator]
            }], event: [{
                type: HostListener,
                args: ['document:click']
            }, {
                type: HostListener,
                args: ['document:scroll', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJxLWRhdGF0YWJsZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9hcnEtc2RrL3NyYy9saWIvY29tcG9uZW50cy9hcnEtZGF0YXRhYmxlL2FycS1kYXRhdGFibGUuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vYXJxLXNkay9zcmMvbGliL2NvbXBvbmVudHMvYXJxLWRhdGF0YWJsZS9hcnEtZGF0YXRhYmxlLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFFTCxTQUFTLEVBQ1QsWUFBWSxFQUNaLFlBQVksRUFDWixLQUFLLEVBSUwsTUFBTSxFQUVOLFNBQVMsRUFDVCxpQkFBaUIsRUFDbEIsTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUFFLFlBQVksRUFBYSxNQUFNLDZCQUE2QixDQUFDO0FBQ3RFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzdELE9BQU8sRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFRLFNBQVMsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUNyRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFFdEQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFFckUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVU1RCxNQUFNLGNBQWMsR0FBdUI7SUFDekMsVUFBVSxFQUFFLE1BQU07SUFDbEIsaUJBQWlCLEVBQUUsWUFBWTtJQUMvQixXQUFXLEVBQUUsU0FBUztJQUN0QixZQUFZLEVBQUUsY0FBYztJQUU1QixPQUFPLEVBQUUsRUFBRTtJQUNYLG9CQUFvQixFQUFFLEtBQUs7SUFDM0IsY0FBYyxFQUFFLEVBQUU7SUFDbEIsaUJBQWlCLEVBQUUsS0FBSztJQUN4QixhQUFhLEVB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LENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIEFmdGVyVmlld0luaXQsXHJcbiAgQ29tcG9uZW50LFxyXG4gIEV2ZW50RW1pdHRlcixcclxuICBIb3N0TGlzdGVuZXIsXHJcbiAgSW5wdXQsXHJcbiAgT25DaGFuZ2VzLFxyXG4gIE9uRGVzdHJveSxcclxuICBPbkluaXQsXHJcbiAgT3V0cHV0LFxyXG4gIFNpbXBsZUNoYW5nZXMsXHJcbiAgVmlld0NoaWxkLFxyXG4gIFZpZXdFbmNhcHN1bGF0aW9uXHJcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEZvcm1CdWlsZGVyLCBGb3JtR3JvdXAgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IE1hdFBhZ2luYXRvciwgUGFnZUV2ZW50IH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvcGFnaW5hdG9yJztcclxuaW1wb3J0IHsgTWF0VGFibGVEYXRhU291cmNlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvdGFibGUnO1xyXG5pbXBvcnQgeyBmaW5hbGl6ZSwgb2YsIHRha2UsIHRha2VVbnRpbCB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcy9pbnRlcm5hbC9PYnNlcnZhYmxlJztcclxuXHJcbmltcG9ydCB7IGNoZWNrUmVxdWlyZWRGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9jb3JlL3V0aWxzL2Jhc2ljLnV0aWwnO1xyXG5pbXBvcnQgeyBBcnFEaWFsb2dTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vbGliL3NlcnZpY2VzL2FycS1kaWFsb2cuc2VydmljZSc7XHJcbmltcG9ydCB7IEFycUJhc2VDb21wb25lbnQgfSBmcm9tICcuLi8uLi8uLi9saWIvdXRpbHMvdXRpbHMnO1xyXG5pbXBvcnQgeyBBcnFQYWdlYWJsZVJlcXVlc3QsIEFycVBhZ2VhYmxlUmVzcG9uc2UgfSBmcm9tICcuLi8uLi9pbnRlcmZhY2VzL2FycS1iYXNpYy5pbnRlcmZhY2UnO1xyXG5pbXBvcnQge1xyXG4gIEFycURhdGF0YWJsZUFjdGlvbnMsXHJcbiAgQXJxRGF0YXRhYmxlQ29sdW1uc1NjaGVtYSxcclxuICBBcnFEYXRhdGFibGVDb25maWcsXHJcbiAgQXJxRGF0YXRhYmxlU2VsZWN0RXZlbnRcclxufSBmcm9tICcuL2FycS1kYXRhdGFibGUuaW50ZXJmYWNlJztcclxuaW1wb3J0IHsgQXJxU3Bpbm5lclNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9hcnEtc3Bpbm5lci5zZXJ2aWNlJztcclxuXHJcbmNvbnN0IERFRkFVTFRfQ09ORklHOiBBcnFEYXRhdGFibGVDb25maWcgPSB7XHJcbiAgZmlsdGVyVHlwZTogJ2hpZGUnLFxyXG4gIGZpbHRlclBsYWNlaG9sZGVyOiAnRmlsdHJhci4uLicsXHJcbiAgZmlsdGVyTGFiZWw6ICdGaWx0cmFyJyxcclxuICBub0RhdGFTdHJpbmc6ICdObyBoYXkgZGF0b3MnLFxyXG5cclxuICBhY3Rpb25zOiBbXSxcclxuICBhY3Rpb25zSW5Db250ZXh0TWVudTogZmFsc2UsXHJcbiAgYWN0aW9uQ29sTGFiZWw6ICcnLFxyXG4gIG5ld1Jvd0luQWN0aW9uc1RIOiBmYWxzZSxcclxuICBuZXdSb3dJbk1vZGFsOiBmYWxzZSxcclxuXHJcbiAgZGlzYWJsZWQ6IGZhbHNlLFxyXG4gIGRpc2FibGVQYWdpbmF0aW9uOiBmYWxzZSxcclxuICBwYWdlU2l6ZTogNSxcclxuXHJcbiAgc2VsZWN0Q29sdW1uOiBmYWxzZSxcclxuXHJcbiAgZWRpdENhbGxiYWNrOiByb3cgPT4ge30sXHJcbiAgZXZlbnRSb3c6IHJvdyA9PiB7fSxcclxuICBldmVudE5ld1Jvdzogcm93ID0+IHt9LFxyXG4gIHByZXBhcmVGb3JtR3JvdXA6IGZvcm1Hcm91cCA9PiB7fVxyXG59O1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhcnEtZGF0YXRhYmxlJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vYXJxLWRhdGF0YWJsZS5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vYXJxLWRhdGF0YWJsZS5jb21wb25lbnQuY3NzJ10sXHJcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQXJxRGF0YXRhYmxlQ29tcG9uZW50IGV4dGVuZHMgQXJxQmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95LCBBZnRlclZpZXdJbml0LCBPbkNoYW5nZXMge1xyXG4gIC8vIENvbXBvbmVudCBpbnB1dHNcclxuICBASW5wdXQoJ2NvbHVtbnNTY2hlbWEnKSBwdWJsaWMgX2NvbHVtbnNTY2hlbWE6IEFycURhdGF0YWJsZUNvbHVtbnNTY2hlbWFbXSA9IFtdO1xyXG4gIEBJbnB1dCgndGFibGVDb25maWcnKSBwdWJsaWMgX3RhYmxlQ29uZmlnITogQXJxRGF0YXRhYmxlQ29uZmlnO1xyXG5cclxuICBASW5wdXQoJ2xvYWRlZERhdGEnKSBwdWJsaWMgbG9hZGVkRGF0YSQhOiBPYnNlcnZhYmxlPEFycVBhZ2VhYmxlUmVzcG9uc2U+O1xyXG4gIEBJbnB1dCgnbG9hZERhdGFGbicpIHB1YmxpYyBfbG9hZERhdGFGbiE6IChyZXF1ZXN0OiBBcnFQYWdlYWJsZVJlcXVlc3QpID0+IE9ic2VydmFibGU8QXJxUGFnZWFibGVSZXNwb25zZT47XHJcbiAgQElucHV0KCdyZWZyZXNoRGF0YScpIHB1YmxpYyByZWZyZXNoRGF0YSQhOiBPYnNlcnZhYmxlPGFueT47XHJcbiAgQE91dHB1dCgnbG9hZERhdGFFdmVudCcpIHB1YmxpYyBsb2FkRGF0YUV2ZW50JCA9IG5ldyBFdmVudEVtaXR0ZXI8QXJxUGFnZWFibGVSZXF1ZXN0PigpO1xyXG4gIEBPdXRwdXQoJ3NlbGVjdEV2ZW50JykgcHVibGljIHNlbGVjdEV2ZW50JCA9IG5ldyBFdmVudEVtaXR0ZXI8QXJxRGF0YXRhYmxlU2VsZWN0RXZlbnQ+KCk7XHJcblxyXG4gIEBJbnB1dCgnZm9ybScpIHB1YmxpYyBfZm9ybT86IEZvcm1Hcm91cDtcclxuICBASW5wdXQoJ2lzRWRpdGluZycpIHB1YmxpYyBfaXNFZGl0aW5nOiBib29sZWFuID0gZmFsc2U7XHJcbiAgQElucHV0KCdpdGVtc1BlclBhZ2VMYWJlbCcpIHB1YmxpYyBpdGVtc1BlclBhZ2VMYWJlbDogc3RyaW5nID0gJ0l0ZW1zIHBvciBww6FnaW5hJztcclxuICBASW5wdXQoJ25leHRQYWdlTGFiZWwnKSBwdWJsaWMgbmV4dFBhZ2VMYWJlbDogc3RyaW5nID0gJ1NpZ3VpZW50ZSc7XHJcbiAgQElucHV0KCdmaXJzdFBhZ2VMYWJlbCcpIHB1YmxpYyBmaXJzdFBhZ2VMYWJlbDogc3RyaW5nID0gJ1ByaW1lcmEnO1xyXG4gIEBJbnB1dCgnbGFzdFBhZ2VMYWJlbCcpIHB1YmxpYyBsYXN0UGFnZUxhYmVsOiBzdHJpbmcgPSAnw5psdGltYSc7XHJcbiAgQElucHV0KCdwcmV2aW91c1BhZ2VMYWJlbCcpIHB1YmxpYyBwcmV2aW91c1BhZ2VMYWJlbDogc3RyaW5nID0gJ0FudGVyaW9yJztcclxuICBASW5wdXQoJ3JhbmdlJykgcHVibGljIHJhbmdlOiBzdHJpbmcgPSAnZGUnO1xyXG5cclxuICBASW5wdXQoJ2xvYWREYXRhTWFudEZuJykgcHVibGljIF9sb2FkRGF0YU1hbnRGbiE6IChcclxuICAgIHJlcXVlc3Q6IEFycVBhZ2VhYmxlUmVxdWVzdCxcclxuICAgIHRhYmxlPzogc3RyaW5nXHJcbiAgKSA9PiBPYnNlcnZhYmxlPEFycVBhZ2VhYmxlUmVzcG9uc2U+O1xyXG5cclxuICAvLyBDb21wb25lbnQgcHJvcGVydGllc1xyXG4gIEBWaWV3Q2hpbGQoTWF0UGFnaW5hdG9yKSBwdWJsaWMgcGFnaW5hdG9yITogTWF0UGFnaW5hdG9yO1xyXG5cclxuICBwdWJsaWMgZGF0YVNvdXJjZSA9IG5ldyBNYXRUYWJsZURhdGFTb3VyY2U8YW55PigpO1xyXG4gIHB1YmxpYyBkaXNwbGF5ZWRDb2x1bW5zOiBzdHJpbmdbXSA9IFtdO1xyXG4gIHB1YmxpYyB0YWJsZUNvbmZpZzogQXJxRGF0YXRhYmxlQ29uZmlnID0gREVGQVVMVF9DT05GSUc7XHJcblxyXG4gIHB1YmxpYyBkYXRhUmVxdWVzdDogQXJxUGFnZWFibGVSZXF1ZXN0ID0geyBwYWdlOiAwLCBzaXplOiA1IH07XHJcbiAgcHVibGljIHRvdGFsRWxlbWVudHM6IG51bWJlciA9IDA7XHJcbiAgcHVibGljIGlzTG9hZGluZyA9IGZhbHNlO1xyXG5cclxuICAvLyA/P1xyXG4gIHB1YmxpYyB2YWxpZDogYW55ID0ge307XHJcbiAgcHVibGljIGFjdGl2ZVF1ZXJ5RmlsdGVyOiBzdHJpbmcgPSAnJztcclxuICBwdWJsaWMgYWN0aXZlRmlsdGVyOiBhbnkgPSB7fTtcclxuICBwdWJsaWMgZGlzcGxheWVkQ29sdW1uc1N0YXRpYzogc3RyaW5nW10gPSBbJ2NvZGlnbycsICdkZXNjcmlwY2lvbiddO1xyXG5cclxuICAvLyBDb250ZXh0IE1lbnVcclxuICBwdWJsaWMgaXNEaXNwbGF5Q29udGV4dE1lbnU6IGJvb2xlYW4gPSBmYWxzZTtcclxuICBwdWJsaWMgcmlnaHRDbGlja01lbnVQb3NpdGlvbnMhOiB7IHg6IG51bWJlcjsgeTogbnVtYmVyIH07XHJcbiAgcHVibGljIHJpZ2h0Q2xpY2tNZW51SXRlbXM6IGFueSA9IFtdO1xyXG5cclxuICAvLyBTZWxlY3QgZnVuY2lvbmFsaXR5XHJcbiAgcHVibGljIHNlbGVjdGVkUm93czogYW55W10gPSBbXTtcclxuICBwdWJsaWMgY2hlY2tTZWxlY3RlZFJvdyA9IChyb3c6IGFueSk6IGJvb2xlYW4gPT4gISF0aGlzLnNlbGVjdGVkUm93cy5maWx0ZXIoXyA9PiByb3cuaWQgPT09IF8uaWQpLmxlbmd0aDtcclxuXHJcbiAgLy8gVGVtcGxhdGUgRnVuY3Rpb25zXHJcbiAgcHVibGljIGl0ZXJhdGVBbmRGID0gKF86IGFueSk6IGFueSA9PiBfLm1hcCgoYTogYW55KSA9PiBhICsgJ2YnKTsgLy8gQcOxYWRlIGVsIHN1ZmlqbyAnZicgYSBjYWRhIGVsZW1lbnRvIGRlbCBhcnJheVxyXG4gIHB1YmxpYyB0b09mID0gKF86IGFueSk6IGFueSA9PiBvZihfKTtcclxuICBwdWJsaWMgZmluZFZhbHVlID0gKHZhbHVlOiBhbnksIGRhdGE6IGFueSwgbGFuZzogYW55LCB0eXBlOiBhbnkpOiBhbnkgPT4ge1xyXG4gICAgY29uc3QgZGVzY3JpcHRpb24gPSBsYW5nID09ICdjYScgPyAnZGVzY3JpcHRpb25WJyA6ICdkZXNjcmlwdGlvbic7XHJcbiAgICBsZXQgZGF0YU5ldztcclxuXHJcbiAgICAvLyBTaSB0ZW5lbW9zIG9iamV0byBlbiBzZWxlY3QgbyBhdXRvY29tcGxldGUgbm8gbmVjZXNpdGFtb3MgYnVzY2FyIGVuIGVsIGZpbHRyb1xyXG4gICAgaWYgKCh0eXBlID09ICdzZWxlY3QnIHx8IHR5cGUgPT0gJ2F1dG9jb21wbGV0ZScpICYmIHZhbHVlPy52YWx1ZSkge1xyXG4gICAgICByZXR1cm4gdmFsdWVbZGVzY3JpcHRpb25dO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICh0eXBlID09ICdzZWxlY3QnICYmIGRhdGEgJiYgIUFycmF5LmlzQXJyYXkoZGF0YSkpIHtcclxuICAgICAgZGF0YS5zdWJzY3JpYmUoKGU6IGFueSkgPT4gKGRhdGFOZXcgPSBlKSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBkYXRhTmV3ID0gZGF0YTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBwcmV0dGllci1pZ25vcmVcclxuICAgIHJldHVybiAoXHJcbiAgICAgIGRhdGFOZXc/LmZpbmQoKF86IGFueSkgPT4ge1xyXG4gICAgICAgIGlmICghdmFsdWUpIHJldHVybiBmYWxzZTtcclxuICAgICAgICBlbHNlIHJldHVybiAodHlwZW9mIHZhbHVlICE9PSAnc3RyaW5nJykgPyAoXy52YWx1ZSA9PT0gdmFsdWUudmFsdWUpIDogKF8udmFsdWUgPT09IHZhbHVlKVxyXG4gICAgICB9KT8uW2Rlc2NyaXB0aW9uXSB8fCB2YWx1ZVxyXG4gICAgKTtcclxuICB9O1xyXG4gIHB1YmxpYyBmaW5kU3JjID0gKHZhbHVlOiBhbnksIGRhdGE6IGFueSk6IGFueSA9PiB7XHJcbiAgICAvLyBwcmV0dGllci1pZ25vcmVcclxuICAgIHJldHVybiAoXHJcbiAgICAgIGRhdGEuZmluZCgoXzogYW55KSA9PiB7XHJcbiAgICAgICAgaWYgKCF2YWx1ZSkgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIGVsc2UgcmV0dXJuIF8udmFsdWUgPT09IHZhbHVlXHJcbiAgICAgIH0pPy5zcmMgfHwgdmFsdWVcclxuICAgICk7XHJcbiAgfTtcclxuXHJcbiAgcHVibGljIGhpZGVJY29uID0gZmFsc2U7XHJcbiAgcHVibGljIHNob3dGaWx0ZXJzITogYm9vbGVhbjtcclxuICBwdWJsaWMgZm9ybUdyb3VwPzogRm9ybUdyb3VwPGFueT47XHJcbiAgcHVibGljIHJlYWRvbmx5ITogYm9vbGVhbjtcclxuICBwdWJsaWMgZmc6IGFueTtcclxuICBwdWJsaWMgcm93Q2xpY2tlZDogYW55O1xyXG4gIHB1YmxpYyBvcmlnaW5hbEZpbHRlclR5cGUhOiBmYWxzZSB8ICdoaWRlJyB8ICdnbG9iYWwnIHwgJ2NvbHVtbicgfCAnYm90aCcgfCBudWxsIHwgdW5kZWZpbmVkO1xyXG4gIHB1YmxpYyBmZ0NvcHk6IGFueTtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKFxyXG4gICAgcHJpdmF0ZSBmb3JtQnVpbGRlcjogRm9ybUJ1aWxkZXIsXHJcbiAgICBwcml2YXRlIHNlcnZpY2VEaWFsb2c6IEFycURpYWxvZ1NlcnZpY2UsXHJcbiAgICBwcml2YXRlIGFycVNwaW5uZXJTZXJ2aWNlOiBBcnFTcGlubmVyU2VydmljZVxyXG4gICkge1xyXG4gICAgc3VwZXIoKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XHJcbiAgICB0aGlzLmN1c3RvbVBhZ2luYXRvcigpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgdGhpcy5mZyA9IHsgLi4udGhpcy5fZm9ybSB9O1xyXG4gICAgdGhpcy5mZ0NvcHkgPSB7IC4uLnRoaXMuX2Zvcm0gfTtcclxuXHJcbiAgICB0aGlzLl9jb2x1bW5zU2NoZW1hLmZvckVhY2goY29sID0+IHtcclxuICAgICAgaWYgKGNvbC5mdWxsT2JqZWN0ID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICBjb2wuZnVsbE9iamVjdCA9IHRydWU7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKGNvbC5pc0VkaXRhYmxlID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICBjb2wuaXNFZGl0YWJsZSA9IHRydWU7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKCFjb2wuZGVmYXVsdFZhbHVlKSB7XHJcbiAgICAgICAgY29sLmRlZmF1bHRWYWx1ZSA9IG51bGw7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKGNvbC5kYXRhRm5SZXEpIHtcclxuICAgICAgICBjb2wuZGF0YUZuUmVxKHsgcGFnZTogMCwgc2l6ZTogMTAgfSkuc3Vic2NyaWJlKHJlcyA9PiAoY29sLmRhdGEgPSByZXMuY29udGVudCkpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoY29sLmRhdGFGbikge1xyXG4gICAgICAgIGNvbC5kYXRhRm4uc3Vic2NyaWJlKChlOiBhbnkpID0+IChjb2wuZGF0YSA9IGUpKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKGNvbC50eXBlID09ICdjYWxjJykge1xyXG4gICAgICAgIGNvbC5pc0VkaXRhYmxlID0gZmFsc2U7XHJcbiAgICAgICAgY29sLmlzQ3JlYWJsZSA9IGZhbHNlO1xyXG4gICAgICAgIGNvbC5pc1NvcnRhYmxlID0gZmFsc2U7XHJcbiAgICAgICAgaWYgKCFjb2wuY2FsY3VsYXRlKSB7XHJcbiAgICAgICAgICBjb25zb2xlLmVycm9yKCdjYWxjdWxhdGUgZnVuY3Rpb24gaXMgcmVxdWlyZWQgZm9yIGNhbGMgdHlwZScpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgaWYgKCF0aGlzLmxvYWRlZERhdGEkICYmICF0aGlzLmxvYWREYXRhRXZlbnQkKVxyXG4gICAgICBjaGVja1JlcXVpcmVkRmllbGRzKHRoaXMuX2xvYWREYXRhRm4gfHwgdGhpcy5fbG9hZERhdGFNYW50Rm4sICdsb2FkRGF0YUZuJyk7XHJcbiAgICBpZiAoIXRoaXMuX2xvYWREYXRhRm4gJiYgIXRoaXMuX2xvYWREYXRhTWFudEZuKSB7XHJcbiAgICAgIGNoZWNrUmVxdWlyZWRGaWVsZHModGhpcy5sb2FkZWREYXRhJCwgJ2xvYWRlZERhdGEnKTtcclxuICAgICAgY2hlY2tSZXF1aXJlZEZpZWxkcyh0aGlzLmxvYWREYXRhRXZlbnQkLCAnbG9hZERhdGFFdmVudCcpO1xyXG4gICAgfVxyXG4gICAgY2hlY2tSZXF1aXJlZEZpZWxkcyh0aGlzLl9jb2x1bW5zU2NoZW1hLCAnY29sdW1uc1NjaGVtYScpO1xyXG5cclxuICAgIHRoaXMuaW5pdGlhbGl6ZURhdGF0YWJsZSgpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcclxuICAgIGlmIChjaGFuZ2VzKSB7XHJcbiAgICAgIHRoaXMuZGlzcGxheWVkQ29sdW1ucyA9IHRoaXMuX2NvbHVtbnNTY2hlbWFcclxuICAgICAgICA/LmZpbHRlcigoY29sOiBhbnkpID0+IGNvbC5pc0hpZGRlbiAhPSB0cnVlKVxyXG4gICAgICAgIC5tYXAoKGNvbDogYW55KSA9PiBjb2wua2V5KTtcclxuICAgICAgaWYgKHRoaXMudGFibGVDb25maWc/LmFjdGlvbnM/Lmxlbmd0aCAmJiAhdGhpcy50YWJsZUNvbmZpZz8uYWN0aW9uc0luQ29udGV4dE1lbnUpIHRoaXMuc2hvd0FjdGlvbnNDb2woKTtcclxuICAgICAgaWYgKFxyXG4gICAgICAgIGNoYW5nZXNbJ190YWJsZUNvbmZpZyddICYmXHJcbiAgICAgICAgY2hhbmdlc1snX3RhYmxlQ29uZmlnJ11bJ2N1cnJlbnRWYWx1ZSddICYmXHJcbiAgICAgICAgY2hhbmdlc1snX3RhYmxlQ29uZmlnJ11bJ2N1cnJlbnRWYWx1ZSddWydzZWxlY3RDb2x1bW4nXVxyXG4gICAgICApIHtcclxuICAgICAgICB0aGlzLl90YWJsZUNvbmZpZy5zZWxlY3RDb2x1bW4gPSBjaGFuZ2VzWydfdGFibGVDb25maWcnXVsnY3VycmVudFZhbHVlJ11bJ3NlbGVjdENvbHVtbiddO1xyXG4gICAgICAgIHRoaXMudGFibGVDb25maWcuc2VsZWN0Q29sdW1uID0gY2hhbmdlc1snX3RhYmxlQ29uZmlnJ11bJ2N1cnJlbnRWYWx1ZSddWydzZWxlY3RDb2x1bW4nXTtcclxuICAgICAgICB0aGlzLnNob3dTZWxlY3RDb2woY2hhbmdlc1snX3RhYmxlQ29uZmlnJ11bJ2N1cnJlbnRWYWx1ZSddWydzZWxlY3RDb2x1bW4nXSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIHB1YmxpYyBlbmFibGUoKTogdm9pZCB7XHJcbiAgICB0aGlzLnJlYWRvbmx5ID0gZmFsc2U7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZGlzYWJsZSgpOiB2b2lkIHtcclxuICAgIHRoaXMucmVhZG9ubHkgPSB0cnVlO1xyXG4gICAgdGhpcy5zdG9wRWRpdGluZygpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGFjdGlvbigpIHtcclxuICAgIHJldHVybiAocm93OiBhbnkpOiBhbnkgPT4ge1xyXG4gICAgICByb3cuaXNFZGl0ID0gIXJvdy5pc0VkaXQ7XHJcbiAgICAgIGZvciAoY29uc3Qga2V5IGluIHJvdykge1xyXG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocm93LCBrZXkpKSB7XHJcbiAgICAgICAgICB0aGlzLl9mb3JtPy5jb250cm9sc1trZXldPy5zZXRWYWx1ZShyb3dba2V5XSwgeyBlbWl0RXZlbnQ6IGZhbHNlIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBpZiAodGhpcy50YWJsZUNvbmZpZy5wcmVwYXJlRm9ybUdyb3VwICYmIHRoaXMuX2Zvcm0pIHtcclxuICAgICAgICB0aGlzLnRhYmxlQ29uZmlnLnByZXBhcmVGb3JtR3JvdXAodGhpcy5fZm9ybSk7XHJcbiAgICAgICAgdGhpcy5fZm9ybS51cGRhdGVWYWx1ZUFuZFZhbGlkaXR5KHsgZW1pdEV2ZW50OiBmYWxzZSB9KTtcclxuICAgICAgfVxyXG4gICAgICB0aGlzLl9pc0VkaXRpbmcgPSB0cnVlO1xyXG4gICAgICByb3cubmV3Um93ID0gZmFsc2U7XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBpbml0aWFsaXplRGF0YXRhYmxlKCk6IHZvaWQge1xyXG4gICAgdGhpcy5zZXRUYWJsZUNvbmZpZygpO1xyXG5cclxuICAgIHRoaXMuc2hvd0ZpbHRlcnMgPSB0aGlzLnRhYmxlQ29uZmlnLmZpbHRlclR5cGUgPT0gJ2JvdGgnIHx8IHRoaXMudGFibGVDb25maWcuZmlsdGVyVHlwZSA9PSAnY29sdW1uJztcclxuXHJcbiAgICB0aGlzLmRpc3BsYXllZENvbHVtbnMgPSB0aGlzLl9jb2x1bW5zU2NoZW1hPy5maWx0ZXIoKGNvbDogYW55KSA9PiBjb2wuaXNIaWRkZW4gIT0gdHJ1ZSkubWFwKChjb2w6IGFueSkgPT4gY29sLmtleSk7XHJcblxyXG4gICAgaWYgKHRoaXMudGFibGVDb25maWcuYWN0aW9ucz8ubGVuZ3RoICYmICF0aGlzLnRhYmxlQ29uZmlnLmFjdGlvbnNJbkNvbnRleHRNZW51KSB0aGlzLnNob3dBY3Rpb25zQ29sKCk7XHJcbiAgICB0aGlzLnNob3dTZWxlY3RDb2woISF0aGlzLnRhYmxlQ29uZmlnLnNlbGVjdENvbHVtbik7XHJcblxyXG4gICAgaWYgKHRoaXMubG9hZGVkRGF0YSQpIHtcclxuICAgICAgdGhpcy5sb2FkZWREYXRhJC5waXBlKHRha2VVbnRpbCh0aGlzLnVuc3Vic2NyaWJlJCkpLnN1YnNjcmliZSh7XHJcbiAgICAgICAgbmV4dDogKHJlczogYW55KSA9PiB7XHJcbiAgICAgICAgICByZXMgPSB0aGlzLmFkZElkc0lmTmVjZXNhcnkocmVzKTtcclxuICAgICAgICAgIHRoaXMuZGF0YVNvdXJjZS5kYXRhID0gcmVzLmNvbnRlbnQ7XHJcbiAgICAgICAgICB0aGlzLnRvdGFsRWxlbWVudHMgPSByZXMudG90YWxFbGVtZW50cztcclxuICAgICAgICAgIHRoaXMuc3RvcExvYWRpbmcoKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVycm9yOiAoKSA9PiB0aGlzLnN0b3BMb2FkaW5nKClcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHRoaXMucmVmcmVzaERhdGEkKSB0aGlzLnJlZnJlc2hEYXRhJC5waXBlKHRha2VVbnRpbCh0aGlzLnVuc3Vic2NyaWJlJCkpLnN1YnNjcmliZShfID0+IHRoaXMucmVmcmVzaERhdGEoKSk7XHJcblxyXG4gICAgdGhpcy5vcmlnaW5hbEZpbHRlclR5cGUgPSB0aGlzLnRhYmxlQ29uZmlnPy5maWx0ZXJUeXBlO1xyXG5cclxuICAgIHRoaXMudGFibGVDb25maWc/LmFjdGlvbnM/LmZvckVhY2goKGVsZW1lbnQ6IEFycURhdGF0YWJsZUFjdGlvbnMpID0+IHtcclxuICAgICAgaWYgKGVsZW1lbnQuaW5saW5lKSB7XHJcbiAgICAgICAgZWxlbWVudC5hY3Rpb24gPSB0aGlzLmFjdGlvbigpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLnJlZnJlc2hEYXRhKCk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgcmVmcmVzaERhdGEoKTogdm9pZCB7XHJcbiAgICB0aGlzLnN0YXJ0TG9hZGluZygpO1xyXG4gICAgdGhpcy5zdG9wRWRpdGluZ0FsbFJvd3MoKTtcclxuICAgIGlmICh0aGlzLmxvYWREYXRhRXZlbnQkLm9ic2VydmVycy5sZW5ndGgpIHtcclxuICAgICAgdGhpcy5sb2FkRGF0YUV2ZW50JC5lbWl0KHRoaXMuZGF0YVJlcXVlc3QpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaWYgKHRoaXMuX2xvYWREYXRhRm4pIHtcclxuICAgICAgICB0aGlzLl9pc0VkaXRpbmcgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuX2xvYWREYXRhRm4odGhpcy5kYXRhUmVxdWVzdClcclxuICAgICAgICAgIC5waXBlKFxyXG4gICAgICAgICAgICBmaW5hbGl6ZSgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgdGhpcy5faXNFZGl0aW5nID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgdGhpcy5zdG9wTG9hZGluZygpO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgKVxyXG4gICAgICAgICAgLnN1YnNjcmliZShyZXMgPT4ge1xyXG4gICAgICAgICAgICByZXMgPSB0aGlzLmFkZElkc0lmTmVjZXNhcnkocmVzKTtcclxuICAgICAgICAgICAgdGhpcy5kYXRhU291cmNlLmRhdGEgPSByZXMuY29udGVudDtcclxuICAgICAgICAgICAgdGhpcy50b3RhbEVsZW1lbnRzID0gcmVzLnRvdGFsRWxlbWVudHM7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0aGlzLl9sb2FkRGF0YU1hbnRGbih0aGlzLmRhdGFSZXF1ZXN0KVxyXG4gICAgICAgICAgLnBpcGUoXHJcbiAgICAgICAgICAgIGZpbmFsaXplKCgpID0+IHtcclxuICAgICAgICAgICAgICB0aGlzLl9pc0VkaXRpbmcgPSBmYWxzZTtcclxuICAgICAgICAgICAgICB0aGlzLnN0b3BMb2FkaW5nKCk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICApXHJcbiAgICAgICAgICAuc3Vic2NyaWJlKHJlcyA9PiB7XHJcbiAgICAgICAgICAgIHJlcyA9IHRoaXMuYWRkSWRzSWZOZWNlc2FyeShyZXMpO1xyXG4gICAgICAgICAgICB0aGlzLmRhdGFTb3VyY2UuZGF0YSA9IHJlcy5jb250ZW50O1xyXG4gICAgICAgICAgICB0aGlzLnRvdGFsRWxlbWVudHMgPSByZXMudG90YWxFbGVtZW50cztcclxuICAgICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIHN0YXJ0TG9hZGluZygpOiB2b2lkIHtcclxuICAgIHRoaXMuaXNMb2FkaW5nID0gdHJ1ZTtcclxuICAgIHRoaXMuYXJxU3Bpbm5lclNlcnZpY2Uuc2hvdygpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBzdG9wTG9hZGluZygpOiB2b2lkIHtcclxuICAgIHRoaXMuaXNMb2FkaW5nID0gZmFsc2U7XHJcbiAgICB0aGlzLmFycVNwaW5uZXJTZXJ2aWNlLmhpZGUoKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgYWRkSWRzSWZOZWNlc2FyeShyZXM6IEFycVBhZ2VhYmxlUmVzcG9uc2UpOiBBcnFQYWdlYWJsZVJlc3BvbnNlIHtcclxuICAgIHJlcy5jb250ZW50ID0gcmVzLmNvbnRlbnQubWFwKChjb2x1bW4sIGluZGV4KSA9PiB7XHJcbiAgICAgIGlmICghT2JqZWN0LmtleXMoY29sdW1uKS5pbmNsdWRlcygnaWQnKSkgY29sdW1uLmlkID0gaW5kZXg7XHJcbiAgICAgIHJldHVybiBjb2x1bW47XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gcmVzO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBzZXRUYWJsZUNvbmZpZygpOiB2b2lkIHtcclxuICAgIHRoaXMudGFibGVDb25maWcgPSB7XHJcbiAgICAgIGZpbHRlclR5cGU6IHRoaXMuX3RhYmxlQ29uZmlnPy5maWx0ZXJUeXBlID8gdGhpcy5fdGFibGVDb25maWc/LmZpbHRlclR5cGUgOiBERUZBVUxUX0NPTkZJRy5maWx0ZXJUeXBlLFxyXG4gICAgICBmaWx0ZXJQbGFjZWhvbGRlcjogdGhpcy5fdGFibGVDb25maWc/LmZpbHRlclBsYWNlaG9sZGVyXHJcbiAgICAgICAgPyB0aGlzLl90YWJsZUNvbmZpZy5maWx0ZXJQbGFjZWhvbGRlclxyXG4gICAgICAgIDogREVGQVVMVF9DT05GSUcuZmlsdGVyUGxhY2Vob2xkZXIsXHJcbiAgICAgIGZpbHRlckxhYmVsOiB0aGlzLl90YWJsZUNvbmZpZz8uZmlsdGVyTGFiZWwgPyB0aGlzLl90YWJsZUNvbmZpZz8uZmlsdGVyTGFiZWwgOiBERUZBVUxUX0NPTkZJRy5maWx0ZXJMYWJlbCxcclxuICAgICAgbm9EYXRhU3RyaW5nOiB0aGlzLl90YWJsZUNvbmZpZz8ubm9EYXRhU3RyaW5nID8gdGhpcy5fdGFibGVDb25maWc/Lm5vRGF0YVN0cmluZyA6IERFRkFVTFRfQ09ORklHLm5vRGF0YVN0cmluZyxcclxuICAgICAgZm9vdGVyVGFibGU6IHRoaXMuX3RhYmxlQ29uZmlnPy5mb290ZXJUYWJsZSA/IHRoaXMuX3RhYmxlQ29uZmlnPy5mb290ZXJUYWJsZSA6IERFRkFVTFRfQ09ORklHLmZvb3RlclRhYmxlLFxyXG4gICAgICBmb290ZXJUYWJsZVN0cmluZzogdGhpcy5fdGFibGVDb25maWc/LmZvb3RlclRhYmxlU3RyaW5nXHJcbiAgICAgICAgPyB0aGlzLl90YWJsZUNvbmZpZz8uZm9vdGVyVGFibGVTdHJpbmdcclxuICAgICAgICA6IERFRkFVTFRfQ09ORklHLmZvb3RlclRhYmxlU3RyaW5nLFxyXG4gICAgICBoZWFkZXJUYWJsZTogdGhpcy5fdGFibGVDb25maWc/LmhlYWRlclRhYmxlID8gdGhpcy5fdGFibGVDb25maWc/LmhlYWRlclRhYmxlIDogREVGQVVMVF9DT05GSUcuaGVhZGVyVGFibGUsXHJcbiAgICAgIGhlYWRlclRhYmxlU3RyaW5nOiB0aGlzLl90YWJsZUNvbmZpZz8uaGVhZGVyVGFibGVTdHJpbmdcclxuICAgICAgICA/IHRoaXMuX3RhYmxlQ29uZmlnPy5oZWFkZXJUYWJsZVN0cmluZ1xyXG4gICAgICAgIDogREVGQVVMVF9DT05GSUcuaGVhZGVyVGFibGVTdHJpbmcsXHJcbiAgICAgIGFjdGlvbnM6IHRoaXMuX3RhYmxlQ29uZmlnPy5hY3Rpb25zID8gdGhpcy5fdGFibGVDb25maWc/LmFjdGlvbnMgOiBERUZBVUxUX0NPTkZJRy5hY3Rpb25zLFxyXG4gICAgICBhY3Rpb25zSW5Db250ZXh0TWVudTogdGhpcy5fdGFibGVDb25maWc/LmFjdGlvbnNJbkNvbnRleHRNZW51XHJcbiAgICAgICAgPyB0aGlzLl90YWJsZUNvbmZpZz8uYWN0aW9uc0luQ29udGV4dE1lbnVcclxuICAgICAgICA6IERFRkFVTFRfQ09ORklHLmFjdGlvbnNJbkNvbnRleHRNZW51LFxyXG4gICAgICBhY3Rpb25Db2xMYWJlbDogdGhpcy5fdGFibGVDb25maWc/LmFjdGlvbkNvbExhYmVsXHJcbiAgICAgICAgPyB0aGlzLl90YWJsZUNvbmZpZz8uYWN0aW9uQ29sTGFiZWxcclxuICAgICAgICA6IERFRkFVTFRfQ09ORklHLmFjdGlvbkNvbExhYmVsLFxyXG4gICAgICBuZXdSb3dJbkFjdGlvbnNUSDogdGhpcy5fdGFibGVDb25maWc/Lm5ld1Jvd0luQWN0aW9uc1RIXHJcbiAgICAgICAgPyB0aGlzLl90YWJsZUNvbmZpZz8ubmV3Um93SW5BY3Rpb25zVEhcclxuICAgICAgICA6IERFRkFVTFRfQ09ORklHLm5ld1Jvd0luQWN0aW9uc1RILFxyXG4gICAgICBuZXdSb3dJbk1vZGFsOiB0aGlzLl90YWJsZUNvbmZpZz8ubmV3Um93SW5Nb2RhbCA/IHRoaXMuX3RhYmxlQ29uZmlnPy5uZXdSb3dJbk1vZGFsIDogREVGQVVMVF9DT05GSUcubmV3Um93SW5Nb2RhbCxcclxuICAgICAgZGlzYWJsZVBhZ2luYXRpb246IHRoaXMuX3RhYmxlQ29uZmlnPy5kaXNhYmxlUGFnaW5hdGlvblxyXG4gICAgICAgID8gdGhpcy5fdGFibGVDb25maWc/LmRpc2FibGVQYWdpbmF0aW9uXHJcbiAgICAgICAgOiBERUZBVUxUX0NPTkZJRy5kaXNhYmxlUGFnaW5hdGlvbixcclxuICAgICAgZGlzYWJsZVNvcnRpbmc6IHRoaXMuX3RhYmxlQ29uZmlnPy5kaXNhYmxlU29ydGluZ1xyXG4gICAgICAgID8gdGhpcy5fdGFibGVDb25maWc/LmRpc2FibGVTb3J0aW5nXHJcbiAgICAgICAgOiBERUZBVUxUX0NPTkZJRy5kaXNhYmxlU29ydGluZyxcclxuICAgICAgcGFnZVNpemU6IHRoaXMuX3RhYmxlQ29uZmlnPy5wYWdlU2l6ZSA/IHRoaXMuX3RhYmxlQ29uZmlnPy5wYWdlU2l6ZSA6IERFRkFVTFRfQ09ORklHLnBhZ2VTaXplLFxyXG4gICAgICBlZGl0Q2FsbGJhY2s6IHRoaXMuX3RhYmxlQ29uZmlnPy5lZGl0Q2FsbGJhY2sgPyB0aGlzLl90YWJsZUNvbmZpZz8uZWRpdENhbGxiYWNrIDogREVGQVVMVF9DT05GSUcuZWRpdENhbGxiYWNrLFxyXG4gICAgICBldmVudFJvdzogdGhpcy5fdGFibGVDb25maWc/LmV2ZW50Um93ID8gdGhpcy5fdGFibGVDb25maWc/LmV2ZW50Um93IDogREVGQVVMVF9DT05GSUcuZXZlbnRSb3csXHJcbiAgICAgIGV2ZW50TmV3Um93OiB0aGlzLl90YWJsZUNvbmZpZz8uZXZlbnROZXdSb3cgPyB0aGlzLl90YWJsZUNvbmZpZz8uZXZlbnROZXdSb3cgOiBERUZBVUxUX0NPTkZJRy5ldmVudE5ld1JvdyxcclxuICAgICAgc2VsZWN0Q29sdW1uOiB0aGlzLl90YWJsZUNvbmZpZy5zZWxlY3RDb2x1bW4gPyB0aGlzLl90YWJsZUNvbmZpZy5zZWxlY3RDb2x1bW4gOiBERUZBVUxUX0NPTkZJRy5zZWxlY3RDb2x1bW4sXHJcbiAgICAgIHByZXBhcmVGb3JtR3JvdXA6IHRoaXMuX3RhYmxlQ29uZmlnPy5wcmVwYXJlRm9ybUdyb3VwXHJcbiAgICAgICAgPyB0aGlzLl90YWJsZUNvbmZpZz8ucHJlcGFyZUZvcm1Hcm91cFxyXG4gICAgICAgIDogREVGQVVMVF9DT05GSUcucHJlcGFyZUZvcm1Hcm91cFxyXG4gICAgfTtcclxuXHJcbiAgICBpZiAodGhpcy5fdGFibGVDb25maWc/LmRpc2FibGVkKSB7XHJcbiAgICAgIHRoaXMucmVhZG9ubHkgPSB0aGlzLl90YWJsZUNvbmZpZz8uZGlzYWJsZWQ7XHJcbiAgICAgIHRoaXMuX2lzRWRpdGluZyA9IGZhbHNlO1xyXG4gICAgICB0aGlzLl9jb2x1bW5zU2NoZW1hLmZvckVhY2goKGNvbDogQXJxRGF0YXRhYmxlQ29sdW1uc1NjaGVtYSkgPT4ge1xyXG4gICAgICAgIGNvbC5pc0VkaXRhYmxlID0gZmFsc2U7XHJcbiAgICAgICAgY29sLmlzQ3JlYWJsZSA9IGZhbHNlO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmRhdGFSZXF1ZXN0LnNpemUgPSB0aGlzLnRhYmxlQ29uZmlnPy5wYWdlU2l6ZSB8fCA1O1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBjdXN0b21QYWdpbmF0b3IoKTogdm9pZCB7XHJcbiAgICB0aGlzLnBhZ2luYXRvci5faW50bC5pdGVtc1BlclBhZ2VMYWJlbCA9IHRoaXMuaXRlbXNQZXJQYWdlTGFiZWw7XHJcbiAgICB0aGlzLnBhZ2luYXRvci5faW50bC5maXJzdFBhZ2VMYWJlbCA9IHRoaXMuZmlyc3RQYWdlTGFiZWw7XHJcbiAgICB0aGlzLnBhZ2luYXRvci5faW50bC5sYXN0UGFnZUxhYmVsID0gdGhpcy5sYXN0UGFnZUxhYmVsO1xyXG4gICAgdGhpcy5wYWdpbmF0b3IuX2ludGwubmV4dFBhZ2VMYWJlbCA9IHRoaXMubmV4dFBhZ2VMYWJlbDtcclxuICAgIHRoaXMucGFnaW5hdG9yLl9pbnRsLnByZXZpb3VzUGFnZUxhYmVsID0gdGhpcy5wcmV2aW91c1BhZ2VMYWJlbDtcclxuICAgIHRoaXMucGFnaW5hdG9yLl9pbnRsLmdldFJhbmdlTGFiZWwgPSAocGFnZTogbnVtYmVyLCBwYWdlU2l6ZTogbnVtYmVyLCBsZW5ndGg6IG51bWJlcik6IGFueSA9PiB7XHJcbiAgICAgIGNvbnN0IHN0YXJ0ID0gcGFnZSAqIHBhZ2VTaXplICsgMTtcclxuICAgICAgY29uc3QgZW5kID0gKHBhZ2UgKyAxKSAqIHBhZ2VTaXplO1xyXG4gICAgICByZXR1cm4gYCR7c3RhcnR9IC0gJHtlbmR9ICR7dGhpcy5yYW5nZX0gJHtsZW5ndGh9YDtcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgbmV4dFBhZ2UoZXZlbnQ6IFBhZ2VFdmVudCk6IHZvaWQge1xyXG4gICAgdGhpcy5kYXRhUmVxdWVzdC5wYWdlID0gK2V2ZW50LnBhZ2VJbmRleC50b1N0cmluZygpO1xyXG4gICAgdGhpcy5kYXRhUmVxdWVzdC5zaXplID0gK2V2ZW50LnBhZ2VTaXplLnRvU3RyaW5nKCk7XHJcblxyXG4gICAgdGhpcy5yZWZyZXNoRGF0YSgpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGF1dG9jRmlsdGVyKGRhdGE6IGFueSwgdmFsdWU6IGFueSk6IGFueSB7XHJcbiAgICBsZXQgZGF0YU5ldztcclxuICAgIGlmIChkYXRhKSB7XHJcbiAgICAgIGlmICh0eXBlb2YgZGF0YSA9PSAnZnVuY3Rpb24nKSB7XHJcbiAgICAgICAgcmV0dXJuIGRhdGE7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoZGF0YSkpIHtcclxuICAgICAgICAgIGRhdGFOZXcgPSBkYXRhO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBkYXRhLnN1YnNjcmliZSgoZTogYW55KSA9PiAoZGF0YU5ldyA9IGUpKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJldHVybiBkYXRhTmV3Py5maWx0ZXIoKF86IGFueSkgPT5cclxuICAgICAgICBfLmRlc2NyaXB0aW9uLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoKHR5cGVvZiB2YWx1ZSA9PSAnc3RyaW5nJyA/IHZhbHVlIDogdmFsdWUuZGVzY3JpcHRpb24pLnRvTG93ZXJDYXNlKCkpXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZWRpdENvbChjb2w6IGFueSwgcm93OiBhbnkpOiBhbnkge1xyXG4gICAgaWYgKHR5cGVvZiBjb2wuaXNFZGl0YWJsZSA9PSAnYm9vbGVhbicpIHtcclxuICAgICAgcmV0dXJuIGNvbC5pc0VkaXRhYmxlO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBjb2wuaXNFZGl0YWJsZShyb3cpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGVkaXRSb3cocm93OiBhbnkpOiB2b2lkIHtcclxuICAgIGxldCBmb3JtID0gcm93Lm5ld1JvdyA/IHRoaXMuZmcgOiB0aGlzLl9mb3JtO1xyXG4gICAgZm9ybS51cGRhdGVWYWx1ZUFuZFZhbGlkaXR5KCk7XHJcbiAgICBpZiAodGhpcy50YWJsZUNvbmZpZy5lZGl0Q2FsbGJhY2spIHtcclxuICAgICAgY29uc3QgZWRpdENhbGxiYWNrID0gdGhpcy50YWJsZUNvbmZpZy5lZGl0Q2FsbGJhY2soeyAuLi5yb3csIC4uLmZvcm0udmFsdWUgfSwgZm9ybSk7XHJcbiAgICAgIGlmIChlZGl0Q2FsbGJhY2sgaW5zdGFuY2VvZiBPYnNlcnZhYmxlKSB7XHJcbiAgICAgICAgZWRpdENhbGxiYWNrPy5zdWJzY3JpYmUoe1xyXG4gICAgICAgICAgbmV4dDogKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnJlYWRvbmx5ID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMuX2lzRWRpdGluZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICByb3cuaXNFZGl0ID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHJvdy5pc0NyZWF0ZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLnJlZnJlc2hEYXRhKCk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy5yZWFkb25seSA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuX2lzRWRpdGluZyA9IGZhbHNlO1xyXG4gICAgICAgIHJvdy5pc0VkaXQgPSBmYWxzZTtcclxuICAgICAgICByb3cuaXNDcmVhdGUgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLnJlZnJlc2hEYXRhKCk7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ05vdCBlZGl0IGNhbGxiYWNrIGRlZmluZWQnKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHB1YmxpYyBzaG93QWN0aW9uc0NvbChzaG93OiBib29sZWFuID0gdHJ1ZSk6IHZvaWQge1xyXG4gICAgaWYgKHNob3cpIHtcclxuICAgICAgaWYgKCF0aGlzLmRpc3BsYXllZENvbHVtbnMuaW5jbHVkZXMoJ2FjdGlvbnMnKSkgdGhpcy5kaXNwbGF5ZWRDb2x1bW5zLnB1c2goJ2FjdGlvbnMnKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGlmICh0aGlzLnRhYmxlQ29uZmlnLmFjdGlvbnNJbkNvbnRleHRNZW51KVxyXG4gICAgICAgIHRoaXMuZGlzcGxheWVkQ29sdW1ucyA9IHRoaXMuZGlzcGxheWVkQ29sdW1ucy5maWx0ZXIoKGNvbDogc3RyaW5nKSA9PiBjb2wgIT09ICdhY3Rpb25zJyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgaGlkZUZpbHRlcihiOiBib29sZWFuKTogdm9pZCB7XHJcbiAgICB0aGlzLmhpZGVJY29uID0gIWI7XHJcblxyXG4gICAgdGhpcy50YWJsZUNvbmZpZy5maWx0ZXJUeXBlID0gdGhpcy5vcmlnaW5hbEZpbHRlclR5cGU7XHJcbiAgICBpZiAodGhpcy5oaWRlSWNvbikge1xyXG4gICAgICB0aGlzLnRhYmxlQ29uZmlnLmZpbHRlclR5cGUgPSAnaGlkZSc7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgaW5wdXRIYW5kbGVyKGU6IGFueSwgaWQ6IG51bWJlciwga2V5OiBzdHJpbmcpOiB2b2lkIHtcclxuICAgIGlmICghdGhpcy52YWxpZFtpZF0pIHRoaXMudmFsaWRbaWRdID0ge307XHJcbiAgICB0aGlzLnZhbGlkW2lkXVtrZXldID0gZTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBhZGROZXdSb3coKTogdm9pZCB7XHJcbiAgICB0aGlzLnJlYWRvbmx5ID0gdHJ1ZTtcclxuICAgIHRoaXMuZmcgPSB0aGlzLmNsb25lRm9ybUdyb3VwKCk7XHJcblxyXG4gICAgaWYgKHRoaXMudGFibGVDb25maWcucHJlcGFyZUZvcm1Hcm91cCkge1xyXG4gICAgICB0aGlzLnRhYmxlQ29uZmlnLnByZXBhcmVGb3JtR3JvdXAodGhpcy5mZyk7XHJcbiAgICB9XHJcblxyXG4gICAgbGV0IGVsOiBhbnkgPSB7fTtcclxuICAgIGVsID0gdGhpcy5mZy52YWx1ZTtcclxuICAgIGVsLm5ld1JvdyA9IHRydWU7XHJcbiAgICBlbC5pc0NyZWF0ZSA9IHRydWU7XHJcbiAgICBlbC5pc0VkaXQgPSBmYWxzZTtcclxuXHJcbiAgICBpZiAodGhpcy50YWJsZUNvbmZpZy5uZXdSb3dJbk1vZGFsKSB7XHJcbiAgICAgIHRoaXMub3BlbkRpYWxvZyhlbCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9pc0VkaXRpbmcgPSB0cnVlO1xyXG4gICAgICB0aGlzLmRhdGFTb3VyY2UuZGF0YS51bnNoaWZ0KGVsKTtcclxuICAgICAgdGhpcy5kYXRhU291cmNlLmRhdGEgPSB0aGlzLmRhdGFTb3VyY2UuZGF0YTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHB1YmxpYyBvcGVuRGlhbG9nKGVsOiBhbnkpOiB2b2lkIHtcclxuICAgIGNvbnN0IHJlc3A6IGFueSA9IHRoaXMudGFibGVDb25maWcuZXZlbnROZXdSb3cgPyB0aGlzLnRhYmxlQ29uZmlnLmV2ZW50TmV3Um93KGVsKSA6IG51bGw7XHJcblxyXG4gICAgaWYgKHJlc3ApIHtcclxuICAgICAgdGhpcy5zZXJ2aWNlRGlhbG9nLm9wZW4ocmVzcC5kYXRhLCByZXNwLmNvbXBvbmVudCkuc3Vic2NyaWJlKChyZXM6IGFueSkgPT4ge1xyXG4gICAgICAgIGlmIChyZXMpIHtcclxuICAgICAgICAgIHRoaXMuZGF0YVNvdXJjZS5kYXRhLnVuc2hpZnQocmVzKTtcclxuICAgICAgICAgIHRoaXMuZGF0YVNvdXJjZS5kYXRhID0gdGhpcy5kYXRhU291cmNlLmRhdGE7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICAgIHRoaXMucmVhZG9ubHkgPSBmYWxzZTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBzaG93U2VsZWN0Q29sKHNob3c6IGJvb2xlYW4gPSB0cnVlKTogdm9pZCB7XHJcbiAgICBpZiAoc2hvdykge1xyXG4gICAgICBpZiAoIXRoaXMuZGlzcGxheWVkQ29sdW1ucy5pbmNsdWRlcygnc2VsZWN0Q29sdW1uJykpIHRoaXMuZGlzcGxheWVkQ29sdW1ucy51bnNoaWZ0KCdzZWxlY3RDb2x1bW4nKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuZGlzcGxheWVkQ29sdW1ucyA9IHRoaXMuZGlzcGxheWVkQ29sdW1ucy5maWx0ZXIoKGNvbDogc3RyaW5nKSA9PiBjb2wgIT09ICdzZWxlY3RDb2x1bW4nKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIENvbnRleHQgTWVudVxyXG4gIHB1YmxpYyBkaXNwbGF5Q29udGV4dE1lbnUoZXZlbnQ6IHsgY2xpZW50WDogbnVtYmVyOyBjbGllbnRZOiBudW1iZXIgfSwgcm93OiBhbnkpOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLnRhYmxlQ29uZmlnLmFjdGlvbnNJbkNvbnRleHRNZW51KSB7XHJcbiAgICAgIHRoaXMucmlnaHRDbGlja01lbnVJdGVtcyA9IFtdO1xyXG4gICAgICB0aGlzLnRhYmxlQ29uZmlnLmFjdGlvbnM/LmZvckVhY2goKGFjdGlvbjogYW55KSA9PiB7XHJcbiAgICAgICAgdGhpcy5yaWdodENsaWNrTWVudUl0ZW1zLnB1c2goeyBtZW51VGV4dDogYWN0aW9uLnRvb2x0aXAsIGFjdGlvbjogYWN0aW9uLmFjdGlvbiwgcm93OiByb3cgfSk7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgdGhpcy5pc0Rpc3BsYXlDb250ZXh0TWVudSA9IHRydWU7XHJcbiAgICAgIHRoaXMucmlnaHRDbGlja01lbnVQb3NpdGlvbnMgPSB7XHJcbiAgICAgICAgeDogZXZlbnQuY2xpZW50WCxcclxuICAgICAgICB5OiBldmVudC5jbGllbnRZXHJcbiAgICAgIH07XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBASG9zdExpc3RlbmVyKCdkb2N1bWVudDpjbGljaycpXHJcbiAgQEhvc3RMaXN0ZW5lcignZG9jdW1lbnQ6c2Nyb2xsJywgWyckZXZlbnQnXSlcclxuICBwdWJsaWMgZXZlbnQoKTogdm9pZCB7XHJcbiAgICB0aGlzLmlzRGlzcGxheUNvbnRleHRNZW51ID0gZmFsc2U7XHJcbiAgfVxyXG5cclxuICAvLyBTb3J0aW5nXHJcbiAgcHVibGljIHNvcnRIYW5kbGVyKGV2OiB7IGFjdGl2ZTogc3RyaW5nOyBkaXJlY3Rpb246ICdhc2MnIHwgJ2Rlc2MnIHwgJycgfSk6IHZvaWQge1xyXG4gICAgaWYgKHRoaXMuX2lzRWRpdGluZykgcmV0dXJuO1xyXG4gICAgaWYgKGV2LmRpcmVjdGlvbiAhPT0gJycpIHtcclxuICAgICAgdGhpcy5kYXRhUmVxdWVzdC5zb3J0ID0gZXYuYWN0aXZlICsgJywnICsgZXYuZGlyZWN0aW9uO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgZGVsZXRlIHRoaXMuZGF0YVJlcXVlc3Quc29ydDtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLnJlZnJlc2hEYXRhKCk7XHJcbiAgfVxyXG5cclxuICAvLyBGaWx0ZXJpbmdcclxuICBwdWJsaWMgZmlsdGVySGFuZGxlcihldjogYW55LCBjb2w6IHN0cmluZyk6IHZvaWQge1xyXG4gICAgaWYgKGV2LmtleUNvZGUgIT09IDEzKSByZXR1cm47XHJcblxyXG4gICAgaWYgKGV2LnRhcmdldC52YWx1ZSAhPT0gJycpIHtcclxuICAgICAgdGhpcy5kYXRhUmVxdWVzdC5maWx0ZXIgPSBldi50YXJnZXQudmFsdWU7XHJcbiAgICAgIHRoaXMuZGF0YVJlcXVlc3QuZmlsdGVyQ29sID0gY29sO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgZGVsZXRlIHRoaXMuZGF0YVJlcXVlc3QuZmlsdGVyO1xyXG4gICAgICBkZWxldGUgdGhpcy5kYXRhUmVxdWVzdC5maWx0ZXJDb2w7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5yZWZyZXNoRGF0YSgpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG9idGVuZXJFbGVtZW50byhvYmo6IGFueSwgcHJvcDogYW55KTogYW55IHtcclxuICAgIGlmICh0eXBlb2Ygb2JqICE9PSAnb2JqZWN0JykgdGhyb3cgJ2dldFByb3A6IG9iaiBpcyBub3QgYW4gb2JqZWN0JztcclxuICAgIGlmICh0eXBlb2YgcHJvcCAhPT0gJ3N0cmluZycpIHRocm93ICdnZXRQcm9wOiBwcm9wIGlzIG5vdCBhIHN0cmluZyc7XHJcblxyXG4gICAgLy8gUmVwbGFjZSBbXSBub3RhdGlvbiB3aXRoIGRvdCBub3RhdGlvblxyXG4gICAgcHJvcCA9IHByb3AucmVwbGFjZSgvXFxbW1wiJ2BdKC4qKVtcIidgXVxcXS9nLCAnLiQxJyk7XHJcblxyXG4gICAgcmV0dXJuIHByb3Auc3BsaXQoJy4nKS5yZWR1Y2UoZnVuY3Rpb24gKHByZXY6IHsgW3g6IHN0cmluZ106IGFueSB9LCBjdXJyOiBzdHJpbmcgfCBudW1iZXIpIHtcclxuICAgICAgcmV0dXJuIHByZXYgPyBwcmV2W2N1cnJdIDogdW5kZWZpbmVkO1xyXG4gICAgfSwgb2JqIHx8IHNlbGYpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGNsb25lRm9ybUdyb3VwKCk6IEZvcm1Hcm91cCB7XHJcbiAgICBsZXQgZWw6IGFueSA9IHt9O1xyXG4gICAgdGhpcy5fY29sdW1uc1NjaGVtYS5mb3JFYWNoKChjb2w6IEFycURhdGF0YWJsZUNvbHVtbnNTY2hlbWEpID0+IHtcclxuICAgICAgZWxbY29sLmtleV0gPSBjb2wuZGVmYXVsdFZhbHVlO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gdGhpcy5mb3JtQnVpbGRlci5ncm91cChlbCk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZXZlbnRSb3cocm93OiBhbnkpOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLnJvd0NsaWNrZWQgPT09IHJvdy5pZCkgdGhpcy5yb3dDbGlja2VkID0gLTE7XHJcbiAgICBlbHNlIHRoaXMucm93Q2xpY2tlZCA9IHJvdy5pZDtcclxuXHJcbiAgICB0aGlzLnRhYmxlQ29uZmlnLmV2ZW50Um93ICYmICFyb3cuaXNFZGl0XHJcbiAgICAgID8gdGhpcy50YWJsZUNvbmZpZy5ldmVudFJvdyhyb3cpXHJcbiAgICAgIDogY29uc29sZS5lcnJvcignTm90IGVkaXQgY2FsbGJhY2sgZGVmaW5lZCcpO1xyXG4gIH1cclxuXHJcbiAgLy8gU2VsZWN0IGZ1bmNpb25hbGl0eVxyXG4gIHB1YmxpYyB0b2dnbGVTZWxlY3RSb3cocm93OiBhbnkpOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLmNoZWNrU2VsZWN0ZWRSb3cocm93KSkgdGhpcy5zZWxlY3RlZFJvd3MgPSB0aGlzLnNlbGVjdGVkUm93cy5maWx0ZXIoXyA9PiBfLmlkICE9PSByb3cuaWQpO1xyXG4gICAgZWxzZSB0aGlzLnNlbGVjdGVkUm93cy5wdXNoKHJvdyk7XHJcblxyXG4gICAgdGhpcy5zZWxlY3RFdmVudCQuZW1pdCh7IHNlbGVjdGVkOiB0aGlzLnNlbGVjdGVkUm93cywgbGFzdFNlbGVjdGlvbjogcm93IH0pO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGNsZWFuU2VsZWN0aW9uUm93cygpOiB2b2lkIHtcclxuICAgIHRoaXMuc2VsZWN0ZWRSb3dzID0gW107XHJcbiAgICB0aGlzLnNlbGVjdEV2ZW50JC5lbWl0KHsgc2VsZWN0ZWQ6IHRoaXMuc2VsZWN0ZWRSb3dzLCBsYXN0U2VsZWN0aW9uOiBbXSB9KTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBzdG9wRWRpdGluZyhyb3c/OiBhbnkpOiB2b2lkIHtcclxuICAgIHRoaXMuX2lzRWRpdGluZyA9IGZhbHNlO1xyXG4gICAgaWYgKHJvdykge1xyXG4gICAgICB0aGlzLnN0b3BFZGl0aW5nUm93KHJvdyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLnN0b3BFZGl0aW5nQWxsUm93cygpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBzdG9wRWRpdGluZ0FsbFJvd3MoKTogdm9pZCB7XHJcbiAgICB0aGlzLmRhdGFTb3VyY2UuZGF0YS5mb3JFYWNoKChyb3c6IGFueSkgPT4ge1xyXG4gICAgICB0aGlzLnN0b3BFZGl0aW5nUm93KHJvdyk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgc3RvcEVkaXRpbmdSb3cocm93OiBhbnkpOiB2b2lkIHtcclxuICAgIHJvdy5pc0VkaXQgPSBmYWxzZTtcclxuICAgIHJvdy5pc0NyZWF0ZSA9IGZhbHNlO1xyXG4gICAgaWYgKHJvdy5uZXdSb3cpIHtcclxuICAgICAgdGhpcy5kYXRhU291cmNlLmRhdGEuc2hpZnQoKTtcclxuICAgIH1cclxuICAgIHJvdy5uZXdSb3cgPSBmYWxzZTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBkZXNhY3RpdmFySXRlbXMoYWN0aW9uOiBBcnFEYXRhdGFibGVBY3Rpb25zKTogdm9pZCB7XHJcbiAgICBpZiAoYWN0aW9uLmlubGluZSkge1xyXG4gICAgICB0aGlzLl9pc0VkaXRpbmcgPSB0cnVlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHVibGljIGFjdGlvbkhhbmRsZXIoYWN0aW9uOiBBcnFEYXRhdGFibGVBY3Rpb25zLCBlbGVtZW50OiBhbnkpOiB2b2lkIHtcclxuICAgIHRoaXMuc3RvcEVkaXRpbmdBbGxSb3dzKCk7XHJcbiAgICBjb25zdCByZXN1bHQgPSBhY3Rpb24uYWN0aW9uKGVsZW1lbnQpO1xyXG4gICAgaWYgKHJlc3VsdCBpbnN0YW5jZW9mIE9ic2VydmFibGUpIHtcclxuICAgICAgcmVzdWx0Py5zdWJzY3JpYmUoe1xyXG4gICAgICAgIG5leHQ6ICgpID0+IHRoaXMucmVmcmVzaERhdGEoKVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICAgIHRoaXMuZGVzYWN0aXZhckl0ZW1zKGFjdGlvbik7XHJcbiAgfVxyXG59XHJcbiIsIjxkaXYgY2xhc3M9XCJtYXQtZWxldmF0aW9uLXo4XCI+XHJcbiAgPCEtLSBUQUJMRSBIRUFERVIgIC0tPlxyXG4gIDxkaXYgKm5nSWY9XCJ0YWJsZUNvbmZpZy5oZWFkZXJUYWJsZVN0cmluZ1wiIFtpbm5lckhUTUxdPVwidGFibGVDb25maWcuaGVhZGVyVGFibGVTdHJpbmdcIj48L2Rpdj5cclxuICA8ZGl2ICpuZ0lmPVwidGFibGVDb25maWcuaGVhZGVyVGFibGVcIiBzdHlsZT1cIm1hcmdpbjogMWVtOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kXCI+XHJcbiAgICA8bmctY29udGFpbmVyPlxyXG4gICAgICA8YnV0dG9uXHJcbiAgICAgICAgc3R5bGU9XCJtYXJnaW4tbGVmdDogMWVtOyBtYXJnaW4tdG9wOiAxZW1cIlxyXG4gICAgICAgIG1hdC1yYWlzZWQtYnV0dG9uXHJcbiAgICAgICAgdHlwZT1cImJ1dHRvblwiXHJcbiAgICAgICAgKm5nRm9yPVwibGV0IGJ0biBvZiB0YWJsZUNvbmZpZy5oZWFkZXJUYWJsZVwiXHJcbiAgICAgICAgW2NvbG9yXT1cImJ0bi5jb2xvciA/IGJ0bi5jb2xvciA6ICdwcmltYXJ5J1wiXHJcbiAgICAgICAgW21hdFRvb2x0aXBdPVwiYnRuLnRvb2x0aXAgPyBidG4udG9vbHRpcCA6ICcnXCJcclxuICAgICAgICAoY2xpY2spPVwiYnRuLmFjdGlvbih0aGlzKVwiPlxyXG4gICAgICAgIDxtYXQtaWNvbiAqbmdJZj1cImJ0bi5pY29uXCI+e3sgYnRuLmljb24gfX08L21hdC1pY29uPlxyXG4gICAgICAgIHt7IGJ0bi5sYWJlbCB9fVxyXG4gICAgICA8L2J1dHRvbj5cclxuICAgIDwvbmctY29udGFpbmVyPlxyXG4gIDwvZGl2PlxyXG5cclxuICA8IS0tIEZJTFRFUiAtLT5cclxuICA8bWF0LWZvcm0tZmllbGRcclxuICAgIGFwcGVhcmFuY2U9XCJvdXRsaW5lXCJcclxuICAgIHN1YnNjcmlwdFNpemluZz1cImR5bmFtaWNcIlxyXG4gICAgY2xhc3M9XCJ0YWJsZS1maWx0ZXJcIlxyXG4gICAgKm5nSWY9XCJ0YWJsZUNvbmZpZy5maWx0ZXJUeXBlID09PSAnZ2xvYmFsJyB8fCB0YWJsZUNvbmZpZy5maWx0ZXJUeXBlID09PSAnYm90aCdcIj5cclxuICAgIDxtYXQtbGFiZWw+e3sgdGFibGVDb25maWcuZmlsdGVyTGFiZWwgfX08L21hdC1sYWJlbD5cclxuICAgIDxpbnB1dFxyXG4gICAgICBtYXRJbnB1dFxyXG4gICAgICAoa2V5dXApPVwiZmlsdGVySGFuZGxlcigkZXZlbnQsICdnbG9iYWwnKVwiXHJcbiAgICAgIHBsYWNlaG9sZGVyPVwie3sgdGFibGVDb25maWcuZmlsdGVyUGxhY2Vob2xkZXIgfX1cIlxyXG4gICAgICAjaW5wdXQgLz5cclxuICA8L21hdC1mb3JtLWZpZWxkPlxyXG5cclxuICA8IS0tIFRBQkxFIC0tPlxyXG4gIDx0YWJsZVxyXG4gICAgI3RhYmxlXHJcbiAgICBtYXQtdGFibGVcclxuICAgIFtkYXRhU291cmNlXT1cImRhdGFTb3VyY2VcIlxyXG4gICAgY2xhc3M9XCJtYXQtZWxldmF0aW9uLXo4XCJcclxuICAgIG1hdFNvcnRcclxuICAgIChtYXRTb3J0Q2hhbmdlKT1cInNvcnRIYW5kbGVyKCRldmVudClcIj5cclxuICAgIDwhLS0gU2VsZWN0IGNvbHVtbiAtLT5cclxuICAgIDxuZy1jb250YWluZXIgbWF0Q29sdW1uRGVmPVwic2VsZWN0Q29sdW1uXCIgKm5nSWY9XCJ0YWJsZUNvbmZpZy5zZWxlY3RDb2x1bW5cIj5cclxuICAgICAgPHRoXHJcbiAgICAgICAgbWF0LWhlYWRlci1jZWxsXHJcbiAgICAgICAgY2xhc3M9XCJoZWFkZXItZGF0YXRhYmxlXCJcclxuICAgICAgICAqbWF0SGVhZGVyQ2VsbERlZlxyXG4gICAgICAgIHN0eWxlPVwiY3Vyc29yOiBwb2ludGVyICFpbXBvcnRhbnRcIlxyXG4gICAgICAgIChjbGljayk9XCJjbGVhblNlbGVjdGlvblJvd3MoKVwiPlxyXG4gICAgICAgIDwhLS0gPG1hdC1jaGVja2JveCBbY2hlY2tlZF09XCJmYWxzZVwiIFtkaXNhYmxlZF09XCJ0cnVlXCI+PC9tYXQtY2hlY2tib3g+IC0tPlxyXG4gICAgICAgICh7eyBzZWxlY3RlZFJvd3MubGVuZ3RoIH19KVxyXG4gICAgICA8L3RoPlxyXG4gICAgICA8dGQgbWF0LWNlbGwgKm1hdENlbGxEZWY9XCJsZXQgZWxlbWVudFwiIChjbGljayk9XCJ0b2dnbGVTZWxlY3RSb3coZWxlbWVudClcIj5cclxuICAgICAgICA8bWF0LWNoZWNrYm94IFtjaGVja2VkXT1cImNoZWNrU2VsZWN0ZWRSb3coZWxlbWVudClcIiBbZGlzYWJsZWRdPVwidHJ1ZVwiPjwvbWF0LWNoZWNrYm94PlxyXG4gICAgICA8L3RkPlxyXG4gICAgPC9uZy1jb250YWluZXI+XHJcblxyXG4gICAgPCEtLSBEeW5hbWljIENvbHVtbnMgLS0+XHJcbiAgICA8bmctY29udGFpbmVyIFttYXRDb2x1bW5EZWZdPVwiY29sLmtleVwiICpuZ0Zvcj1cImxldCBjb2wgb2YgX2NvbHVtbnNTY2hlbWFcIj5cclxuICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cInRhYmxlQ29uZmlnLmRpc2FibGVTb3J0aW5nIHx8IGNvbC5pc1NvcnRhYmxlID09PSBmYWxzZVwiPlxyXG4gICAgICAgIDx0aCBtYXQtaGVhZGVyLWNlbGwgY2xhc3M9XCJoZWFkZXItZGF0YXRhYmxlXCIgKm1hdEhlYWRlckNlbGxEZWY+e3sgY29sLmxhYmVsIH19PC90aD5cclxuICAgICAgPC9uZy1jb250YWluZXI+XHJcbiAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCIhdGFibGVDb25maWcuZGlzYWJsZVNvcnRpbmcgJiYgY29sLmlzU29ydGFibGUgIT09IGZhbHNlXCI+XHJcbiAgICAgICAgPHRoIG1hdC1oZWFkZXItY2VsbCBjbGFzcz1cImhlYWRlci1kYXRhdGFibGVcIiAqbWF0SGVhZGVyQ2VsbERlZiBtYXQtc29ydC1oZWFkZXI+XHJcbiAgICAgICAgICB7eyBjb2wubGFiZWwgfX1cclxuICAgICAgICA8L3RoPlxyXG4gICAgICA8L25nLWNvbnRhaW5lcj5cclxuICAgICAgPCEtLSBEYXRhIHJvd3MgLS0+XHJcbiAgICAgIDx0ZCBtYXQtY2VsbCAqbWF0Q2VsbERlZj1cImxldCBlbGVtZW50XCIgKGNsaWNrKT1cImV2ZW50Um93KGVsZW1lbnQpXCI+XHJcbiAgICAgICAgPCEtLSBOb3JtYWwgcm93cyAtLT5cclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBbbmdTd2l0Y2hdPVwiY29sLnR5cGVcIlxyXG4gICAgICAgICAgKm5nSWY9XCIhZWxlbWVudC5pc0VkaXQgJiYgIWVsZW1lbnQuaXNDcmVhdGVcIlxyXG4gICAgICAgICAgKGNvbnRleHRtZW51KT1cImRpc3BsYXlDb250ZXh0TWVudSgkZXZlbnQsIGVsZW1lbnQpOyAoZmFsc2UpXCI+XHJcbiAgICAgICAgICA8c3BhbiAqbmdTd2l0Y2hDYXNlPVwiJ2RhdGUnXCI+XHJcbiAgICAgICAgICAgIHt7IGVsZW1lbnRbY29sLmtleV0gfCBkYXRlIDogJ2RkL01NL3l5eXknIH19XHJcbiAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgICA8c3BhbiAqbmdTd2l0Y2hDYXNlPVwiJ2RhdGV0aW1lcGlja2VyJ1wiPlxyXG4gICAgICAgICAgICB7eyBlbGVtZW50W2NvbC5rZXldIHwgZGF0ZSA6ICdkZC9NTS95eXl5IEhIOm1tJyB9fVxyXG4gICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgPHNwYW4gKm5nU3dpdGNoQ2FzZT1cIidib29sZWFuJ1wiPlxyXG4gICAgICAgICAgICB7eyBlbGVtZW50W2NvbC5rZXldID8gJyYjMTAwMDM7JyA6ICcmIzEwMDA1OycgfX1cclxuICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgIDxzcGFuICpuZ1N3aXRjaENhc2U9XCInc2VsZWN0J1wiPlxyXG4gICAgICAgICAgICB7eyBmaW5kVmFsdWUoZWxlbWVudFtjb2wua2V5XSwgY29sLmRhdGEsIGNvbC5sYW5nLCBjb2wudHlwZSkgfX1cclxuICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgIDxzcGFuICpuZ1N3aXRjaENhc2U9XCInYXV0b2NvbXBsZXRlJ1wiPlxyXG4gICAgICAgICAgICB7eyBmaW5kVmFsdWUoZWxlbWVudFtjb2wua2V5XSwgY29sLmRhdGEsIGNvbC5sYW5nLCBjb2wudHlwZSkgfX1cclxuICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgIDxzcGFuICpuZ1N3aXRjaENhc2U9XCInaW1hZ2UnXCI+XHJcbiAgICAgICAgICAgIDxpbWcgW3NyY109XCJmaW5kU3JjKGVsZW1lbnRbY29sLmtleV0sIGNvbC5kYXRhKVwiIC8+XHJcbiAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgICA8c3BhbiAqbmdTd2l0Y2hDYXNlPVwiJ2NhbGMnXCI+XHJcbiAgICAgICAgICAgIHt7IGNvbD8uY2FsY3VsYXRlKGVsZW1lbnQpIH19XHJcbiAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgICA8c3BhbiAqbmdTd2l0Y2hEZWZhdWx0PlxyXG4gICAgICAgICAgICB7eyBjb2wuc3Via2V5ID8gdGhpcy5vYnRlbmVyRWxlbWVudG8oZWxlbWVudCwgY29sLmtleSkgOiBlbGVtZW50W2NvbC5rZXldIH19XHJcbiAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgIDwhLS0gRWRpdGluZyByb3dzIC0tPlxyXG5cclxuICAgICAgICA8ZGl2IFtuZ1N3aXRjaF09XCJjb2wudHlwZVwiICpuZ0lmPVwiZWxlbWVudC5pc0VkaXQgJiYgX2Zvcm1cIiBjbGFzcz1cImlucHV0cy1lZGl0XCI+XHJcbiAgICAgICAgICA8ZGl2ICpuZ1N3aXRjaENhc2U9XCInZGF0ZSdcIiBbc3R5bGVdPVwiY29sLmVkaXRJbnB1dFNpemUgPyAnd2lkdGg6ICcgKyBjb2wuZWRpdElucHV0U2l6ZSArICcgIWltcG9ydGFudCcgOiAnJ1wiPlxyXG4gICAgICAgICAgICA8ZGl2ICpuZ0lmPVwiZWRpdENvbChjb2wsIGVsZW1lbnQpICYmICFjb2wuc3Via2V5OyBlbHNlIGVsc2VCbG9ja05vRWRpdGFibGVcIj5cclxuICAgICAgICAgICAgICA8YXJxLWRhdGVwaWNrZXIgW2ZHcm91cF09XCJfZm9ybVwiIFt2YWx1ZV09XCJjb2wua2V5XCIgLz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgICpuZ1N3aXRjaENhc2U9XCInZGF0ZXRpbWVwaWNrZXInXCJcclxuICAgICAgICAgICAgW3N0eWxlXT1cImNvbC5lZGl0SW5wdXRTaXplID8gJ3dpZHRoOiAnICsgY29sLmVkaXRJbnB1dFNpemUgKyAnICFpbXBvcnRhbnQnIDogJydcIj5cclxuICAgICAgICAgICAgPGRpdiAqbmdJZj1cImVkaXRDb2woY29sLCBlbGVtZW50KSAmJiAhY29sLnN1YmtleTsgZWxzZSBlbHNlQmxvY2tOb0VkaXRhYmxlXCI+XHJcbiAgICAgICAgICAgICAgPGFycS1kYXRldGltZXBpY2tlciBbdmFsdWVdPVwiY29sLmtleVwiIFtmR3JvdXBdPVwiX2Zvcm1cIj48L2FycS1kYXRldGltZXBpY2tlcj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgICpuZ1N3aXRjaENhc2U9XCInYm9vbGVhbidcIlxyXG4gICAgICAgICAgICBhcHBlYXJhbmNlPVwib3V0bGluZVwiXHJcbiAgICAgICAgICAgIFtzdHlsZV09XCJjb2wuZWRpdElucHV0U2l6ZSA/ICd3aWR0aDogJyArIGNvbC5lZGl0SW5wdXRTaXplICsgJyAhaW1wb3J0YW50JyA6ICcnXCI+XHJcbiAgICAgICAgICAgIDxkaXYgKm5nSWY9XCJlZGl0Q29sKGNvbCwgZWxlbWVudCkgJiYgIWNvbC5zdWJrZXk7IGVsc2UgZWxzZUJsb2NrTm9FZGl0YWJsZVwiPlxyXG4gICAgICAgICAgICAgIDxhcnEtY2hlY2tib3gtYmFzaWMgW3ZhbHVlXT1cImNvbC5rZXlcIiBbZkdyb3VwXT1cInRoaXMuX2Zvcm1cIj48L2FycS1jaGVja2JveC1iYXNpYz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgICpuZ1N3aXRjaENhc2U9XCInc2VsZWN0J1wiXHJcbiAgICAgICAgICAgIGFwcGVhcmFuY2U9XCJvdXRsaW5lXCJcclxuICAgICAgICAgICAgW3N0eWxlXT1cImNvbC5lZGl0SW5wdXRTaXplID8gJ3dpZHRoOiAnICsgY29sLmVkaXRJbnB1dFNpemUgKyAnICFpbXBvcnRhbnQnIDogJydcIj5cclxuICAgICAgICAgICAgPGRpdiAqbmdJZj1cImVkaXRDb2woY29sLCBlbGVtZW50KSAmJiAhY29sLnN1YmtleTsgZWxzZSBlbHNlQmxvY2tOb0VkaXRhYmxlXCI+XHJcbiAgICAgICAgICAgICAgPGFycS1zZWxlY3RcclxuICAgICAgICAgICAgICAgIFtlbXB0eU9wdGlvbl09XCJ0cnVlXCJcclxuICAgICAgICAgICAgICAgIFt2YWx1ZV09XCJjb2wua2V5XCJcclxuICAgICAgICAgICAgICAgIFtmR3JvdXBdPVwidGhpcy5fZm9ybVwiXHJcbiAgICAgICAgICAgICAgICBbc2VsZWN0T3B0aW9uc0xpc3RdPVwiY29sLmRhdGEgfHwgY29sLmRhdGFGblwiXHJcbiAgICAgICAgICAgICAgICAoY2hhbmdlKT1cImlucHV0SGFuZGxlcigkZXZlbnQsIGVsZW1lbnQuaWQsIGNvbC5rZXkpXCJcclxuICAgICAgICAgICAgICAgIFtmdWxsT2JqZWN0XT1cImNvbC5mdWxsT2JqZWN0XCJcclxuICAgICAgICAgICAgICAgIFtsYW5nXT1cImNvbC5sYW5nXCI+XHJcbiAgICAgICAgICAgICAgPC9hcnEtc2VsZWN0PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgKm5nU3dpdGNoQ2FzZT1cIidhdXRvY29tcGxldGUnXCJcclxuICAgICAgICAgICAgYXBwZWFyYW5jZT1cIm91dGxpbmVcIlxyXG4gICAgICAgICAgICBbc3R5bGVdPVwiY29sLmVkaXRJbnB1dFNpemUgPyAnd2lkdGg6ICcgKyBjb2wuZWRpdElucHV0U2l6ZSArICcgIWltcG9ydGFudCcgOiAnJ1wiPlxyXG4gICAgICAgICAgICA8ZGl2ICpuZ0lmPVwiZWRpdENvbChjb2wsIGVsZW1lbnQpICYmICFjb2wuc3Via2V5OyBlbHNlIGVsc2VCbG9ja05vRWRpdGFibGVcIj5cclxuICAgICAgICAgICAgICA8YXJxLWF1dG9jb21wbGV0ZVxyXG4gICAgICAgICAgICAgICAgW29wdGlvbnNdPVwiYXV0b2NGaWx0ZXIoY29sLmRhdGFGblJlcSwgZWxlbWVudFtjb2wua2V5XSlcIlxyXG4gICAgICAgICAgICAgICAgW3BhbmVsV2lkdGhdPVwiY29sLnBhbmVsV2lkdGggfHwgJ2F1dG8nXCJcclxuICAgICAgICAgICAgICAgIFtkZXBlbmRzT25dPVwiY29sLmRlcGVuZHNPblwiXHJcbiAgICAgICAgICAgICAgICBbdmFsdWVdPVwiY29sLmtleVwiXHJcbiAgICAgICAgICAgICAgICBbZkdyb3VwXT1cInRoaXMuX2Zvcm1cIlxyXG4gICAgICAgICAgICAgICAgKGNoYW5nZSk9XCJpbnB1dEhhbmRsZXIoJGV2ZW50LCBlbGVtZW50LmlkLCBjb2wua2V5KVwiXHJcbiAgICAgICAgICAgICAgICBbbGFuZ109XCJjb2wubGFuZ1wiXHJcbiAgICAgICAgICAgICAgICBbZGVmYXVsdFNpemVdPVwiY29sLmRlZmF1bHRTaXplIHx8IDEwXCI+XHJcbiAgICAgICAgICAgICAgPC9hcnEtYXV0b2NvbXBsZXRlPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgKm5nU3dpdGNoQ2FzZT1cIidudW1iZXInXCJcclxuICAgICAgICAgICAgYXBwZWFyYW5jZT1cIm91dGxpbmVcIlxyXG4gICAgICAgICAgICBbc3R5bGVdPVwiY29sLmVkaXRJbnB1dFNpemUgPyAnd2lkdGg6ICcgKyBjb2wuZWRpdElucHV0U2l6ZSArICcgIWltcG9ydGFudCcgOiAnJ1wiPlxyXG4gICAgICAgICAgICA8ZGl2ICpuZ0lmPVwiZWRpdENvbChjb2wsIGVsZW1lbnQpICYmICFjb2wuc3Via2V5OyBlbHNlIGVsc2VCbG9ja05vRWRpdGFibGVcIj5cclxuICAgICAgICAgICAgICA8YXJxLWlucHV0LW51bWJlclxyXG4gICAgICAgICAgICAgICAgW3ZhbHVlXT1cImNvbC5rZXlcIlxyXG4gICAgICAgICAgICAgICAgW2ZHcm91cF09XCJ0aGlzLl9mb3JtXCJcclxuICAgICAgICAgICAgICAgIChjaGFuZ2UpPVwiaW5wdXRIYW5kbGVyKCRldmVudCwgZWxlbWVudC5pZCwgY29sLmtleSlcIj5cclxuICAgICAgICAgICAgICA8L2FycS1pbnB1dC1udW1iZXI+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgICAgPGRpdiAqbmdTd2l0Y2hEZWZhdWx0IFtzdHlsZV09XCJjb2wuZWRpdElucHV0U2l6ZSA/ICd3aWR0aDogJyArIGNvbC5lZGl0SW5wdXRTaXplICsgJyAhaW1wb3J0YW50JyA6ICcnXCI+XHJcbiAgICAgICAgICAgIDxkaXYgKm5nSWY9XCJlZGl0Q29sKGNvbCwgZWxlbWVudCkgJiYgIWNvbC5zdWJrZXk7IGVsc2UgZWxzZUJsb2NrTm9FZGl0YWJsZVwiPlxyXG4gICAgICAgICAgICAgIDxhcnEtdGV4dC1pbnB1dFxyXG4gICAgICAgICAgICAgICAgW3ZhbHVlXT1cImNvbC5rZXlcIlxyXG4gICAgICAgICAgICAgICAgW2ZHcm91cF09XCJ0aGlzLl9mb3JtXCJcclxuICAgICAgICAgICAgICAgIFttYXhMZW5ndGhdPVwiY29sLm1heExlbmd0aCA/IGNvbC5tYXhMZW5ndGggOiAxMDBcIlxyXG4gICAgICAgICAgICAgICAgKGNoYW5nZSk9XCJpbnB1dEhhbmRsZXIoJGV2ZW50LCBlbGVtZW50LmlkLCBjb2wua2V5KVwiPlxyXG4gICAgICAgICAgICAgIDwvYXJxLXRleHQtaW5wdXQ+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgICAgPG5nLXRlbXBsYXRlICNlbHNlQmxvY2tOb0VkaXRhYmxlPlxyXG4gICAgICAgICAgICA8ZGl2IFtuZ1N3aXRjaF09XCJjb2wudHlwZVwiPlxyXG4gICAgICAgICAgICAgIDxzcGFuICpuZ1N3aXRjaENhc2U9XCInZGF0ZSdcIj5cclxuICAgICAgICAgICAgICAgIHt7IGVsZW1lbnRbY29sLmtleV0gfCBkYXRlIDogJ2RkL01NL3l5eXknIH19XHJcbiAgICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgICAgIDxzcGFuICpuZ1N3aXRjaENhc2U9XCInZGF0ZXRpbWVwaWNrZXInXCI+XHJcbiAgICAgICAgICAgICAgICB7eyBlbGVtZW50W2NvbC5rZXldIHwgZGF0ZSA6ICdkZC9NTS95eXl5JyB9fVxyXG4gICAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgICAgICA8c3BhbiAqbmdTd2l0Y2hDYXNlPVwiJ2Jvb2xlYW4nXCI+XHJcbiAgICAgICAgICAgICAgICB7eyBlbGVtZW50W2NvbC5rZXldID8gJyYjMTAwMDM7JyA6ICcmIzEwMDA1OycgfX1cclxuICAgICAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgICAgICAgPHNwYW4gKm5nU3dpdGNoQ2FzZT1cIidzZWxlY3QnXCI+XHJcbiAgICAgICAgICAgICAgICB7eyBmaW5kVmFsdWUoZWxlbWVudFtjb2wua2V5XSwgY29sLmRhdGEgfHwgY29sLmRhdGFGbiwgY29sLmxhbmcsIGNvbC50eXBlKSB9fVxyXG4gICAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgICAgICA8c3BhbiAqbmdTd2l0Y2hDYXNlPVwiJ2F1dG9jb21wbGV0ZSdcIj5cclxuICAgICAgICAgICAgICAgIHt7IGZpbmRWYWx1ZShlbGVtZW50W2NvbC5rZXldLCBjb2wuZGF0YSB8fCBjb2wuZGF0YUZuUmVxLCBjb2wubGFuZywgY29sLnR5cGUpIH19XHJcbiAgICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgICAgIDxzcGFuICpuZ1N3aXRjaENhc2U9XCInaW1hZ2UnXCI+XHJcbiAgICAgICAgICAgICAgICA8aW1nIFtzcmNdPVwiZmluZFNyYyhlbGVtZW50W2NvbC5rZXldLCBjb2wuZGF0YSlcIiAvPlxyXG4gICAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgICAgICA8c3BhbiAqbmdTd2l0Y2hEZWZhdWx0PlxyXG4gICAgICAgICAgICAgICAge3sgY29sLnN1YmtleSA/IHRoaXMub2J0ZW5lckVsZW1lbnRvKGVsZW1lbnQsIGNvbC5rZXkpIDogZWxlbWVudFtjb2wua2V5XSB9fVxyXG4gICAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8L25nLXRlbXBsYXRlPlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8ZGl2IFtuZ1N3aXRjaF09XCJjb2wudHlwZVwiICpuZ0lmPVwiZWxlbWVudC5pc0NyZWF0ZSAmJiBmZ1wiIGNsYXNzPVwiaW5wdXRzLWVkaXRcIj5cclxuICAgICAgICAgIDxkaXYgKm5nU3dpdGNoQ2FzZT1cIidkYXRlJ1wiIFtzdHlsZV09XCJjb2wuZWRpdElucHV0U2l6ZSA/ICd3aWR0aDogJyArIGNvbC5lZGl0SW5wdXRTaXplICsgJyAhaW1wb3J0YW50JyA6ICcnXCI+XHJcbiAgICAgICAgICAgIDxkaXYgKm5nSWY9XCJjb2wuaXNDcmVhYmxlICE9PSBmYWxzZSAmJiAhY29sLnN1YmtleTsgZWxzZSBlbHNlQmxvY2tTaG93XCI+XHJcbiAgICAgICAgICAgICAgPGFycS1kYXRlcGlja2VyIFtmR3JvdXBdPVwiZmdcIiBbdmFsdWVdPVwiY29sLmtleVwiIC8+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAqbmdTd2l0Y2hDYXNlPVwiJ2RhdGV0aW1lcGlja2VyJ1wiXHJcbiAgICAgICAgICAgIFtzdHlsZV09XCJjb2wuZWRpdElucHV0U2l6ZSA/ICd3aWR0aDogJyArIGNvbC5lZGl0SW5wdXRTaXplICsgJyAhaW1wb3J0YW50JyA6ICcnXCI+XHJcbiAgICAgICAgICAgIDxkaXYgKm5nSWY9XCJjb2wuaXNDcmVhYmxlICE9PSBmYWxzZSAmJiAhY29sLnN1YmtleTsgZWxzZSBlbHNlQmxvY2tTaG93XCI+XHJcbiAgICAgICAgICAgICAgPGFycS1kYXRldGltZXBpY2tlciBbdmFsdWVdPVwiY29sLmtleVwiIFtmR3JvdXBdPVwiZmdcIj48L2FycS1kYXRldGltZXBpY2tlcj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgICpuZ1N3aXRjaENhc2U9XCInYm9vbGVhbidcIlxyXG4gICAgICAgICAgICBhcHBlYXJhbmNlPVwib3V0bGluZVwiXHJcbiAgICAgICAgICAgIFtzdHlsZV09XCJjb2wuZWRpdElucHV0U2l6ZSA/ICd3aWR0aDogJyArIGNvbC5lZGl0SW5wdXRTaXplICsgJyAhaW1wb3J0YW50JyA6ICcnXCI+XHJcbiAgICAgICAgICAgIDxkaXYgKm5nSWY9XCJjb2wuaXNDcmVhYmxlICE9PSBmYWxzZSAmJiAhY29sLnN1YmtleTsgZWxzZSBlbHNlQmxvY2tTaG93XCI+XHJcbiAgICAgICAgICAgICAgPGFycS1jaGVja2JveC1iYXNpYyBbdmFsdWVdPVwiY29sLmtleVwiIFtmR3JvdXBdPVwiZmdcIj48L2FycS1jaGVja2JveC1iYXNpYz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgICpuZ1N3aXRjaENhc2U9XCInc2VsZWN0J1wiXHJcbiAgICAgICAgICAgIGFwcGVhcmFuY2U9XCJvdXRsaW5lXCJcclxuICAgICAgICAgICAgW3N0eWxlXT1cImNvbC5lZGl0SW5wdXRTaXplID8gJ3dpZHRoOiAnICsgY29sLmVkaXRJbnB1dFNpemUgKyAnICFpbXBvcnRhbnQnIDogJydcIj5cclxuICAgICAgICAgICAgPGRpdiAqbmdJZj1cImNvbC5pc0NyZWFibGUgIT09IGZhbHNlICYmICFjb2wuc3Via2V5OyBlbHNlIGVsc2VCbG9ja1Nob3dcIj5cclxuICAgICAgICAgICAgICA8YXJxLXNlbGVjdFxyXG4gICAgICAgICAgICAgICAgW2Z1bGxPYmplY3RdPVwiY29sLmZ1bGxPYmplY3RcIlxyXG4gICAgICAgICAgICAgICAgW2VtcHR5T3B0aW9uXT1cInRydWVcIlxyXG4gICAgICAgICAgICAgICAgW3ZhbHVlXT1cImNvbC5rZXlcIlxyXG4gICAgICAgICAgICAgICAgW2ZHcm91cF09XCJmZ1wiXHJcbiAgICAgICAgICAgICAgICBbc2VsZWN0T3B0aW9uc0xpc3RdPVwiY29sLmRhdGEgfHwgY29sLmRhdGFGblwiXHJcbiAgICAgICAgICAgICAgICAoY2hhbmdlKT1cImlucHV0SGFuZGxlcigkZXZlbnQsIGVsZW1lbnQuaWQsIGNvbC5rZXkpXCJcclxuICAgICAgICAgICAgICAgIFtsYW5nXT1cImNvbC5sYW5nXCI+XHJcbiAgICAgICAgICAgICAgPC9hcnEtc2VsZWN0PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgKm5nU3dpdGNoQ2FzZT1cIidhdXRvY29tcGxldGUnXCJcclxuICAgICAgICAgICAgYXBwZWFyYW5jZT1cIm91dGxpbmVcIlxyXG4gICAgICAgICAgICBbc3R5bGVdPVwiY29sLmVkaXRJbnB1dFNpemUgPyAnd2lkdGg6ICcgKyBjb2wuZWRpdElucHV0U2l6ZSArICcgIWltcG9ydGFudCcgOiAnJ1wiPlxyXG4gICAgICAgICAgICA8ZGl2ICpuZ0lmPVwiY29sLmlzQ3JlYWJsZSAhPT0gZmFsc2UgJiYgIWNvbC5zdWJrZXk7IGVsc2UgZWxzZUJsb2NrU2hvd1wiPlxyXG4gICAgICAgICAgICAgIDxhcnEtYXV0b2NvbXBsZXRlXHJcbiAgICAgICAgICAgICAgICBbb3B0aW9uc109XCJhdXRvY0ZpbHRlcihjb2wuZGF0YUZuUmVxLCBlbGVtZW50W2NvbC5rZXldKVwiXHJcbiAgICAgICAgICAgICAgICBbcGFuZWxXaWR0aF09XCJjb2wucGFuZWxXaWR0aCB8fCAnYXV0bydcIlxyXG4gICAgICAgICAgICAgICAgW2RlcGVuZHNPbl09XCJjb2wuZGVwZW5kc09uXCJcclxuICAgICAgICAgICAgICAgIFt2YWx1ZV09XCJjb2wua2V5XCJcclxuICAgICAgICAgICAgICAgIFtmR3JvdXBdPVwiZmdcIlxyXG4gICAgICAgICAgICAgICAgKGNoYW5nZSk9XCJpbnB1dEhhbmRsZXIoJGV2ZW50LCBlbGVtZW50LmlkLCBjb2wua2V5KVwiXHJcbiAgICAgICAgICAgICAgICBbbGFuZ109XCJjb2wubGFuZ1wiXHJcbiAgICAgICAgICAgICAgICBbZGVmYXVsdFNpemVdPVwiY29sLmRlZmF1bHRTaXplIHx8IDEwXCI+XHJcbiAgICAgICAgICAgICAgPC9hcnEtYXV0b2NvbXBsZXRlPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgKm5nU3dpdGNoQ2FzZT1cIidudW1iZXInXCJcclxuICAgICAgICAgICAgYXBwZWFyYW5jZT1cIm91dGxpbmVcIlxyXG4gICAgICAgICAgICBbc3R5bGVdPVwiY29sLmVkaXRJbnB1dFNpemUgPyAnd2lkdGg6ICcgKyBjb2wuZWRpdElucHV0U2l6ZSArICcgIWltcG9ydGFudCcgOiAnJ1wiPlxyXG4gICAgICAgICAgICA8ZGl2ICpuZ0lmPVwiY29sLmlzQ3JlYWJsZSAhPT0gZmFsc2UgJiYgIWNvbC5zdWJrZXk7IGVsc2UgZWxzZUJsb2NrU2hvd1wiPlxyXG4gICAgICAgICAgICAgIDxhcnEtaW5wdXQtbnVtYmVyIFt2YWx1ZV09XCJjb2wua2V5XCIgW2ZHcm91cF09XCJmZ1wiIChjaGFuZ2UpPVwiaW5wdXRIYW5kbGVyKCRldmVudCwgZWxlbWVudC5pZCwgY29sLmtleSlcIj5cclxuICAgICAgICAgICAgICA8L2FycS1pbnB1dC1udW1iZXI+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgICAgPGRpdiAqbmdTd2l0Y2hEZWZhdWx0IFtzdHlsZV09XCJjb2wuZWRpdElucHV0U2l6ZSA/ICd3aWR0aDogJyArIGNvbC5lZGl0SW5wdXRTaXplICsgJyAhaW1wb3J0YW50JyA6ICcnXCI+XHJcbiAgICAgICAgICAgIDxkaXYgKm5nSWY9XCJjb2wuaXNDcmVhYmxlICE9PSBmYWxzZSAmJiAhY29sLnN1YmtleTsgZWxzZSBlbHNlQmxvY2tTaG93XCI+XHJcbiAgICAgICAgICAgICAgPGFycS10ZXh0LWlucHV0XHJcbiAgICAgICAgICAgICAgICBbdmFsdWVdPVwiY29sLmtleVwiXHJcbiAgICAgICAgICAgICAgICBbZkdyb3VwXT1cImZnXCJcclxuICAgICAgICAgICAgICAgIFttYXhMZW5ndGhdPVwiY29sLm1heExlbmd0aCA/IGNvbC5tYXhMZW5ndGggOiAxMDBcIlxyXG4gICAgICAgICAgICAgICAgKGNoYW5nZSk9XCJpbnB1dEhhbmRsZXIoJGV2ZW50LCBlbGVtZW50LmlkLCBjb2wua2V5KVwiPlxyXG4gICAgICAgICAgICAgIDwvYXJxLXRleHQtaW5wdXQ+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgICAgPG5nLXRlbXBsYXRlICNlbHNlQmxvY2tTaG93PlxyXG4gICAgICAgICAgICA8ZGl2IFtuZ1N3aXRjaF09XCJjb2wudHlwZVwiPlxyXG4gICAgICAgICAgICAgIDxzcGFuICpuZ1N3aXRjaENhc2U9XCInZGF0ZSdcIj5cclxuICAgICAgICAgICAgICAgIHt7IGVsZW1lbnRbY29sLmtleV0gfCBkYXRlIDogJ2RkL01NL3l5eXknIH19XHJcbiAgICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgICAgIDxzcGFuICpuZ1N3aXRjaENhc2U9XCInZGF0ZXRpbWVwaWNrZXInXCI+XHJcbiAgICAgICAgICAgICAgICB7eyBlbGVtZW50W2NvbC5rZXldIHwgZGF0ZSA6ICdkZC9NTS95eXl5JyB9fVxyXG4gICAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgICAgICA8c3BhbiAqbmdTd2l0Y2hDYXNlPVwiJ2Jvb2xlYW4nXCI+XHJcbiAgICAgICAgICAgICAgICB7eyBlbGVtZW50W2NvbC5rZXldID8gJyYjMTAwMDM7JyA6ICcmIzEwMDA1OycgfX1cclxuICAgICAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgICAgICAgPHNwYW4gKm5nU3dpdGNoQ2FzZT1cIidzZWxlY3QnXCI+XHJcbiAgICAgICAgICAgICAgICB7eyBmaW5kVmFsdWUoZWxlbWVudFtjb2wua2V5XSwgY29sLmRhdGEgfHwgY29sLmRhdGFGbiwgY29sLmxhbmcsIGNvbC50eXBlKSB9fVxyXG4gICAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgICAgICA8c3BhbiAqbmdTd2l0Y2hDYXNlPVwiJ2F1dG9jb21wbGV0ZSdcIj5cclxuICAgICAgICAgICAgICAgIHt7IGZpbmRWYWx1ZShlbGVtZW50W2NvbC5rZXldLCBjb2wuZGF0YSB8fCBjb2wuZGF0YUZuUmVxLCBjb2wubGFuZywgY29sLnR5cGUpIH19XHJcbiAgICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgICAgIDxzcGFuICpuZ1N3aXRjaENhc2U9XCInaW1hZ2UnXCI+XHJcbiAgICAgICAgICAgICAgICA8aW1nIFtzcmNdPVwiZmluZFNyYyhlbGVtZW50W2NvbC5rZXldLCBjb2wuZGF0YSlcIiAvPlxyXG4gICAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgICAgICA8c3BhbiAqbmdTd2l0Y2hEZWZhdWx0PlxyXG4gICAgICAgICAgICAgICAge3sgY29sLnN1YmtleSA/IHRoaXMub2J0ZW5lckVsZW1lbnRvKGVsZW1lbnQsIGNvbC5rZXkpIDogZWxlbWVudFtjb2wua2V5XSB9fVxyXG4gICAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8L25nLXRlbXBsYXRlPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L3RkPlxyXG4gICAgPC9uZy1jb250YWluZXI+XHJcblxyXG4gICAgPCEtLSBBY3Rpb25zIENvbHVtbnMgLS0+XHJcbiAgICA8bmctY29udGFpbmVyIG1hdENvbHVtbkRlZj1cImFjdGlvbnNcIiAqbmdJZj1cInRhYmxlQ29uZmlnLmFjdGlvbnM/Lmxlbmd0aFwiPlxyXG4gICAgICA8dGggbWF0LWhlYWRlci1jZWxsIGNsYXNzPVwiaGVhZGVyLWRhdGF0YWJsZVwiICptYXRIZWFkZXJDZWxsRGVmPlxyXG4gICAgICAgIHt7IHRhYmxlQ29uZmlnLmFjdGlvbkNvbExhYmVsIH19XHJcbiAgICAgICAgPGFycS1idXR0b25cclxuICAgICAgICAgICpuZ0lmPVwidGFibGVDb25maWcubmV3Um93SW5BY3Rpb25zVEhcIlxyXG4gICAgICAgICAgY2xhc3M9XCJtYXRlcmlhbC1pY29ucyBhcnEtdG9vbGJhci1tZW51IGFkZC1idXR0b25cIlxyXG4gICAgICAgICAgW25nQ2xhc3NdPVwieyBkaXNhYmxlZDogcmVhZG9ubHkgfHwgX2lzRWRpdGluZyB9XCJcclxuICAgICAgICAgIChjbGljayk9XCJhZGROZXdSb3coKVwiXHJcbiAgICAgICAgICBbbWF0VG9vbHRpcF09XCJyZWFkb25seSA/ICcnIDogJ0NyZWFyJ1wiXHJcbiAgICAgICAgICBjb2xvcj1cInByaW1hcnlcIlxyXG4gICAgICAgICAgW2ljb25dPVwiJ2FkZF9ib3gnXCJcclxuICAgICAgICAgIFt0aXBvQnV0dG9uXT1cIidpY29uJ1wiXHJcbiAgICAgICAgICBbcmVhZG9ubHldPVwicmVhZG9ubHkgfHwgX2lzRWRpdGluZ1wiPlxyXG4gICAgICAgIDwvYXJxLWJ1dHRvbj5cclxuXHJcbiAgICAgICAgPG5nLXRlbXBsYXRlIFtuZ0lmXT1cInRhYmxlQ29uZmlnLm5ld1Jvd0luQWN0aW9uc1RIICYmIHNob3dGaWx0ZXJzXCI+XHJcbiAgICAgICAgICA8YXJxLWJ1dHRvblxyXG4gICAgICAgICAgICAqbmdJZj1cImhpZGVJY29uXCJcclxuICAgICAgICAgICAgY2xhc3M9XCJtYXRlcmlhbC1pY29ucyBhcnEtdG9vbGJhci1tZW51IGFkZC1idXR0b25cIlxyXG4gICAgICAgICAgICAoY2xpY2spPVwiaGlkZUZpbHRlcih0cnVlKVwiXHJcbiAgICAgICAgICAgIG1hdFRvb2x0aXA9XCJvY3VsdGFyIGZpbHRyb3NcIlxyXG4gICAgICAgICAgICBjb2xvcj1cInByaW1hcnlcIlxyXG4gICAgICAgICAgICBbaWNvbl09XCIndmlzaWJpbGl0eSdcIlxyXG4gICAgICAgICAgICBbdGlwb0J1dHRvbl09XCInaWNvbidcIj5cclxuICAgICAgICAgIDwvYXJxLWJ1dHRvbj5cclxuICAgICAgICAgIDxhcnEtYnV0dG9uXHJcbiAgICAgICAgICAgICpuZ0lmPVwiIWhpZGVJY29uXCJcclxuICAgICAgICAgICAgY2xhc3M9XCJtYXRlcmlhbC1pY29ucyBhcnEtdG9vbGJhci1tZW51IGFkZC1idXR0b25cIlxyXG4gICAgICAgICAgICAoY2xpY2spPVwiaGlkZUZpbHRlcihmYWxzZSlcIlxyXG4gICAgICAgICAgICBtYXRUb29sdGlwPVwib2N1bHRhciBmaWx0cm9zXCJcclxuICAgICAgICAgICAgY29sb3I9XCJwcmltYXJ5XCJcclxuICAgICAgICAgICAgW2ljb25dPVwiJ3Zpc2liaWxpdHlfb2ZmJ1wiXHJcbiAgICAgICAgICAgIFt0aXBvQnV0dG9uXT1cIidpY29uJ1wiPlxyXG4gICAgICAgICAgPC9hcnEtYnV0dG9uPlxyXG4gICAgICAgIDwvbmctdGVtcGxhdGU+XHJcbiAgICAgIDwvdGg+XHJcbiAgICAgIDx0ZCBtYXQtY2VsbCAqbWF0Q2VsbERlZj1cImxldCBlbGVtZW50XCIgY2xhc3M9XCJub0N1cnNvclwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJhY3Rpb24tYnV0dG9uc1wiIHN0eWxlPVwiZGlzcGxheTogZmxleFwiPlxyXG4gICAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cIiFlbGVtZW50LmlzRWRpdCAmJiAhZWxlbWVudC5pc0NyZWF0ZVwiPlxyXG4gICAgICAgICAgICA8bmctY29udGFpbmVyICpuZ0Zvcj1cImxldCBhY3Rpb24gb2YgdGFibGVDb25maWcuYWN0aW9uc1wiPlxyXG4gICAgICAgICAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJhY3Rpb24uZGlzcGxheVdoZW5EaXNhYmxlZCB8fCAoIWFjdGlvbi5kaXNwbGF5V2hlbkRpc2FibGVkICYmICFyZWFkb25seSlcIj5cclxuICAgICAgICAgICAgICAgIDxidXR0b25cclxuICAgICAgICAgICAgICAgICAgbWF0LWJ1dHRvblxyXG4gICAgICAgICAgICAgICAgICAqbmdJZj1cIiEoYWN0aW9uLmRpc3BsYXlDb25kaXRpb24gJiYgIWFjdGlvbi5kaXNwbGF5Q29uZGl0aW9uKGVsZW1lbnQpKTsgZWxzZSBoaWRkZW5CdXR0b25cIlxyXG4gICAgICAgICAgICAgICAgICBjbGFzcz1cImJ0bi1zdHJlY2hcIlxyXG4gICAgICAgICAgICAgICAgICAoY2xpY2spPVwidGhpcy5hY3Rpb25IYW5kbGVyKGFjdGlvbiwgZWxlbWVudClcIlxyXG4gICAgICAgICAgICAgICAgICBbbWF0VG9vbHRpcF09XCJhY3Rpb24udG9vbHRpcFwiXHJcbiAgICAgICAgICAgICAgICAgIFtjb2xvcl09XCJhY3Rpb24uY29sb3IgfHwgJ3ByaW1hcnknXCJcclxuICAgICAgICAgICAgICAgICAgW2Rpc2FibGVkXT1cIiEoZWxlbWVudC5pc0NyZWF0ZSB8fCBlbGVtZW50LmlzRWRpdCkgJiYgX2lzRWRpdGluZ1wiPlxyXG4gICAgICAgICAgICAgICAgICA8bWF0LWljb24gKm5nSWY9XCIhYWN0aW9uLmxhYmVsXCI+e3sgYWN0aW9uLmljb24gfX08L21hdC1pY29uPlxyXG4gICAgICAgICAgICAgICAgICA8c3BhbiAqbmdJZj1cImFjdGlvbi5sYWJlbFwiPnt7IGFjdGlvbi5sYWJlbCB9fTwvc3Bhbj5cclxuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgIDwvbmctY29udGFpbmVyPlxyXG4gICAgICAgICAgICAgIDxuZy10ZW1wbGF0ZSAjaGlkZGVuQnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBtYXQtYnV0dG9uIG1hdC1idXR0b24gY2xhc3M9XCJoaWRkZW5cIiBjbGFzcz1cImhpZGRlblwiPjwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgIDwvbmctdGVtcGxhdGU+XHJcbiAgICAgICAgICAgIDwvbmctY29udGFpbmVyPlxyXG4gICAgICAgICAgPC9uZy1jb250YWluZXI+XHJcbiAgICAgICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiKGVsZW1lbnQuaXNFZGl0IHx8IGVsZW1lbnQuaXNDcmVhdGUpICYmIF9pc0VkaXRpbmdcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ0bi1lZGl0XCI+XHJcbiAgICAgICAgICAgICAgPGFycS1idXR0b25cclxuICAgICAgICAgICAgICAgIGNsYXNzPVwibWF0ZXJpYWwtaWNvbnMgYXJxLXRvb2xiYXItbWVudSBzYXZlLWJ1dHRvblwiXHJcbiAgICAgICAgICAgICAgICAoY2xpY2spPVwiZWRpdFJvdyhlbGVtZW50KTsgc2hvd0FjdGlvbnNDb2woZmFsc2UpXCJcclxuICAgICAgICAgICAgICAgIG1hdFRvb2x0aXA9XCJHdWFyZGFyIENhbWJpb3NcIlxyXG4gICAgICAgICAgICAgICAgY29sb3I9XCJwcmltYXJ5XCJcclxuICAgICAgICAgICAgICAgIFtpY29uXT1cIidjaGVja19jaXJjbGUnXCJcclxuICAgICAgICAgICAgICAgIFt0aXBvQnV0dG9uXT1cIidpY29uJ1wiPjwvYXJxLWJ1dHRvbj5cclxuICAgICAgICAgICAgICA8YXJxLWJ1dHRvblxyXG4gICAgICAgICAgICAgICAgY2xhc3M9XCJtYXRlcmlhbC1pY29ucyBhcnEtdG9vbGJhci1tZW51IGNhbmNlbC1idXR0b25cIlxyXG4gICAgICAgICAgICAgICAgKGNsaWNrKT1cInNob3dBY3Rpb25zQ29sKGZhbHNlKTsgc3RvcEVkaXRpbmcoZWxlbWVudClcIlxyXG4gICAgICAgICAgICAgICAgbWF0VG9vbHRpcD1cIkNhbmNlbGFyXCJcclxuICAgICAgICAgICAgICAgIGNvbG9yPVwid2FyblwiXHJcbiAgICAgICAgICAgICAgICBbaWNvbl09XCInY2FuY2VsJ1wiXHJcbiAgICAgICAgICAgICAgICBbdGlwb0J1dHRvbl09XCInaWNvbidcIj48L2FycS1idXR0b24+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPC9uZy1jb250YWluZXI+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvdGQ+XHJcbiAgICA8L25nLWNvbnRhaW5lcj5cclxuXHJcbiAgICA8IS0tIEZpbHRlciBSb3dzIC0tPlxyXG4gICAgPG5nLWNvbnRhaW5lciBbbWF0Q29sdW1uRGVmXT1cIidzZWxlY3RDb2x1bW5mJ1wiPlxyXG4gICAgICA8dGggbWF0LWhlYWRlci1jZWxsICptYXRIZWFkZXJDZWxsRGVmPjwvdGg+XHJcbiAgICA8L25nLWNvbnRhaW5lcj5cclxuICAgIDxuZy1jb250YWluZXIgW21hdENvbHVtbkRlZl09XCJjb2wua2V5ICsgJ2YnXCIgKm5nRm9yPVwibGV0IGNvbCBvZiBfY29sdW1uc1NjaGVtYVwiPlxyXG4gICAgICA8dGggbWF0LWhlYWRlci1jZWxsICptYXRIZWFkZXJDZWxsRGVmPlxyXG4gICAgICAgIDxuZy1jb250YWluZXJcclxuICAgICAgICAgICpuZ0lmPVwiXHJcbiAgICAgICAgICAgIGNvbC5pc0ZpbHRlcmFibGUgIT09IGZhbHNlICYmXHJcbiAgICAgICAgICAgICh0YWJsZUNvbmZpZy5maWx0ZXJUeXBlID09PSAnY29sdW1uJyB8fCB0YWJsZUNvbmZpZy5maWx0ZXJUeXBlID09PSAnYm90aCcpICYmXHJcbiAgICAgICAgICAgIGNvbC5rZXkgIT09ICdzZWxlY3RDb2x1bW4nICYmXHJcbiAgICAgICAgICAgIGNvbC5rZXkgIT09ICdhY3Rpb25zJ1xyXG4gICAgICAgICAgXCI+XHJcbiAgICAgICAgICA8bWF0LWZvcm0tZmllbGRcclxuICAgICAgICAgICAgY2xhc3M9XCJmaWx0ZXItdG9vbGJhclwiXHJcbiAgICAgICAgICAgIHN1YnNjcmlwdFNpemluZz1cImR5bmFtaWNcIlxyXG4gICAgICAgICAgICBbbmdDbGFzc109XCJ7IHNtYWxsOiB0cnVlIH1cIlxyXG4gICAgICAgICAgICBhcHBlYXJhbmNlPVwib3V0bGluZVwiPlxyXG4gICAgICAgICAgICA8aW5wdXRcclxuICAgICAgICAgICAgICBtYXRJbnB1dFxyXG4gICAgICAgICAgICAgIFtkaXNhYmxlZF09XCJ0aGlzLl9pc0VkaXRpbmdcIlxyXG4gICAgICAgICAgICAgIChrZXl1cCk9XCJmaWx0ZXJIYW5kbGVyKCRldmVudCwgY29sLmtleSlcIlxyXG4gICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwie3sgdGFibGVDb25maWcuZmlsdGVyTGFiZWwgfX1cIiAvPlxyXG4gICAgICAgICAgPC9tYXQtZm9ybS1maWVsZD5cclxuICAgICAgICA8L25nLWNvbnRhaW5lcj5cclxuICAgICAgPC90aD5cclxuICAgIDwvbmctY29udGFpbmVyPlxyXG4gICAgPG5nLWNvbnRhaW5lciBbbWF0Q29sdW1uRGVmXT1cIidhY3Rpb25zZidcIj5cclxuICAgICAgPHRoIG1hdC1oZWFkZXItY2VsbCAqbWF0SGVhZGVyQ2VsbERlZj48L3RoPlxyXG4gICAgPC9uZy1jb250YWluZXI+XHJcblxyXG4gICAgPCEtLSBIRUFERVJTIEFORCBGSUxURVJTIC0tPlxyXG4gICAgPHRyIG1hdC1oZWFkZXItcm93ICptYXRIZWFkZXJSb3dEZWY9XCJkaXNwbGF5ZWRDb2x1bW5zXCI+PC90cj5cclxuICAgIDx0clxyXG4gICAgICBtYXQtaGVhZGVyLXJvd1xyXG4gICAgICAqbWF0SGVhZGVyUm93RGVmPVwiaXRlcmF0ZUFuZEYoZGlzcGxheWVkQ29sdW1ucylcIlxyXG4gICAgICBbbmdDbGFzc109XCJ7IGhpZGRlbl9yb3c6IHRhYmxlQ29uZmlnLmZpbHRlclR5cGUgPT09ICdoaWRlJyB9XCI+PC90cj5cclxuICAgIDx0clxyXG4gICAgICBtYXQtcm93XHJcbiAgICAgICptYXRSb3dEZWY9XCJsZXQgcm93OyBjb2x1bW5zOiBkaXNwbGF5ZWRDb2x1bW5zXCJcclxuICAgICAgW3N0eWxlLmJhY2tncm91bmQtY29sb3JdPVwicm93Q2xpY2tlZCA9PT0gcm93LmlkID8gJyNmMmYyZjInIDogJydcIj48L3RyPlxyXG5cclxuICAgIDwhLS0gUm93IHNob3duIHdoZW4gdGhlcmUgaXMgbm8gbWF0Y2hpbmcgZGF0YS4gLS0+XHJcbiAgICA8dHIgY2xhc3M9XCJtYXQtcm93XCIgKm1hdE5vRGF0YVJvdz5cclxuICAgICAgPHRkICpuZ0lmPVwiIWlzTG9hZGluZ1wiIGNsYXNzPVwibWF0LWNlbGxcIiBjb2xzcGFuPVwiNFwiPnt7IHRhYmxlQ29uZmlnLm5vRGF0YVN0cmluZyB9fTwvdGQ+XHJcbiAgICA8L3RyPlxyXG4gIDwvdGFibGU+XHJcblxyXG4gIDwhLS0gUEFHSU5BVE9SIC0tPlxyXG4gIDxtYXQtcGFnaW5hdG9yXHJcbiAgICBbcGFnZVNpemVPcHRpb25zXT1cIls1LCAxMCwgMjUsIDEwMF1cIlxyXG4gICAgc2hvd0ZpcnN0TGFzdEJ1dHRvbnNcclxuICAgIFtwYWdlU2l6ZV09XCJ0YWJsZUNvbmZpZy5wYWdlU2l6ZVwiXHJcbiAgICBbbGVuZ3RoXT1cInRvdGFsRWxlbWVudHNcIlxyXG4gICAgKHBhZ2UpPVwibmV4dFBhZ2UoJGV2ZW50KVwiPlxyXG4gIDwvbWF0LXBhZ2luYXRvcj5cclxuXHJcbiAgPCEtLSBUQUJMRSBGT09URVIgIC0tPlxyXG4gIDxkaXYgKm5nSWY9XCJ0YWJsZUNvbmZpZy5mb290ZXJUYWJsZVN0cmluZ1wiIFtpbm5lckhUTUxdPVwidGFibGVDb25maWcuZm9vdGVyVGFibGVTdHJpbmdcIj48L2Rpdj5cclxuICA8ZGl2ICpuZ0lmPVwidGFibGVDb25maWcuZm9vdGVyVGFibGVcIiBzdHlsZT1cIm1hcmdpbjogMWVtOyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kXCI+XHJcbiAgICA8bmctY29udGFpbmVyPlxyXG4gICAgICA8YnV0dG9uXHJcbiAgICAgICAgbWF0LXN0cm9rZWQtYnV0dG9uXHJcbiAgICAgICAgKm5nRm9yPVwibGV0IGJ0biBvZiB0YWJsZUNvbmZpZy5mb290ZXJUYWJsZVwiXHJcbiAgICAgICAgW2NvbG9yXT1cImJ0bi5jb2xvciA/IGJ0bi5jb2xvciA6ICdwcmltYXJ5J1wiXHJcbiAgICAgICAgW21hdFRvb2x0aXBdPVwiYnRuLnRvb2x0aXAgPyBidG4udG9vbHRpcCA6ICcnXCJcclxuICAgICAgICAoY2xpY2spPVwiYnRuLmFjdGlvbigpXCI+XHJcbiAgICAgICAgPG1hdC1pY29uICpuZ0lmPVwiYnRuLmljb25cIj57eyBidG4uaWNvbiB9fTwvbWF0LWljb24+XHJcbiAgICAgICAge3sgYnRuLmxhYmVsIH19XHJcbiAgICAgIDwvYnV0dG9uPlxyXG4gICAgPC9uZy1jb250YWluZXI+XHJcbiAgPC9kaXY+XHJcbjwvZGl2PlxyXG5cclxuPCEtLSBDT05URVhULU1FTlUgLS0+XHJcbjxhcnEtY29udGV4dC1tZW51XHJcbiAgKm5nSWY9XCJyaWdodENsaWNrTWVudUl0ZW1zLmxlbmd0aCA+IDAgJiYgaXNEaXNwbGF5Q29udGV4dE1lbnVcIlxyXG4gIFtjb250ZXh0TWVudUl0ZW1zXT1cInJpZ2h0Q2xpY2tNZW51SXRlbXNcIlxyXG4gIChvbkNvbnRleHRNZW51SXRlbUNsaWNrKT1cIiRldmVudC5kYXRhLmFjdGlvbigkZXZlbnQuZGF0YS5yb3cpOyBzaG93QWN0aW9uc0NvbCgpXCJcclxuICBbbWVudVBvc2l0aW9uc109XCJyaWdodENsaWNrTWVudVBvc2l0aW9uc1wiPlxyXG48L2FycS1jb250ZXh0LW1lbnU+XHJcbiJdfQ==