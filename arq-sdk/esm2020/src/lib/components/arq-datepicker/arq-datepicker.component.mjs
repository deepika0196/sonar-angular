import { Component, Input, ViewEncapsulation } from '@angular/core';
import { MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';
import { MAT_DATE_FORMATS } from '@angular/material/core';
import { ArqGenericInputComponent } from '../../../core/arq-generic-input/arq-generic-input.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/material/input";
import * as i3 from "@angular/material/form-field";
import * as i4 from "@angular/forms";
import * as i5 from "@angular/material/tooltip";
import * as i6 from "@angular/material/datepicker";
import * as i7 from "../arq-form-control-error/arq-form-control-error.component";
export const MY_FORMATS = {
    parse: {
        dateInput: 'DD/MM/YYYY'
    },
    display: {
        dateInput: 'L',
        monthYearLabel: 'MMMM YYYY',
        dateA11yLabel: 'LL',
        monthYearA11yLabel: 'MMMM YYYY'
    }
};
export const dateProviders = [
    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },
    { provide: MAT_MOMENT_DATE_ADAPTER_OPTIONS, useValue: { strict: true } },
    { provide: MAT_MOMENT_DATE_ADAPTER_OPTIONS, useValue: { useUtc: true } }
];
export class ArqDatepickerComponent extends ArqGenericInputComponent {
    constructor(datePipe) {
        super();
        this.datePipe = datePipe;
    }
    ngOnChanges(changes) {
        if (changes)
            this.setValueDate();
    }
    ngOnInit() {
        this.validateDate();
        // Disable funcionality
        if (typeof this.disabled === 'string')
            this.fGroup.controls[this.value].disable();
        else if (typeof this.disabled === 'boolean' && this.disabled)
            this.fGroup.controls[this.value].disable();
    }
    isDisabled() {
        if (this.fGroup) {
            return this.fGroup.controls[this.value].disabled;
        }
        return false;
    }
    comprobarEntradas() { }
}
ArqDatepickerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: ArqDatepickerComponent, deps: [{ token: i1.DatePipe }], target: i0.ɵɵFactoryTarget.Component });
ArqDatepickerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: ArqDatepickerComponent, selector: "arq-datepicker", inputs: { label: "label", hint: "hint", disabled: "disabled" }, usesInheritance: true, usesOnChanges: true, ngImport: i0, template: "<label *ngIf=\"this.label\"\r\n  >{{ this.label }}\r\n  <span *ngIf=\"this.getValidations()\" class=\"text-danger\"> * </span>\r\n</label>\r\n<mat-form-field appearance=\"outline\" class=\"full-width type-date pb-0\" [class]=\"sizeInput\" *ngIf=\"this.getValue()\">\r\n  <input\r\n    matInput\r\n    [matDatepicker]=\"picker\"\r\n    [formControl]=\"this.getValue()\"\r\n    #tooltip=\"matTooltip\"\r\n    [matTooltip]=\"this.message\"\r\n    [matTooltipPosition]=\"this.positionTooltip\"\r\n    [matTooltipHideDelay]=\"this.hideDelay\"\r\n    [placeholder]=\"placeholder\"\r\n    (dateChange)=\"ngChanges()\"\r\n    (blur)=\"validateValue()\" />\r\n  <mat-error arq-form-control-error [labelControl]=\"this.label\" [formControlSibling]=\"this.getValue()\"></mat-error>\r\n  <mat-hint *ngIf=\"hint\">{{ this.hint }}</mat-hint>\r\n  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n  <mat-datepicker #picker [disabled]=\"this.isDisabled()\"></mat-datepicker>\r\n</mat-form-field>\r\n", styles: [".full-width{width:100%}\n"], dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { kind: "component", type: i3.MatFormField, selector: "mat-form-field", inputs: ["hideRequiredMarker", "color", "floatLabel", "appearance", "subscriptSizing", "hintLabel"], exportAs: ["matFormField"] }, { kind: "directive", type: i3.MatHint, selector: "mat-hint", inputs: ["align", "id"] }, { kind: "directive", type: i3.MatError, selector: "mat-error, [matError]", inputs: ["id"] }, { kind: "directive", type: i3.MatSuffix, selector: "[matSuffix], [matIconSuffix], [matTextSuffix]", inputs: ["matTextSuffix"] }, { kind: "directive", type: i4.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i4.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "directive", type: i5.MatTooltip, selector: "[matTooltip]", exportAs: ["matTooltip"] }, { kind: "component", type: i6.MatDatepicker, selector: "mat-datepicker", exportAs: ["matDatepicker"] }, { kind: "directive", type: i6.MatDatepickerInput, selector: "input[matDatepicker]", inputs: ["matDatepicker", "min", "max", "matDatepickerFilter"], exportAs: ["matDatepickerInput"] }, { kind: "component", type: i6.MatDatepickerToggle, selector: "mat-datepicker-toggle", inputs: ["for", "tabIndex", "aria-label", "disabled", "disableRipple"], exportAs: ["matDatepickerToggle"] }, { kind: "component", type: i7.ArqFormControlErrorComponent, selector: "[arq-form-control-error]", inputs: ["labelControl", "errorMapMessages", "formControlSibling"] }], encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: ArqDatepickerComponent, decorators: [{
            type: Component,
            args: [{ selector: 'arq-datepicker', encapsulation: ViewEncapsulation.None, template: "<label *ngIf=\"this.label\"\r\n  >{{ this.label }}\r\n  <span *ngIf=\"this.getValidations()\" class=\"text-danger\"> * </span>\r\n</label>\r\n<mat-form-field appearance=\"outline\" class=\"full-width type-date pb-0\" [class]=\"sizeInput\" *ngIf=\"this.getValue()\">\r\n  <input\r\n    matInput\r\n    [matDatepicker]=\"picker\"\r\n    [formControl]=\"this.getValue()\"\r\n    #tooltip=\"matTooltip\"\r\n    [matTooltip]=\"this.message\"\r\n    [matTooltipPosition]=\"this.positionTooltip\"\r\n    [matTooltipHideDelay]=\"this.hideDelay\"\r\n    [placeholder]=\"placeholder\"\r\n    (dateChange)=\"ngChanges()\"\r\n    (blur)=\"validateValue()\" />\r\n  <mat-error arq-form-control-error [labelControl]=\"this.label\" [formControlSibling]=\"this.getValue()\"></mat-error>\r\n  <mat-hint *ngIf=\"hint\">{{ this.hint }}</mat-hint>\r\n  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n  <mat-datepicker #picker [disabled]=\"this.isDisabled()\"></mat-datepicker>\r\n</mat-form-field>\r\n", styles: [".full-width{width:100%}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.DatePipe }]; }, propDecorators: { label: [{
                type: Input
            }], hint: [{
                type: Input
            }], disabled: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJxLWRhdGVwaWNrZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vYXJxLXNkay9zcmMvbGliL2NvbXBvbmVudHMvYXJxLWRhdGVwaWNrZXIvYXJxLWRhdGVwaWNrZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vYXJxLXNkay9zcmMvbGliL2NvbXBvbmVudHMvYXJxLWRhdGVwaWNrZXIvYXJxLWRhdGVwaWNrZXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQW9DLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3RHLE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ25GLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRTFELE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDZEQUE2RCxDQUFDOzs7Ozs7Ozs7QUFHdkcsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHO0lBQ3hCLEtBQUssRUFBRTtRQUNMLFNBQVMsRUFBRSxZQUFZO0tBQ3hCO0lBQ0QsT0FBTyxFQUFFO1FBQ1AsU0FBUyxFQUFFLEdBQUc7UUFDZCxjQUFjLEVBQUUsV0FBVztRQUMzQixhQUFhLEVBQUUsSUFBSTtRQUNuQixrQkFBa0IsRUFBRSxXQUFXO0tBQ2hDO0NBQ0YsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRztJQUMzQixFQUFFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxRQUFRLEVBQUUsVUFBVSxFQUFFO0lBQ25ELEVBQUUsT0FBTyxFQUFFLCtCQUErQixFQUFFLFFBQVEsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsRUFBRTtJQUN4RSxFQUFFLE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxRQUFRLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLEVBQUU7Q0FDekUsQ0FBQztBQVFGLE1BQU0sT0FBTyxzQkFBdUIsU0FBUSx3QkFBd0I7SUFLbEUsWUFBMEIsUUFBa0I7UUFDMUMsS0FBSyxFQUFFLENBQUM7UUFEZ0IsYUFBUSxHQUFSLFFBQVEsQ0FBVTtJQUU1QyxDQUFDO0lBRU0sV0FBVyxDQUFDLE9BQXNCO1FBQ3ZDLElBQUksT0FBTztZQUFFLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUNuQyxDQUFDO0lBRWUsUUFBUTtRQUN0QixJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7UUFFcEIsdUJBQXVCO1FBQ3ZCLElBQUksT0FBTyxJQUFJLENBQUMsUUFBUSxLQUFLLFFBQVE7WUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7YUFDN0UsSUFBSSxPQUFPLElBQUksQ0FBQyxRQUFRLEtBQUssU0FBUyxJQUFJLElBQUksQ0FBQyxRQUFRO1lBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQzNHLENBQUM7SUFFTSxVQUFVO1FBQ2YsSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ2YsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsUUFBUSxDQUFDO1NBQ2xEO1FBQ0QsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0lBRU0saUJBQWlCLEtBQVUsQ0FBQzs7bUhBNUJ4QixzQkFBc0I7dUdBQXRCLHNCQUFzQixrS0MvQm5DLHMvQkFxQkE7MkZEVWEsc0JBQXNCO2tCQU5sQyxTQUFTOytCQUNFLGdCQUFnQixpQkFHWCxpQkFBaUIsQ0FBQyxJQUFJOytGQUdaLEtBQUs7c0JBQTdCLEtBQUs7Z0JBQ1UsSUFBSTtzQkFBbkIsS0FBSztnQkFDVSxRQUFRO3NCQUF2QixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25DaGFuZ2VzLCBPbkluaXQsIFNpbXBsZUNoYW5nZXMsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE1BVF9NT01FTlRfREFURV9BREFQVEVSX09QVElPTlMgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC1tb21lbnQtYWRhcHRlcic7XHJcbmltcG9ydCB7IE1BVF9EQVRFX0ZPUk1BVFMgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9jb3JlJztcclxuXHJcbmltcG9ydCB7IEFycUdlbmVyaWNJbnB1dENvbXBvbmVudCB9IGZyb20gJy4uLy4uLy4uL2NvcmUvYXJxLWdlbmVyaWMtaW5wdXQvYXJxLWdlbmVyaWMtaW5wdXQuY29tcG9uZW50JztcclxuaW1wb3J0IHsgRGF0ZVBpcGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5cclxuZXhwb3J0IGNvbnN0IE1ZX0ZPUk1BVFMgPSB7XHJcbiAgcGFyc2U6IHtcclxuICAgIGRhdGVJbnB1dDogJ0REL01NL1lZWVknXHJcbiAgfSxcclxuICBkaXNwbGF5OiB7XHJcbiAgICBkYXRlSW5wdXQ6ICdMJyxcclxuICAgIG1vbnRoWWVhckxhYmVsOiAnTU1NTSBZWVlZJyxcclxuICAgIGRhdGVBMTF5TGFiZWw6ICdMTCcsXHJcbiAgICBtb250aFllYXJBMTF5TGFiZWw6ICdNTU1NIFlZWVknXHJcbiAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGRhdGVQcm92aWRlcnMgPSBbXHJcbiAgeyBwcm92aWRlOiBNQVRfREFURV9GT1JNQVRTLCB1c2VWYWx1ZTogTVlfRk9STUFUUyB9LFxyXG4gIHsgcHJvdmlkZTogTUFUX01PTUVOVF9EQVRFX0FEQVBURVJfT1BUSU9OUywgdXNlVmFsdWU6IHsgc3RyaWN0OiB0cnVlIH0gfSxcclxuICB7IHByb3ZpZGU6IE1BVF9NT01FTlRfREFURV9BREFQVEVSX09QVElPTlMsIHVzZVZhbHVlOiB7IHVzZVV0YzogdHJ1ZSB9IH1cclxuXTtcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYXJxLWRhdGVwaWNrZXInLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9hcnEtZGF0ZXBpY2tlci5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vYXJxLWRhdGVwaWNrZXIuY29tcG9uZW50LmNzcyddLFxyXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcclxufSlcclxuZXhwb3J0IGNsYXNzIEFycURhdGVwaWNrZXJDb21wb25lbnQgZXh0ZW5kcyBBcnFHZW5lcmljSW5wdXRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XHJcbiAgQElucHV0KCkgcHVibGljIG92ZXJyaWRlIGxhYmVsITogc3RyaW5nO1xyXG4gIEBJbnB1dCgpIHB1YmxpYyBoaW50ITogc3RyaW5nO1xyXG4gIEBJbnB1dCgpIHB1YmxpYyBkaXNhYmxlZDogdW5kZWZpbmVkIHwgc3RyaW5nIHwgYm9vbGVhbjtcclxuXHJcbiAgcHVibGljIGNvbnN0cnVjdG9yKHB1YmxpYyBkYXRlUGlwZTogRGF0ZVBpcGUpIHtcclxuICAgIHN1cGVyKCk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xyXG4gICAgaWYgKGNoYW5nZXMpIHRoaXMuc2V0VmFsdWVEYXRlKCk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgb3ZlcnJpZGUgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICB0aGlzLnZhbGlkYXRlRGF0ZSgpO1xyXG5cclxuICAgIC8vIERpc2FibGUgZnVuY2lvbmFsaXR5XHJcbiAgICBpZiAodHlwZW9mIHRoaXMuZGlzYWJsZWQgPT09ICdzdHJpbmcnKSB0aGlzLmZHcm91cC5jb250cm9sc1t0aGlzLnZhbHVlXS5kaXNhYmxlKCk7XHJcbiAgICBlbHNlIGlmICh0eXBlb2YgdGhpcy5kaXNhYmxlZCA9PT0gJ2Jvb2xlYW4nICYmIHRoaXMuZGlzYWJsZWQpIHRoaXMuZkdyb3VwLmNvbnRyb2xzW3RoaXMudmFsdWVdLmRpc2FibGUoKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBpc0Rpc2FibGVkKCk6IGJvb2xlYW4ge1xyXG4gICAgaWYgKHRoaXMuZkdyb3VwKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmZHcm91cC5jb250cm9sc1t0aGlzLnZhbHVlXS5kaXNhYmxlZDtcclxuICAgIH1cclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBjb21wcm9iYXJFbnRyYWRhcygpOiB2b2lkIHt9XHJcbn1cclxuIiwiPGxhYmVsICpuZ0lmPVwidGhpcy5sYWJlbFwiXHJcbiAgPnt7IHRoaXMubGFiZWwgfX1cclxuICA8c3BhbiAqbmdJZj1cInRoaXMuZ2V0VmFsaWRhdGlvbnMoKVwiIGNsYXNzPVwidGV4dC1kYW5nZXJcIj4gKiA8L3NwYW4+XHJcbjwvbGFiZWw+XHJcbjxtYXQtZm9ybS1maWVsZCBhcHBlYXJhbmNlPVwib3V0bGluZVwiIGNsYXNzPVwiZnVsbC13aWR0aCB0eXBlLWRhdGUgcGItMFwiIFtjbGFzc109XCJzaXplSW5wdXRcIiAqbmdJZj1cInRoaXMuZ2V0VmFsdWUoKVwiPlxyXG4gIDxpbnB1dFxyXG4gICAgbWF0SW5wdXRcclxuICAgIFttYXREYXRlcGlja2VyXT1cInBpY2tlclwiXHJcbiAgICBbZm9ybUNvbnRyb2xdPVwidGhpcy5nZXRWYWx1ZSgpXCJcclxuICAgICN0b29sdGlwPVwibWF0VG9vbHRpcFwiXHJcbiAgICBbbWF0VG9vbHRpcF09XCJ0aGlzLm1lc3NhZ2VcIlxyXG4gICAgW21hdFRvb2x0aXBQb3NpdGlvbl09XCJ0aGlzLnBvc2l0aW9uVG9vbHRpcFwiXHJcbiAgICBbbWF0VG9vbHRpcEhpZGVEZWxheV09XCJ0aGlzLmhpZGVEZWxheVwiXHJcbiAgICBbcGxhY2Vob2xkZXJdPVwicGxhY2Vob2xkZXJcIlxyXG4gICAgKGRhdGVDaGFuZ2UpPVwibmdDaGFuZ2VzKClcIlxyXG4gICAgKGJsdXIpPVwidmFsaWRhdGVWYWx1ZSgpXCIgLz5cclxuICA8bWF0LWVycm9yIGFycS1mb3JtLWNvbnRyb2wtZXJyb3IgW2xhYmVsQ29udHJvbF09XCJ0aGlzLmxhYmVsXCIgW2Zvcm1Db250cm9sU2libGluZ109XCJ0aGlzLmdldFZhbHVlKClcIj48L21hdC1lcnJvcj5cclxuICA8bWF0LWhpbnQgKm5nSWY9XCJoaW50XCI+e3sgdGhpcy5oaW50IH19PC9tYXQtaGludD5cclxuICA8bWF0LWRhdGVwaWNrZXItdG9nZ2xlIG1hdFN1ZmZpeCBbZm9yXT1cInBpY2tlclwiPjwvbWF0LWRhdGVwaWNrZXItdG9nZ2xlPlxyXG4gIDxtYXQtZGF0ZXBpY2tlciAjcGlja2VyIFtkaXNhYmxlZF09XCJ0aGlzLmlzRGlzYWJsZWQoKVwiPjwvbWF0LWRhdGVwaWNrZXI+XHJcbjwvbWF0LWZvcm0tZmllbGQ+XHJcbiJdfQ==