import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
import { ArqGenericInputComponent } from '../../../core/arq-generic-input/arq-generic-input.component';
import { checkRequiredFields } from '../../../core/utils/basic.util';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@angular/common";
import * as i3 from "@angular/material/button-toggle";
export class ArqButtonToggleMultipleComponent extends ArqGenericInputComponent {
    constructor() {
        super(...arguments);
        this.selectionChange = new EventEmitter();
    }
    onValChange(value) {
        this.selectionChange.emit(value);
    }
    comprobarEntradas() {
        checkRequiredFields(this.toggleOptions, 'toggleOptions');
    }
}
ArqButtonToggleMultipleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: ArqButtonToggleMultipleComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
ArqButtonToggleMultipleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: ArqButtonToggleMultipleComponent, selector: "arq-button-toggle-multiple", inputs: { toggleOptions: "toggleOptions" }, outputs: { selectionChange: "selectionChange" }, usesInheritance: true, ngImport: i0, template: "<mat-button-toggle-group multiple [formControl]=\"this.getValue()\" (change)=\"onValChange($event.value)\">\r\n  <mat-button-toggle *ngFor=\"let op of toggleOptions | async\" [value]=\"op.value\">\r\n    {{ op.description }}\r\n  </mat-button-toggle>\r\n</mat-button-toggle-group>\r\n", styles: [".mat-button-toggle-appearance-standard{background-color:#9d9b9a;color:#fff;border-radius:0}.mat-button-toggle-checked{background-color:#11799b;color:#fff;border-radius:0}.bg-red:nth-child(1){background-color:red;color:#fff}.bg-green:nth-child(2){background-color:green;color:#fff}.bg-blue:nth-child(3){background-color:#00f!important;color:#fff}\n"], dependencies: [{ kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i3.MatButtonToggleGroup, selector: "mat-button-toggle-group", inputs: ["appearance", "name", "vertical", "value", "multiple", "disabled"], outputs: ["valueChange", "change"], exportAs: ["matButtonToggleGroup"] }, { kind: "component", type: i3.MatButtonToggle, selector: "mat-button-toggle", inputs: ["disableRipple", "aria-label", "aria-labelledby", "id", "name", "value", "tabIndex", "appearance", "checked", "disabled"], outputs: ["change"], exportAs: ["matButtonToggle"] }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }], encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: ArqButtonToggleMultipleComponent, decorators: [{
            type: Component,
            args: [{ selector: 'arq-button-toggle-multiple', encapsulation: ViewEncapsulation.None, template: "<mat-button-toggle-group multiple [formControl]=\"this.getValue()\" (change)=\"onValChange($event.value)\">\r\n  <mat-button-toggle *ngFor=\"let op of toggleOptions | async\" [value]=\"op.value\">\r\n    {{ op.description }}\r\n  </mat-button-toggle>\r\n</mat-button-toggle-group>\r\n", styles: [".mat-button-toggle-appearance-standard{background-color:#9d9b9a;color:#fff;border-radius:0}.mat-button-toggle-checked{background-color:#11799b;color:#fff;border-radius:0}.bg-red:nth-child(1){background-color:red;color:#fff}.bg-green:nth-child(2){background-color:green;color:#fff}.bg-blue:nth-child(3){background-color:#00f!important;color:#fff}\n"] }]
        }], propDecorators: { toggleOptions: [{
                type: Input
            }], selectionChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJxLWJ1dHRvbi10b2dnbGUtbXVsdGlwbGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vYXJxLXNkay9zcmMvbGliL2NvbXBvbmVudHMvYXJxLWJ1dHRvbi10b2dnbGUtbXVsdGlwbGUvYXJxLWJ1dHRvbi10b2dnbGUtbXVsdGlwbGUuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vYXJxLXNkay9zcmMvbGliL2NvbXBvbmVudHMvYXJxLWJ1dHRvbi10b2dnbGUtbXVsdGlwbGUvYXJxLWJ1dHRvbi10b2dnbGUtbXVsdGlwbGUuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVsRyxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSw2REFBNkQsQ0FBQztBQUN2RyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQzs7Ozs7QUFTckUsTUFBTSxPQUFPLGdDQUFpQyxTQUFRLHdCQUF3QjtJQU45RTs7UUFXRSxvQkFBZSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7S0FTdEM7SUFQQyxXQUFXLENBQUMsS0FBVTtRQUNwQixJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRUQsaUJBQWlCO1FBQ2YsbUJBQW1CLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxlQUFlLENBQUMsQ0FBQztJQUMzRCxDQUFDOzs2SEFiVSxnQ0FBZ0M7aUhBQWhDLGdDQUFnQyxzTENaN0MsOFJBS0E7MkZET2EsZ0NBQWdDO2tCQU41QyxTQUFTOytCQUNFLDRCQUE0QixpQkFHdkIsaUJBQWlCLENBQUMsSUFBSTs4QkFJckMsYUFBYTtzQkFEWixLQUFLO2dCQUlOLGVBQWU7c0JBRGQsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25Jbml0LCBPdXRwdXQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgQXJxR2VuZXJpY0lucHV0Q29tcG9uZW50IH0gZnJvbSAnLi4vLi4vLi4vY29yZS9hcnEtZ2VuZXJpYy1pbnB1dC9hcnEtZ2VuZXJpYy1pbnB1dC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBjaGVja1JlcXVpcmVkRmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vY29yZS91dGlscy9iYXNpYy51dGlsJztcclxuaW1wb3J0IHsgQXJxTGlzdCB9IGZyb20gJy4uLy4uL2ludGVyZmFjZXMvYXJxLWxpc3QuaW50ZXJmYWNlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYXJxLWJ1dHRvbi10b2dnbGUtbXVsdGlwbGUnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9hcnEtYnV0dG9uLXRvZ2dsZS1tdWx0aXBsZS5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vYXJxLWJ1dHRvbi10b2dnbGUtbXVsdGlwbGUuY29tcG9uZW50LmNzcyddLFxyXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcclxufSlcclxuZXhwb3J0IGNsYXNzIEFycUJ1dHRvblRvZ2dsZU11bHRpcGxlQ29tcG9uZW50IGV4dGVuZHMgQXJxR2VuZXJpY0lucHV0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBASW5wdXQoKVxyXG4gIHRvZ2dsZU9wdGlvbnMhOiBPYnNlcnZhYmxlPEFycUxpc3RbXT47XHJcblxyXG4gIEBPdXRwdXQoKVxyXG4gIHNlbGVjdGlvbkNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuXHJcbiAgb25WYWxDaGFuZ2UodmFsdWU6IGFueSkge1xyXG4gICAgdGhpcy5zZWxlY3Rpb25DaGFuZ2UuZW1pdCh2YWx1ZSk7XHJcbiAgfVxyXG5cclxuICBjb21wcm9iYXJFbnRyYWRhcygpOiB2b2lkIHtcclxuICAgIGNoZWNrUmVxdWlyZWRGaWVsZHModGhpcy50b2dnbGVPcHRpb25zLCAndG9nZ2xlT3B0aW9ucycpO1xyXG4gIH1cclxufVxyXG4iLCI8bWF0LWJ1dHRvbi10b2dnbGUtZ3JvdXAgbXVsdGlwbGUgW2Zvcm1Db250cm9sXT1cInRoaXMuZ2V0VmFsdWUoKVwiIChjaGFuZ2UpPVwib25WYWxDaGFuZ2UoJGV2ZW50LnZhbHVlKVwiPlxyXG4gIDxtYXQtYnV0dG9uLXRvZ2dsZSAqbmdGb3I9XCJsZXQgb3Agb2YgdG9nZ2xlT3B0aW9ucyB8IGFzeW5jXCIgW3ZhbHVlXT1cIm9wLnZhbHVlXCI+XHJcbiAgICB7eyBvcC5kZXNjcmlwdGlvbiB9fVxyXG4gIDwvbWF0LWJ1dHRvbi10b2dnbGU+XHJcbjwvbWF0LWJ1dHRvbi10b2dnbGUtZ3JvdXA+XHJcbiJdfQ==