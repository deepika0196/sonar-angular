import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
import { of } from 'rxjs';
import { ArqGenericInputComponent } from '../../../core/arq-generic-input/arq-generic-input.component';
import { checkRequiredListFields } from '../../../core/utils/basic.util';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@angular/common";
import * as i3 from "@angular/material/form-field";
import * as i4 from "@ng-matero/extensions/select";
import * as i5 from "../arq-form-control-error/arq-form-control-error.component";
export class ArqSelectMultipleComponent extends ArqGenericInputComponent {
    constructor() {
        super();
        this.disabled = false;
        this.selectionChange = new EventEmitter();
        this.hint = '';
        this.optionsList = [];
    }
    ngOnInit() {
        checkRequiredListFields([this.selectOptionsList], ['selectOptionsList']);
        if (Array.isArray(this.selectOptionsList)) {
            this.selectOptionsList = of(this.selectOptionsList);
        }
        this.selectOptionsList.subscribe((data) => {
            this.optionsList = data;
        });
        if (this.selectedValue) {
            this.getValue()?.setValue(this.selectedValue);
        }
    }
    reset() {
        this.selectedValue = '';
    }
    comprobarEntradas() { }
}
ArqSelectMultipleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: ArqSelectMultipleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ArqSelectMultipleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: ArqSelectMultipleComponent, selector: "arq-select-multiple", inputs: { disabled: "disabled", selectedValue: "selectedValue", selectOptionsList: "selectOptionsList", hint: "hint" }, outputs: { selectionChange: "selectionChange" }, usesInheritance: true, ngImport: i0, template: "<label *ngIf=\"this.label\"\r\n  >{{ this.label }}\r\n  <span *ngIf=\"this.getValidations()\" class=\"text-danger\"> * </span>\r\n</label>\r\n<mat-form-field appearance=\"outline\" class=\"full-width\" *ngIf=\"this.getValue()\">\r\n  <mtx-select\r\n    [formControl]=\"this.getValue()\"\r\n    [items]=\"this.optionsList\"\r\n    [bindLabel]=\"this.lang === this.LANG_ES ? 'description' : 'descriptionV'\"\r\n    bindValue=\"value\"\r\n    [multiple]=\"true\"\r\n    (change)=\"ngChanges()\">\r\n  </mtx-select>\r\n\r\n  <mat-hint>{{ this.hint }}</mat-hint>\r\n  <mat-error\r\n    arq-form-control-error\r\n    [labelControl]=\"this.label\"\r\n    [formControlSibling]=\"this.getValue()\"\r\n  ></mat-error>\r\n</mat-form-field>\r\n", styles: [".full-width{width:100%}\n"], dependencies: [{ kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i3.MatFormField, selector: "mat-form-field", inputs: ["hideRequiredMarker", "color", "floatLabel", "appearance", "subscriptSizing", "hintLabel"], exportAs: ["matFormField"] }, { kind: "directive", type: i3.MatHint, selector: "mat-hint", inputs: ["align", "id"] }, { kind: "directive", type: i3.MatError, selector: "mat-error, [matError]", inputs: ["id"] }, { kind: "component", type: i4.MtxSelect, selector: "mtx-select", inputs: ["disabled", "addTag", "addTagText", "appearance", "appendTo", "bindLabel", "bindValue", "closeOnSelect", "clearAllText", "clearable", "clearOnBackspace", "compareWith", "dropdownPosition", "groupBy", "groupValue", "selectableGroup", "selectableGroupAsModel", "hideSelected", "isOpen", "loading", "loadingText", "labelForId", "markFirst", "maxSelectedItems", "multiple", "notFoundText", "searchable", "readonly", "searchFn", "searchWhileComposing", "selectOnTab", "trackByFn", "inputAttrs", "tabIndex", "openOnEnter", "minTermLength", "editableSearchTerm", "keyDownFn", "virtualScroll", "typeToSearchText", "typeahead", "clearSearchOnAdd", "items", "value", "id", "placeholder", "required", "errorStateMatcher", "aria-label", "aria-labelledby"], outputs: ["blur", "focus", "change", "open", "close", "search", "clear", "add", "remove", "scroll", "scrollToEnd"], exportAs: ["mtxSelect"] }, { kind: "component", type: i5.ArqFormControlErrorComponent, selector: "[arq-form-control-error]", inputs: ["labelControl", "errorMapMessages", "formControlSibling"] }], encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: ArqSelectMultipleComponent, decorators: [{
            type: Component,
            args: [{ selector: 'arq-select-multiple', encapsulation: ViewEncapsulation.None, template: "<label *ngIf=\"this.label\"\r\n  >{{ this.label }}\r\n  <span *ngIf=\"this.getValidations()\" class=\"text-danger\"> * </span>\r\n</label>\r\n<mat-form-field appearance=\"outline\" class=\"full-width\" *ngIf=\"this.getValue()\">\r\n  <mtx-select\r\n    [formControl]=\"this.getValue()\"\r\n    [items]=\"this.optionsList\"\r\n    [bindLabel]=\"this.lang === this.LANG_ES ? 'description' : 'descriptionV'\"\r\n    bindValue=\"value\"\r\n    [multiple]=\"true\"\r\n    (change)=\"ngChanges()\">\r\n  </mtx-select>\r\n\r\n  <mat-hint>{{ this.hint }}</mat-hint>\r\n  <mat-error\r\n    arq-form-control-error\r\n    [labelControl]=\"this.label\"\r\n    [formControlSibling]=\"this.getValue()\"\r\n  ></mat-error>\r\n</mat-form-field>\r\n", styles: [".full-width{width:100%}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { disabled: [{
                type: Input
            }], selectedValue: [{
                type: Input
            }], selectOptionsList: [{
                type: Input
            }], selectionChange: [{
                type: Output
            }], hint: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJxLXNlbGVjdC1tdWx0aXBsZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9hcnEtc2RrL3NyYy9saWIvY29tcG9uZW50cy9hcnEtc2VsZWN0LW11bHRpcGxlL2FycS1zZWxlY3QtbXVsdGlwbGUuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vYXJxLXNkay9zcmMvbGliL2NvbXBvbmVudHMvYXJxLXNlbGVjdC1tdWx0aXBsZS9hcnEtc2VsZWN0LW11bHRpcGxlLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBVSxNQUFNLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbEcsT0FBTyxFQUFjLEVBQUUsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUV0QyxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSw2REFBNkQsQ0FBQztBQUN2RyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQzs7Ozs7OztBQVN6RSxNQUFNLE9BQU8sMEJBQTJCLFNBQVEsd0JBQXdCO0lBa0J0RTtRQUNFLEtBQUssRUFBRSxDQUFDO1FBakJWLGFBQVEsR0FBWSxLQUFLLENBQUM7UUFTMUIsb0JBQWUsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBR3JDLFNBQUksR0FBVyxFQUFFLENBQUM7UUFFbEIsZ0JBQVcsR0FBVSxFQUFFLENBQUM7SUFJeEIsQ0FBQztJQUVRLFFBQVE7UUFDZix1QkFBdUIsQ0FBQyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxFQUFFLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDO1FBRXpFLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsRUFBRTtZQUN6QyxJQUFJLENBQUMsaUJBQWlCLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1NBQ3JEO1FBRUQsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFNBQVMsQ0FBQyxDQUFDLElBQVcsRUFBRSxFQUFFO1lBQy9DLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO1FBQzFCLENBQUMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxJQUFJLENBQUMsYUFBYSxFQUFFO1lBQ3RCLElBQUksQ0FBQyxRQUFRLEVBQUUsRUFBRSxRQUFRLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1NBQy9DO0lBQ0gsQ0FBQztJQUVELEtBQUs7UUFDSCxJQUFJLENBQUMsYUFBYSxHQUFHLEVBQUUsQ0FBQztJQUMxQixDQUFDO0lBRUQsaUJBQWlCLEtBQVUsQ0FBQzs7dUhBMUNqQiwwQkFBMEI7MkdBQTFCLDBCQUEwQiwyUENidkMsOHRCQXFCQTsyRkRSYSwwQkFBMEI7a0JBTnRDLFNBQVM7K0JBQ0UscUJBQXFCLGlCQUdoQixpQkFBaUIsQ0FBQyxJQUFJOzBFQUlyQyxRQUFRO3NCQURQLEtBQUs7Z0JBSUMsYUFBYTtzQkFEbkIsS0FBSztnQkFJTixpQkFBaUI7c0JBRGhCLEtBQUs7Z0JBSU4sZUFBZTtzQkFEZCxNQUFNO2dCQUlQLElBQUk7c0JBREgsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25Jbml0LCBPdXRwdXQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE9ic2VydmFibGUsIG9mIH0gZnJvbSAncnhqcyc7XHJcblxyXG5pbXBvcnQgeyBBcnFHZW5lcmljSW5wdXRDb21wb25lbnQgfSBmcm9tICcuLi8uLi8uLi9jb3JlL2FycS1nZW5lcmljLWlucHV0L2FycS1nZW5lcmljLWlucHV0LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IGNoZWNrUmVxdWlyZWRMaXN0RmllbGRzIH0gZnJvbSAnLi4vLi4vLi4vY29yZS91dGlscy9iYXNpYy51dGlsJztcclxuaW1wb3J0IHsgQXJxTGlzdCB9IGZyb20gJy4uLy4uL2ludGVyZmFjZXMvYXJxLWxpc3QuaW50ZXJmYWNlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYXJxLXNlbGVjdC1tdWx0aXBsZScsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2FycS1zZWxlY3QtbXVsdGlwbGUuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2FycS1zZWxlY3QtbXVsdGlwbGUuY29tcG9uZW50LmNzcyddLFxyXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcclxufSlcclxuZXhwb3J0IGNsYXNzIEFycVNlbGVjdE11bHRpcGxlQ29tcG9uZW50IGV4dGVuZHMgQXJxR2VuZXJpY0lucHV0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBASW5wdXQoKVxyXG4gIGRpc2FibGVkOiBib29sZWFuID0gZmFsc2U7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgcHVibGljIHNlbGVjdGVkVmFsdWU/OiBhbnk7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgc2VsZWN0T3B0aW9uc0xpc3QhOiBPYnNlcnZhYmxlPEFycUxpc3RbXT4gfCBhbnk7XHJcblxyXG4gIEBPdXRwdXQoKVxyXG4gIHNlbGVjdGlvbkNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuXHJcbiAgQElucHV0KClcclxuICBoaW50OiBzdHJpbmcgPSAnJztcclxuXHJcbiAgb3B0aW9uc0xpc3Q6IGFueVtdID0gW107XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgc3VwZXIoKTtcclxuICB9XHJcblxyXG4gIG92ZXJyaWRlIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgY2hlY2tSZXF1aXJlZExpc3RGaWVsZHMoW3RoaXMuc2VsZWN0T3B0aW9uc0xpc3RdLCBbJ3NlbGVjdE9wdGlvbnNMaXN0J10pO1xyXG5cclxuICAgIGlmIChBcnJheS5pc0FycmF5KHRoaXMuc2VsZWN0T3B0aW9uc0xpc3QpKSB7XHJcbiAgICAgIHRoaXMuc2VsZWN0T3B0aW9uc0xpc3QgPSBvZih0aGlzLnNlbGVjdE9wdGlvbnNMaXN0KTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLnNlbGVjdE9wdGlvbnNMaXN0LnN1YnNjcmliZSgoZGF0YTogYW55W10pID0+IHtcclxuICAgICAgdGhpcy5vcHRpb25zTGlzdCA9IGRhdGE7XHJcbiAgICB9KTtcclxuXHJcbiAgICBpZiAodGhpcy5zZWxlY3RlZFZhbHVlKSB7XHJcbiAgICAgIHRoaXMuZ2V0VmFsdWUoKT8uc2V0VmFsdWUodGhpcy5zZWxlY3RlZFZhbHVlKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJlc2V0KCkge1xyXG4gICAgdGhpcy5zZWxlY3RlZFZhbHVlID0gJyc7XHJcbiAgfVxyXG5cclxuICBjb21wcm9iYXJFbnRyYWRhcygpOiB2b2lkIHt9XHJcbn1cclxuIiwiPGxhYmVsICpuZ0lmPVwidGhpcy5sYWJlbFwiXHJcbiAgPnt7IHRoaXMubGFiZWwgfX1cclxuICA8c3BhbiAqbmdJZj1cInRoaXMuZ2V0VmFsaWRhdGlvbnMoKVwiIGNsYXNzPVwidGV4dC1kYW5nZXJcIj4gKiA8L3NwYW4+XHJcbjwvbGFiZWw+XHJcbjxtYXQtZm9ybS1maWVsZCBhcHBlYXJhbmNlPVwib3V0bGluZVwiIGNsYXNzPVwiZnVsbC13aWR0aFwiICpuZ0lmPVwidGhpcy5nZXRWYWx1ZSgpXCI+XHJcbiAgPG10eC1zZWxlY3RcclxuICAgIFtmb3JtQ29udHJvbF09XCJ0aGlzLmdldFZhbHVlKClcIlxyXG4gICAgW2l0ZW1zXT1cInRoaXMub3B0aW9uc0xpc3RcIlxyXG4gICAgW2JpbmRMYWJlbF09XCJ0aGlzLmxhbmcgPT09IHRoaXMuTEFOR19FUyA/ICdkZXNjcmlwdGlvbicgOiAnZGVzY3JpcHRpb25WJ1wiXHJcbiAgICBiaW5kVmFsdWU9XCJ2YWx1ZVwiXHJcbiAgICBbbXVsdGlwbGVdPVwidHJ1ZVwiXHJcbiAgICAoY2hhbmdlKT1cIm5nQ2hhbmdlcygpXCI+XHJcbiAgPC9tdHgtc2VsZWN0PlxyXG5cclxuICA8bWF0LWhpbnQ+e3sgdGhpcy5oaW50IH19PC9tYXQtaGludD5cclxuICA8bWF0LWVycm9yXHJcbiAgICBhcnEtZm9ybS1jb250cm9sLWVycm9yXHJcbiAgICBbbGFiZWxDb250cm9sXT1cInRoaXMubGFiZWxcIlxyXG4gICAgW2Zvcm1Db250cm9sU2libGluZ109XCJ0aGlzLmdldFZhbHVlKClcIlxyXG4gID48L21hdC1lcnJvcj5cclxuPC9tYXQtZm9ybS1maWVsZD5cclxuIl19