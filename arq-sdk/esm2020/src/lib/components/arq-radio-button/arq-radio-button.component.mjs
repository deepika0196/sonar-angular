import { Component, Input, ViewEncapsulation } from '@angular/core';
import { ArqGenericInputComponent } from '../../../core/arq-generic-input/arq-generic-input.component';
import { checkRequiredFields } from '../../../core/utils/basic.util';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@angular/common";
import * as i3 from "@angular/material/radio";
import * as i4 from "../arq-form-control-error/arq-form-control-error.component";
export class ArqRadioButtonComponent extends ArqGenericInputComponent {
    constructor() {
        super();
        this.disabled = true;
        this.labelPosition = 'before';
        this.name = 'radio-group-example';
        this.checked = false;
        this.disabledRadio = false;
        this.direction = 'column';
    }
    ngOnInit() {
        checkRequiredFields(this.radioOptionsList, 'radioOptionsList');
        checkRequiredFields(this.label, 'label');
    }
    comprobarEntradas() { }
}
ArqRadioButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: ArqRadioButtonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ArqRadioButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: ArqRadioButtonComponent, selector: "arq-radio-button", inputs: { color: "color", disabled: "disabled", labelPosition: "labelPosition", name: "name", checked: "checked", colorRadio: "colorRadio", disabledRadio: "disabledRadio", id: "id", class: "class", radioOptionsList: "radioOptionsList", selectedValue: "selectedValue", direction: "direction" }, usesInheritance: true, ngImport: i0, template: "<div [ngClass]=\"{ 'd-flex': direction == 'row' }\">\r\n  <div class=\"d-flex align-items-center\">\r\n    <label [ngClass]=\"{ 'mb-0': direction == 'row' }\" *ngIf=\"this.label\">{{ this.label }}</label>\r\n    <p [ngClass]=\"{ 'mb-0': direction == 'row' }\" *ngIf=\"this.label\"></p>\r\n  </div>\r\n\r\n  <ng-container *ngIf=\"this.getValue()\">\r\n    <mat-radio-group class=\"{{ this.class }}\" [formControl]=\"this.getValue()\">\r\n      <mat-radio-button\r\n        class=\"radio-button-arq\"\r\n        *ngFor=\"let radio of radioOptionsList | async\"\r\n        [value]=\"radio.value\"\r\n        [checked]=\"radio.value == this.selectedValue\">\r\n        {{ radio.description }}\r\n      </mat-radio-button>\r\n    </mat-radio-group>\r\n    <mat-error arq-form-control-error [labelControl]=\"this.label\" [formControlSibling]=\"this.getValue()\"></mat-error>\r\n  </ng-container>\r\n</div>\r\n", styles: [".radio-group-col{display:flex;flex-direction:column;margin:15px 0;align-items:flex-start}.radio-group-row{display:flex;flex-direction:row;margin:15px 0;align-items:flex-start}.radio-button-arq{margin:5px}.mdc-form-field>label{margin-bottom:0}\n"], dependencies: [{ kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.MatRadioGroup, selector: "mat-radio-group", exportAs: ["matRadioGroup"] }, { kind: "component", type: i3.MatRadioButton, selector: "mat-radio-button", inputs: ["disableRipple", "tabIndex"], exportAs: ["matRadioButton"] }, { kind: "component", type: i4.ArqFormControlErrorComponent, selector: "[arq-form-control-error]", inputs: ["labelControl", "errorMapMessages", "formControlSibling"] }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }], encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: ArqRadioButtonComponent, decorators: [{
            type: Component,
            args: [{ selector: 'arq-radio-button', encapsulation: ViewEncapsulation.None, template: "<div [ngClass]=\"{ 'd-flex': direction == 'row' }\">\r\n  <div class=\"d-flex align-items-center\">\r\n    <label [ngClass]=\"{ 'mb-0': direction == 'row' }\" *ngIf=\"this.label\">{{ this.label }}</label>\r\n    <p [ngClass]=\"{ 'mb-0': direction == 'row' }\" *ngIf=\"this.label\"></p>\r\n  </div>\r\n\r\n  <ng-container *ngIf=\"this.getValue()\">\r\n    <mat-radio-group class=\"{{ this.class }}\" [formControl]=\"this.getValue()\">\r\n      <mat-radio-button\r\n        class=\"radio-button-arq\"\r\n        *ngFor=\"let radio of radioOptionsList | async\"\r\n        [value]=\"radio.value\"\r\n        [checked]=\"radio.value == this.selectedValue\">\r\n        {{ radio.description }}\r\n      </mat-radio-button>\r\n    </mat-radio-group>\r\n    <mat-error arq-form-control-error [labelControl]=\"this.label\" [formControlSibling]=\"this.getValue()\"></mat-error>\r\n  </ng-container>\r\n</div>\r\n", styles: [".radio-group-col{display:flex;flex-direction:column;margin:15px 0;align-items:flex-start}.radio-group-row{display:flex;flex-direction:row;margin:15px 0;align-items:flex-start}.radio-button-arq{margin:5px}.mdc-form-field>label{margin-bottom:0}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { color: [{
                type: Input
            }], disabled: [{
                type: Input
            }], labelPosition: [{
                type: Input
            }], name: [{
                type: Input
            }], checked: [{
                type: Input
            }], colorRadio: [{
                type: Input
            }], disabledRadio: [{
                type: Input
            }], id: [{
                type: Input
            }], class: [{
                type: Input
            }], radioOptionsList: [{
                type: Input
            }], selectedValue: [{
                type: Input
            }], direction: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJxLXJhZGlvLWJ1dHRvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9hcnEtc2RrL3NyYy9saWIvY29tcG9uZW50cy9hcnEtcmFkaW8tYnV0dG9uL2FycS1yYWRpby1idXR0b24uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vYXJxLXNkay9zcmMvbGliL2NvbXBvbmVudHMvYXJxLXJhZGlvLWJ1dHRvbi9hcnEtcmFkaW8tYnV0dG9uLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBSTVFLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDZEQUE2RCxDQUFDO0FBQ3ZHLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDOzs7Ozs7QUFTckUsTUFBTSxPQUFPLHVCQUF3QixTQUFRLHdCQUF3QjtJQXNDbkU7UUFDRSxLQUFLLEVBQUUsQ0FBQztRQWpDVixhQUFRLEdBQVksSUFBSSxDQUFDO1FBR3pCLGtCQUFhLEdBQXVCLFFBQVEsQ0FBQztRQUc3QyxTQUFJLEdBQVcscUJBQXFCLENBQUM7UUFHckMsWUFBTyxHQUFZLEtBQUssQ0FBQztRQU16QixrQkFBYSxHQUFZLEtBQUssQ0FBQztRQWUvQixjQUFTLEdBQVcsUUFBUSxDQUFDO0lBSTdCLENBQUM7SUFFUSxRQUFRO1FBQ2YsbUJBQW1CLENBQUMsSUFBSSxDQUFDLGdCQUFnQixFQUFFLGtCQUFrQixDQUFDLENBQUM7UUFDL0QsbUJBQW1CLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQztJQUMzQyxDQUFDO0lBRVMsaUJBQWlCLEtBQUksQ0FBQzs7b0hBL0NyQix1QkFBdUI7d0dBQXZCLHVCQUF1QixxWENkcEMseTRCQW1CQTsyRkRMYSx1QkFBdUI7a0JBTm5DLFNBQVM7K0JBQ0Usa0JBQWtCLGlCQUdiLGlCQUFpQixDQUFDLElBQUk7MEVBS3JDLEtBQUs7c0JBREosS0FBSztnQkFJTixRQUFRO3NCQURQLEtBQUs7Z0JBSU4sYUFBYTtzQkFEWixLQUFLO2dCQUlOLElBQUk7c0JBREgsS0FBSztnQkFJTixPQUFPO3NCQUROLEtBQUs7Z0JBSU4sVUFBVTtzQkFEVCxLQUFLO2dCQUlOLGFBQWE7c0JBRFosS0FBSztnQkFJTixFQUFFO3NCQURELEtBQUs7Z0JBSU4sS0FBSztzQkFESixLQUFLO2dCQUlOLGdCQUFnQjtzQkFEZixLQUFLO2dCQUlOLGFBQWE7c0JBRFosS0FBSztnQkFJTixTQUFTO3NCQURSLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFRoZW1lUGFsZXR0ZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2NvcmUnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcblxyXG5pbXBvcnQgeyBBcnFHZW5lcmljSW5wdXRDb21wb25lbnQgfSBmcm9tICcuLi8uLi8uLi9jb3JlL2FycS1nZW5lcmljLWlucHV0L2FycS1nZW5lcmljLWlucHV0LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IGNoZWNrUmVxdWlyZWRGaWVsZHMgfSBmcm9tICcuLi8uLi8uLi9jb3JlL3V0aWxzL2Jhc2ljLnV0aWwnO1xyXG5pbXBvcnQgeyBBcnFMaXN0IH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcy9hcnEtbGlzdC5pbnRlcmZhY2UnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdhcnEtcmFkaW8tYnV0dG9uJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vYXJxLXJhZGlvLWJ1dHRvbi5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vYXJxLXJhZGlvLWJ1dHRvbi5jb21wb25lbnQuY3NzJ10sXHJcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQXJxUmFkaW9CdXR0b25Db21wb25lbnQgZXh0ZW5kcyBBcnFHZW5lcmljSW5wdXRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIC8vQWRkIHByb3BlcnRpZXMgZm9yIHRoZSBSYWRpb0dyb3VwXHJcbiAgQElucHV0KClcclxuICBjb2xvcjogVGhlbWVQYWxldHRlO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGRpc2FibGVkOiBib29sZWFuID0gdHJ1ZTtcclxuXHJcbiAgQElucHV0KClcclxuICBsYWJlbFBvc2l0aW9uOiAnYmVmb3JlJyB8ICdhZnRlcicgPSAnYmVmb3JlJztcclxuXHJcbiAgQElucHV0KClcclxuICBuYW1lOiBzdHJpbmcgPSAncmFkaW8tZ3JvdXAtZXhhbXBsZSc7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgY2hlY2tlZDogYm9vbGVhbiA9IGZhbHNlO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGNvbG9yUmFkaW86IFRoZW1lUGFsZXR0ZTtcclxuXHJcbiAgQElucHV0KClcclxuICBkaXNhYmxlZFJhZGlvOiBib29sZWFuID0gZmFsc2U7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgaWQhOiBzdHJpbmc7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgY2xhc3M/OiBzdHJpbmc7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgcmFkaW9PcHRpb25zTGlzdD86IE9ic2VydmFibGU8QXJxTGlzdFtdPjtcclxuXHJcbiAgQElucHV0KClcclxuICBzZWxlY3RlZFZhbHVlPzogc3RyaW5nO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGRpcmVjdGlvbjogc3RyaW5nID0gJ2NvbHVtbic7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgc3VwZXIoKTtcclxuICB9XHJcblxyXG4gIG92ZXJyaWRlIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgY2hlY2tSZXF1aXJlZEZpZWxkcyh0aGlzLnJhZGlvT3B0aW9uc0xpc3QsICdyYWRpb09wdGlvbnNMaXN0Jyk7XHJcbiAgICBjaGVja1JlcXVpcmVkRmllbGRzKHRoaXMubGFiZWwsICdsYWJlbCcpO1xyXG4gIH1cclxuXHJcbiAgcHJvdGVjdGVkIGNvbXByb2JhckVudHJhZGFzKCkge31cclxufVxyXG4iLCI8ZGl2IFtuZ0NsYXNzXT1cInsgJ2QtZmxleCc6IGRpcmVjdGlvbiA9PSAncm93JyB9XCI+XHJcbiAgPGRpdiBjbGFzcz1cImQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXJcIj5cclxuICAgIDxsYWJlbCBbbmdDbGFzc109XCJ7ICdtYi0wJzogZGlyZWN0aW9uID09ICdyb3cnIH1cIiAqbmdJZj1cInRoaXMubGFiZWxcIj57eyB0aGlzLmxhYmVsIH19PC9sYWJlbD5cclxuICAgIDxwIFtuZ0NsYXNzXT1cInsgJ21iLTAnOiBkaXJlY3Rpb24gPT0gJ3JvdycgfVwiICpuZ0lmPVwidGhpcy5sYWJlbFwiPjwvcD5cclxuICA8L2Rpdj5cclxuXHJcbiAgPG5nLWNvbnRhaW5lciAqbmdJZj1cInRoaXMuZ2V0VmFsdWUoKVwiPlxyXG4gICAgPG1hdC1yYWRpby1ncm91cCBjbGFzcz1cInt7IHRoaXMuY2xhc3MgfX1cIiBbZm9ybUNvbnRyb2xdPVwidGhpcy5nZXRWYWx1ZSgpXCI+XHJcbiAgICAgIDxtYXQtcmFkaW8tYnV0dG9uXHJcbiAgICAgICAgY2xhc3M9XCJyYWRpby1idXR0b24tYXJxXCJcclxuICAgICAgICAqbmdGb3I9XCJsZXQgcmFkaW8gb2YgcmFkaW9PcHRpb25zTGlzdCB8IGFzeW5jXCJcclxuICAgICAgICBbdmFsdWVdPVwicmFkaW8udmFsdWVcIlxyXG4gICAgICAgIFtjaGVja2VkXT1cInJhZGlvLnZhbHVlID09IHRoaXMuc2VsZWN0ZWRWYWx1ZVwiPlxyXG4gICAgICAgIHt7IHJhZGlvLmRlc2NyaXB0aW9uIH19XHJcbiAgICAgIDwvbWF0LXJhZGlvLWJ1dHRvbj5cclxuICAgIDwvbWF0LXJhZGlvLWdyb3VwPlxyXG4gICAgPG1hdC1lcnJvciBhcnEtZm9ybS1jb250cm9sLWVycm9yIFtsYWJlbENvbnRyb2xdPVwidGhpcy5sYWJlbFwiIFtmb3JtQ29udHJvbFNpYmxpbmddPVwidGhpcy5nZXRWYWx1ZSgpXCI+PC9tYXQtZXJyb3I+XHJcbiAgPC9uZy1jb250YWluZXI+XHJcbjwvZGl2PlxyXG4iXX0=