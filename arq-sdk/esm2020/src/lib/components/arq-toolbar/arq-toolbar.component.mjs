import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "@ngneat/transloco";
import * as i3 from "@angular/common";
import * as i4 from "@angular/material/toolbar";
import * as i5 from "@angular/material/icon";
import * as i6 from "@angular/material/menu";
import * as i7 from "@angular/material/button";
import * as i8 from "./arq-submenu/arq-submenu.component";
export class ArqToolbarComponent {
    constructor(router, translocoService) {
        this.router = router;
        this.translocoService = translocoService;
        this.titleAlign = 'center';
        this.reloadOnLangChange = true;
        this.selectedEvent = new EventEmitter();
    }
    setSelectedItem(item) {
        if (item.routerLink) {
            this.router.navigate([item.routerLink]);
        }
        else {
            item.event();
        }
    }
    changeLang(lang) {
        localStorage.setItem('user-lang', lang.code);
        this.translocoService?.setActiveLang(lang.code || 'es');
        if (this.reloadOnLangChange)
            location.reload();
        this.selectedEvent.emit(lang);
    }
    ngLogout() { }
}
ArqToolbarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: ArqToolbarComponent, deps: [{ token: i1.Router }, { token: i2.TranslocoService }], target: i0.ɵɵFactoryTarget.Component });
ArqToolbarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: ArqToolbarComponent, selector: "arq-toolbar", inputs: { menuItems: "menuItems", languages: "languages", title: "title", titleAlign: "titleAlign", user: "user", reloadOnLangChange: "reloadOnLangChange" }, outputs: { selectedEvent: "selectedEvent" }, ngImport: i0, template: "<mat-toolbar class=\"menu-bar mat-elevation-z1\">\r\n  <ng-container *ngIf=\"titleAlign == 'left' && title\">\r\n    <span>{{ title }}</span>\r\n    <span class=\"example-spacer\"></span>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"menuItems\">\r\n    <ng-container *ngFor=\"let basemenu of menuItems\">\r\n      <div *ngIf=\"basemenu.subItems && basemenu.subItems.length > 0; else elseMatMenu\">\r\n        <button mat-button class=\"btn-marte-menu\" [matMenuTriggerFor]=\"submenu.Submenuitem\">\r\n          <mat-icon *ngIf=\"basemenu.icon\" class=\"mr-1\">{{ basemenu.icon }}</mat-icon>\r\n          <span>{{ basemenu.label }}</span>\r\n        </button>\r\n        <arq-submenu #submenu (SelectedMenu)=\"setSelectedItem($event)\" [SubMenuItems]=\"basemenu.subItems\"></arq-submenu>\r\n      </div>\r\n      <ng-template #elseMatMenu>\r\n        <button mat-button class=\"btn-marte-menu\" (click)=\"setSelectedItem(basemenu)\">\r\n          <mat-icon class=\"mr-1\" *ngIf=\"basemenu.icon\">{{ basemenu.icon }}</mat-icon>\r\n          <span>{{ basemenu.label }}</span>\r\n        </button>\r\n      </ng-template>\r\n    </ng-container>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"titleAlign == 'center' && title\">\r\n    <span class=\"example-spacer\"></span>\r\n\r\n    <span>{{ title }}</span>\r\n  </ng-container>\r\n\r\n  <span class=\"example-spacer\"></span>\r\n\r\n  <ng-container *ngIf=\"languages\">\r\n    <ng-container *ngFor=\"let language of languages\">\r\n      <a\r\n        class=\"item-lang\"\r\n        [ngClass]=\"{ 'border-lang': language.check, 'p-bottom': !language.check }\"\r\n        (click)=\"changeLang(language)\"\r\n        >{{ language.label }}\r\n      </a>\r\n    </ng-container>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"titleAlign == 'right' && title\">\r\n    <span class=\"example-spacer\"></span>\r\n\r\n    <span>{{ title }}</span>\r\n  </ng-container>\r\n\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"logout\">\r\n    <mat-icon>account_circle</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <ng-template ngFor let-item [ngForOf]=\"user\" let-i=\"index\">\r\n      <button mat-menu-item (click)=\"item.event()\">\r\n        <mat-icon>{{ item.icon }}</mat-icon>\r\n        <span>{{ item.text }}</span>\r\n      </button>\r\n    </ng-template>\r\n  </mat-menu>\r\n</mat-toolbar>\r\n", styles: [".example-spacer{flex:1 1 auto}.menu-bar{background-color:#19aee0;color:#fff}.menu-arq{height:7%;background-color:#19aee0}.btn-marte-menu{display:flex;justify-content:center;align-items:center;font-size:18px;color:#fff;background-color:#19aee0;border-radius:0;margin:0 5px 0 0}.btn-marte-menu:not([disabled]):hover{background-color:#0c556d;color:#fff;border-radius:0}.btn-marte-menu[disabled]{color:#fff;background-color:#acacac}.item-lang{font-size:16px;padding:0 7px;cursor:pointer;color:#fff}.item-lang:hover{color:#fff;text-decoration:none;background-color:#0c556d}.border-lang{border-bottom:2px solid}.border-lang:hover{background-color:transparent}.p-bottom{padding-bottom:2px}.customize-mat-menu .mat-mdc-menu-content .mat-mdc-menu-item .mdc-list-item__primary-text{font-size:16px}\n"], dependencies: [{ kind: "directive", type: i3.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i4.MatToolbar, selector: "mat-toolbar", inputs: ["color"], exportAs: ["matToolbar"] }, { kind: "component", type: i5.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "component", type: i6.MatMenu, selector: "mat-menu", exportAs: ["matMenu"] }, { kind: "component", type: i6.MatMenuItem, selector: "[mat-menu-item]", inputs: ["disabled", "disableRipple", "role"], exportAs: ["matMenuItem"] }, { kind: "directive", type: i6.MatMenuTrigger, selector: "[mat-menu-trigger-for], [matMenuTriggerFor]", exportAs: ["matMenuTrigger"] }, { kind: "component", type: i7.MatButton, selector: "    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  ", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { kind: "component", type: i7.MatIconButton, selector: "button[mat-icon-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { kind: "component", type: i8.ArqSubMenuComponent, selector: "arq-submenu", inputs: ["SubMenuItems"], outputs: ["SelectedMenu"] }], encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: ArqToolbarComponent, decorators: [{
            type: Component,
            args: [{ selector: 'arq-toolbar', encapsulation: ViewEncapsulation.None, template: "<mat-toolbar class=\"menu-bar mat-elevation-z1\">\r\n  <ng-container *ngIf=\"titleAlign == 'left' && title\">\r\n    <span>{{ title }}</span>\r\n    <span class=\"example-spacer\"></span>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"menuItems\">\r\n    <ng-container *ngFor=\"let basemenu of menuItems\">\r\n      <div *ngIf=\"basemenu.subItems && basemenu.subItems.length > 0; else elseMatMenu\">\r\n        <button mat-button class=\"btn-marte-menu\" [matMenuTriggerFor]=\"submenu.Submenuitem\">\r\n          <mat-icon *ngIf=\"basemenu.icon\" class=\"mr-1\">{{ basemenu.icon }}</mat-icon>\r\n          <span>{{ basemenu.label }}</span>\r\n        </button>\r\n        <arq-submenu #submenu (SelectedMenu)=\"setSelectedItem($event)\" [SubMenuItems]=\"basemenu.subItems\"></arq-submenu>\r\n      </div>\r\n      <ng-template #elseMatMenu>\r\n        <button mat-button class=\"btn-marte-menu\" (click)=\"setSelectedItem(basemenu)\">\r\n          <mat-icon class=\"mr-1\" *ngIf=\"basemenu.icon\">{{ basemenu.icon }}</mat-icon>\r\n          <span>{{ basemenu.label }}</span>\r\n        </button>\r\n      </ng-template>\r\n    </ng-container>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"titleAlign == 'center' && title\">\r\n    <span class=\"example-spacer\"></span>\r\n\r\n    <span>{{ title }}</span>\r\n  </ng-container>\r\n\r\n  <span class=\"example-spacer\"></span>\r\n\r\n  <ng-container *ngIf=\"languages\">\r\n    <ng-container *ngFor=\"let language of languages\">\r\n      <a\r\n        class=\"item-lang\"\r\n        [ngClass]=\"{ 'border-lang': language.check, 'p-bottom': !language.check }\"\r\n        (click)=\"changeLang(language)\"\r\n        >{{ language.label }}\r\n      </a>\r\n    </ng-container>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"titleAlign == 'right' && title\">\r\n    <span class=\"example-spacer\"></span>\r\n\r\n    <span>{{ title }}</span>\r\n  </ng-container>\r\n\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"logout\">\r\n    <mat-icon>account_circle</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <ng-template ngFor let-item [ngForOf]=\"user\" let-i=\"index\">\r\n      <button mat-menu-item (click)=\"item.event()\">\r\n        <mat-icon>{{ item.icon }}</mat-icon>\r\n        <span>{{ item.text }}</span>\r\n      </button>\r\n    </ng-template>\r\n  </mat-menu>\r\n</mat-toolbar>\r\n", styles: [".example-spacer{flex:1 1 auto}.menu-bar{background-color:#19aee0;color:#fff}.menu-arq{height:7%;background-color:#19aee0}.btn-marte-menu{display:flex;justify-content:center;align-items:center;font-size:18px;color:#fff;background-color:#19aee0;border-radius:0;margin:0 5px 0 0}.btn-marte-menu:not([disabled]):hover{background-color:#0c556d;color:#fff;border-radius:0}.btn-marte-menu[disabled]{color:#fff;background-color:#acacac}.item-lang{font-size:16px;padding:0 7px;cursor:pointer;color:#fff}.item-lang:hover{color:#fff;text-decoration:none;background-color:#0c556d}.border-lang{border-bottom:2px solid}.border-lang:hover{background-color:transparent}.p-bottom{padding-bottom:2px}.customize-mat-menu .mat-mdc-menu-content .mat-mdc-menu-item .mdc-list-item__primary-text{font-size:16px}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.Router }, { type: i2.TranslocoService }]; }, propDecorators: { menuItems: [{
                type: Input
            }], languages: [{
                type: Input
            }], title: [{
                type: Input
            }], titleAlign: [{
                type: Input
            }], user: [{
                type: Input
            }], reloadOnLangChange: [{
                type: Input
            }], selectedEvent: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJxLXRvb2xiYXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vYXJxLXNkay9zcmMvbGliL2NvbXBvbmVudHMvYXJxLXRvb2xiYXIvYXJxLXRvb2xiYXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vYXJxLXNkay9zcmMvbGliL2NvbXBvbmVudHMvYXJxLXRvb2xiYXIvYXJxLXRvb2xiYXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7Ozs7OztBQVVsRyxNQUFNLE9BQU8sbUJBQW1CO0lBZTlCLFlBQTJCLE1BQWMsRUFBVSxnQkFBa0M7UUFBMUQsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQUFVLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFSckUsZUFBVSxHQUFnQyxRQUFRLENBQUM7UUFJbkQsdUJBQWtCLEdBQVksSUFBSSxDQUFDO1FBRWxDLGtCQUFhLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7SUFFaUIsQ0FBQztJQUVsRixlQUFlLENBQUMsSUFBUztRQUM5QixJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDbkIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztTQUN6QzthQUFNO1lBQ0wsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO1NBQ2Q7SUFDSCxDQUFDO0lBRU0sVUFBVSxDQUFDLElBQVM7UUFDekIsWUFBWSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzdDLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsQ0FBQztRQUV4RCxJQUFJLElBQUksQ0FBQyxrQkFBa0I7WUFBRSxRQUFRLENBQUMsTUFBTSxFQUFFLENBQUM7UUFFL0MsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVNLFFBQVEsS0FBVSxDQUFDOztnSEFsQ2YsbUJBQW1CO29HQUFuQixtQkFBbUIsOFBDVmhDLDYxRUE2REE7MkZEbkRhLG1CQUFtQjtrQkFOL0IsU0FBUzsrQkFDRSxhQUFhLGlCQUdSLGlCQUFpQixDQUFDLElBQUk7NEhBR3JCLFNBQVM7c0JBQXhCLEtBQUs7Z0JBRVUsU0FBUztzQkFBeEIsS0FBSztnQkFFVSxLQUFLO3NCQUFwQixLQUFLO2dCQUVVLFVBQVU7c0JBQXpCLEtBQUs7Z0JBRVUsSUFBSTtzQkFBbkIsS0FBSztnQkFFVSxrQkFBa0I7c0JBQWpDLEtBQUs7Z0JBRVcsYUFBYTtzQkFBN0IsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25Jbml0LCBPdXRwdXQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFJvdXRlciB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XHJcbmltcG9ydCB7IFRyYW5zbG9jb1NlcnZpY2UgfSBmcm9tICdAbmduZWF0L3RyYW5zbG9jbyc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FycS10b29sYmFyJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vYXJxLXRvb2xiYXIuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2FycS10b29sYmFyLmNvbXBvbmVudC5jc3MnXSxcclxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBBcnFUb29sYmFyQ29tcG9uZW50IHtcclxuICBASW5wdXQoKSBwdWJsaWMgbWVudUl0ZW1zITogYW55W107XHJcblxyXG4gIEBJbnB1dCgpIHB1YmxpYyBsYW5ndWFnZXM6IGFueTtcclxuXHJcbiAgQElucHV0KCkgcHVibGljIHRpdGxlITogc3RyaW5nO1xyXG5cclxuICBASW5wdXQoKSBwdWJsaWMgdGl0bGVBbGlnbjogJ2xlZnQnIHwgJ2NlbnRlcicgfCAncmlnaHQnID0gJ2NlbnRlcic7XHJcblxyXG4gIEBJbnB1dCgpIHB1YmxpYyB1c2VyOiBhbnk7XHJcblxyXG4gIEBJbnB1dCgpIHB1YmxpYyByZWxvYWRPbkxhbmdDaGFuZ2U6IGJvb2xlYW4gPSB0cnVlO1xyXG5cclxuICBAT3V0cHV0KCkgcHVibGljIHNlbGVjdGVkRXZlbnQ6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IocHJpdmF0ZSByb3V0ZXI6IFJvdXRlciwgcHJpdmF0ZSB0cmFuc2xvY29TZXJ2aWNlOiBUcmFuc2xvY29TZXJ2aWNlKSB7fVxyXG5cclxuICBwdWJsaWMgc2V0U2VsZWN0ZWRJdGVtKGl0ZW06IGFueSk6IHZvaWQge1xyXG4gICAgaWYgKGl0ZW0ucm91dGVyTGluaykge1xyXG4gICAgICB0aGlzLnJvdXRlci5uYXZpZ2F0ZShbaXRlbS5yb3V0ZXJMaW5rXSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBpdGVtLmV2ZW50KCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgY2hhbmdlTGFuZyhsYW5nOiBhbnkpOiB2b2lkIHtcclxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd1c2VyLWxhbmcnLCBsYW5nLmNvZGUpO1xyXG4gICAgdGhpcy50cmFuc2xvY29TZXJ2aWNlPy5zZXRBY3RpdmVMYW5nKGxhbmcuY29kZSB8fCAnZXMnKTtcclxuXHJcbiAgICBpZiAodGhpcy5yZWxvYWRPbkxhbmdDaGFuZ2UpIGxvY2F0aW9uLnJlbG9hZCgpO1xyXG5cclxuICAgIHRoaXMuc2VsZWN0ZWRFdmVudC5lbWl0KGxhbmcpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG5nTG9nb3V0KCk6IHZvaWQge31cclxufVxyXG4iLCI8bWF0LXRvb2xiYXIgY2xhc3M9XCJtZW51LWJhciBtYXQtZWxldmF0aW9uLXoxXCI+XHJcbiAgPG5nLWNvbnRhaW5lciAqbmdJZj1cInRpdGxlQWxpZ24gPT0gJ2xlZnQnICYmIHRpdGxlXCI+XHJcbiAgICA8c3Bhbj57eyB0aXRsZSB9fTwvc3Bhbj5cclxuICAgIDxzcGFuIGNsYXNzPVwiZXhhbXBsZS1zcGFjZXJcIj48L3NwYW4+XHJcbiAgPC9uZy1jb250YWluZXI+XHJcblxyXG4gIDxuZy1jb250YWluZXIgKm5nSWY9XCJtZW51SXRlbXNcIj5cclxuICAgIDxuZy1jb250YWluZXIgKm5nRm9yPVwibGV0IGJhc2VtZW51IG9mIG1lbnVJdGVtc1wiPlxyXG4gICAgICA8ZGl2ICpuZ0lmPVwiYmFzZW1lbnUuc3ViSXRlbXMgJiYgYmFzZW1lbnUuc3ViSXRlbXMubGVuZ3RoID4gMDsgZWxzZSBlbHNlTWF0TWVudVwiPlxyXG4gICAgICAgIDxidXR0b24gbWF0LWJ1dHRvbiBjbGFzcz1cImJ0bi1tYXJ0ZS1tZW51XCIgW21hdE1lbnVUcmlnZ2VyRm9yXT1cInN1Ym1lbnUuU3VibWVudWl0ZW1cIj5cclxuICAgICAgICAgIDxtYXQtaWNvbiAqbmdJZj1cImJhc2VtZW51Lmljb25cIiBjbGFzcz1cIm1yLTFcIj57eyBiYXNlbWVudS5pY29uIH19PC9tYXQtaWNvbj5cclxuICAgICAgICAgIDxzcGFuPnt7IGJhc2VtZW51LmxhYmVsIH19PC9zcGFuPlxyXG4gICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgIDxhcnEtc3VibWVudSAjc3VibWVudSAoU2VsZWN0ZWRNZW51KT1cInNldFNlbGVjdGVkSXRlbSgkZXZlbnQpXCIgW1N1Yk1lbnVJdGVtc109XCJiYXNlbWVudS5zdWJJdGVtc1wiPjwvYXJxLXN1Ym1lbnU+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgICA8bmctdGVtcGxhdGUgI2Vsc2VNYXRNZW51PlxyXG4gICAgICAgIDxidXR0b24gbWF0LWJ1dHRvbiBjbGFzcz1cImJ0bi1tYXJ0ZS1tZW51XCIgKGNsaWNrKT1cInNldFNlbGVjdGVkSXRlbShiYXNlbWVudSlcIj5cclxuICAgICAgICAgIDxtYXQtaWNvbiBjbGFzcz1cIm1yLTFcIiAqbmdJZj1cImJhc2VtZW51Lmljb25cIj57eyBiYXNlbWVudS5pY29uIH19PC9tYXQtaWNvbj5cclxuICAgICAgICAgIDxzcGFuPnt7IGJhc2VtZW51LmxhYmVsIH19PC9zcGFuPlxyXG4gICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICA8L25nLXRlbXBsYXRlPlxyXG4gICAgPC9uZy1jb250YWluZXI+XHJcbiAgPC9uZy1jb250YWluZXI+XHJcblxyXG4gIDxuZy1jb250YWluZXIgKm5nSWY9XCJ0aXRsZUFsaWduID09ICdjZW50ZXInICYmIHRpdGxlXCI+XHJcbiAgICA8c3BhbiBjbGFzcz1cImV4YW1wbGUtc3BhY2VyXCI+PC9zcGFuPlxyXG5cclxuICAgIDxzcGFuPnt7IHRpdGxlIH19PC9zcGFuPlxyXG4gIDwvbmctY29udGFpbmVyPlxyXG5cclxuICA8c3BhbiBjbGFzcz1cImV4YW1wbGUtc3BhY2VyXCI+PC9zcGFuPlxyXG5cclxuICA8bmctY29udGFpbmVyICpuZ0lmPVwibGFuZ3VhZ2VzXCI+XHJcbiAgICA8bmctY29udGFpbmVyICpuZ0Zvcj1cImxldCBsYW5ndWFnZSBvZiBsYW5ndWFnZXNcIj5cclxuICAgICAgPGFcclxuICAgICAgICBjbGFzcz1cIml0ZW0tbGFuZ1wiXHJcbiAgICAgICAgW25nQ2xhc3NdPVwieyAnYm9yZGVyLWxhbmcnOiBsYW5ndWFnZS5jaGVjaywgJ3AtYm90dG9tJzogIWxhbmd1YWdlLmNoZWNrIH1cIlxyXG4gICAgICAgIChjbGljayk9XCJjaGFuZ2VMYW5nKGxhbmd1YWdlKVwiXHJcbiAgICAgICAgPnt7IGxhbmd1YWdlLmxhYmVsIH19XHJcbiAgICAgIDwvYT5cclxuICAgIDwvbmctY29udGFpbmVyPlxyXG4gIDwvbmctY29udGFpbmVyPlxyXG5cclxuICA8bmctY29udGFpbmVyICpuZ0lmPVwidGl0bGVBbGlnbiA9PSAncmlnaHQnICYmIHRpdGxlXCI+XHJcbiAgICA8c3BhbiBjbGFzcz1cImV4YW1wbGUtc3BhY2VyXCI+PC9zcGFuPlxyXG5cclxuICAgIDxzcGFuPnt7IHRpdGxlIH19PC9zcGFuPlxyXG4gIDwvbmctY29udGFpbmVyPlxyXG5cclxuICA8YnV0dG9uIG1hdC1pY29uLWJ1dHRvbiBbbWF0TWVudVRyaWdnZXJGb3JdPVwibWVudVwiIGFyaWEtbGFiZWw9XCJsb2dvdXRcIj5cclxuICAgIDxtYXQtaWNvbj5hY2NvdW50X2NpcmNsZTwvbWF0LWljb24+XHJcbiAgPC9idXR0b24+XHJcbiAgPG1hdC1tZW51ICNtZW51PVwibWF0TWVudVwiPlxyXG4gICAgPG5nLXRlbXBsYXRlIG5nRm9yIGxldC1pdGVtIFtuZ0Zvck9mXT1cInVzZXJcIiBsZXQtaT1cImluZGV4XCI+XHJcbiAgICAgIDxidXR0b24gbWF0LW1lbnUtaXRlbSAoY2xpY2spPVwiaXRlbS5ldmVudCgpXCI+XHJcbiAgICAgICAgPG1hdC1pY29uPnt7IGl0ZW0uaWNvbiB9fTwvbWF0LWljb24+XHJcbiAgICAgICAgPHNwYW4+e3sgaXRlbS50ZXh0IH19PC9zcGFuPlxyXG4gICAgICA8L2J1dHRvbj5cclxuICAgIDwvbmctdGVtcGxhdGU+XHJcbiAgPC9tYXQtbWVudT5cclxuPC9tYXQtdG9vbGJhcj5cclxuIl19