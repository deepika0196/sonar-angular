import { Component, Input, ViewEncapsulation } from '@angular/core';
import { ArqGenericInputComponent } from '../../../core/arq-generic-input/arq-generic-input.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@angular/common";
import * as i3 from "@angular/material/slider";
export class ArqSliderDobleComponent extends ArqGenericInputComponent {
    constructor() {
        super();
    }
    cambioValorInicio(event) {
        return this.fGroup?.controls[this.value].setValue(event.target.value);
    }
    cambioValorFin(event) {
        this.formControlFinal.setValue(event.target.value);
    }
    comprobarEntradas() { }
}
ArqSliderDobleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: ArqSliderDobleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ArqSliderDobleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: ArqSliderDobleComponent, selector: "arq-slider-doble", inputs: { max: "max", min: "min", step: "step", barraLabel: "barraLabel", formControlFinal: "formControlFinal" }, usesInheritance: true, ngImport: i0, template: "<mat-slider *ngIf=\"this.getValue()\" [max]=\"max\" [min]=\"min\" [step]=\"step\" [discrete]=\"barraLabel\">\r\n  <input matSliderStartThumb [formControl]=\"this.getValue()\" (change)=\"this.cambioValorInicio($event)\" />\r\n  <input matSliderEndThumb [formControl]=\"this.formControlFinal\" (change)=\"this.cambioValorFin($event)\" />\r\n</mat-slider>\r\n", styles: ["mat-slider{width:100%}\n"], dependencies: [{ kind: "directive", type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i3.MatSlider, selector: "mat-slider", inputs: ["color", "disableRipple", "disabled", "discrete", "showTickMarks", "min", "max", "step", "displayWith"], exportAs: ["matSlider"] }, { kind: "directive", type: i3.MatSliderRangeThumb, selector: "input[matSliderStartThumb], input[matSliderEndThumb]", exportAs: ["matSliderRangeThumb"] }], encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: ArqSliderDobleComponent, decorators: [{
            type: Component,
            args: [{ selector: 'arq-slider-doble', encapsulation: ViewEncapsulation.None, template: "<mat-slider *ngIf=\"this.getValue()\" [max]=\"max\" [min]=\"min\" [step]=\"step\" [discrete]=\"barraLabel\">\r\n  <input matSliderStartThumb [formControl]=\"this.getValue()\" (change)=\"this.cambioValorInicio($event)\" />\r\n  <input matSliderEndThumb [formControl]=\"this.formControlFinal\" (change)=\"this.cambioValorFin($event)\" />\r\n</mat-slider>\r\n", styles: ["mat-slider{width:100%}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { max: [{
                type: Input
            }], min: [{
                type: Input
            }], step: [{
                type: Input
            }], barraLabel: [{
                type: Input
            }], formControlFinal: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJxLXNsaWRlci1kb2JsZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9hcnEtc2RrL3NyYy9saWIvY29tcG9uZW50cy9hcnEtc2xpZGVyLWRvYmxlL2FycS1zbGlkZXItZG9ibGUuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vYXJxLXNkay9zcmMvbGliL2NvbXBvbmVudHMvYXJxLXNsaWRlci1kb2JsZS9hcnEtc2xpZGVyLWRvYmxlLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTVFLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDZEQUE2RCxDQUFDOzs7OztBQVF2RyxNQUFNLE9BQU8sdUJBQXdCLFNBQVEsd0JBQXdCO0lBZ0JuRTtRQUNFLEtBQUssRUFBRSxDQUFDO0lBQ1YsQ0FBQztJQUVELGlCQUFpQixDQUFDLEtBQVk7UUFDNUIsT0FBTyxJQUFJLENBQUMsTUFBTSxFQUFFLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsUUFBUSxDQUFFLEtBQUssQ0FBQyxNQUEyQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzlGLENBQUM7SUFFRCxjQUFjLENBQUMsS0FBWTtRQUN6QixJQUFJLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxDQUFFLEtBQUssQ0FBQyxNQUEyQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzNFLENBQUM7SUFFRCxpQkFBaUIsS0FBVSxDQUFDOztvSEE1QmpCLHVCQUF1Qjt3R0FBdkIsdUJBQXVCLGlNQ1hwQyxzV0FJQTsyRkRPYSx1QkFBdUI7a0JBTm5DLFNBQVM7K0JBQ0Usa0JBQWtCLGlCQUdiLGlCQUFpQixDQUFDLElBQUk7MEVBSXJDLEdBQUc7c0JBREYsS0FBSztnQkFJTixHQUFHO3NCQURGLEtBQUs7Z0JBSU4sSUFBSTtzQkFESCxLQUFLO2dCQUlOLFVBQVU7c0JBRFQsS0FBSztnQkFJTixnQkFBZ0I7c0JBRGYsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJvb2xlYW5JbnB1dCwgTnVtYmVySW5wdXQgfSBmcm9tICdAYW5ndWxhci9jZGsvY29lcmNpb24nO1xyXG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEZvcm1Db250cm9sIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBBcnFHZW5lcmljSW5wdXRDb21wb25lbnQgfSBmcm9tICcuLi8uLi8uLi9jb3JlL2FycS1nZW5lcmljLWlucHV0L2FycS1nZW5lcmljLWlucHV0LmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2FycS1zbGlkZXItZG9ibGUnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9hcnEtc2xpZGVyLWRvYmxlLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9hcnEtc2xpZGVyLWRvYmxlLmNvbXBvbmVudC5jc3MnXSxcclxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBBcnFTbGlkZXJEb2JsZUNvbXBvbmVudCBleHRlbmRzIEFycUdlbmVyaWNJbnB1dENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgQElucHV0KClcclxuICBtYXg6IE51bWJlcklucHV0O1xyXG5cclxuICBASW5wdXQoKVxyXG4gIG1pbjogTnVtYmVySW5wdXQ7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgc3RlcDogTnVtYmVySW5wdXQ7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgYmFycmFMYWJlbDogQm9vbGVhbklucHV0O1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGZvcm1Db250cm9sRmluYWwhOiBGb3JtQ29udHJvbDtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICBzdXBlcigpO1xyXG4gIH1cclxuXHJcbiAgY2FtYmlvVmFsb3JJbmljaW8oZXZlbnQ6IEV2ZW50KSB7XHJcbiAgICByZXR1cm4gdGhpcy5mR3JvdXA/LmNvbnRyb2xzW3RoaXMudmFsdWVdLnNldFZhbHVlKChldmVudC50YXJnZXQgYXMgSFRNTElucHV0RWxlbWVudCkudmFsdWUpO1xyXG4gIH1cclxuXHJcbiAgY2FtYmlvVmFsb3JGaW4oZXZlbnQ6IEV2ZW50KSB7XHJcbiAgICB0aGlzLmZvcm1Db250cm9sRmluYWwuc2V0VmFsdWUoKGV2ZW50LnRhcmdldCBhcyBIVE1MSW5wdXRFbGVtZW50KS52YWx1ZSk7XHJcbiAgfVxyXG5cclxuICBjb21wcm9iYXJFbnRyYWRhcygpOiB2b2lkIHt9XHJcbn1cclxuIiwiPG1hdC1zbGlkZXIgKm5nSWY9XCJ0aGlzLmdldFZhbHVlKClcIiBbbWF4XT1cIm1heFwiIFttaW5dPVwibWluXCIgW3N0ZXBdPVwic3RlcFwiIFtkaXNjcmV0ZV09XCJiYXJyYUxhYmVsXCI+XHJcbiAgPGlucHV0IG1hdFNsaWRlclN0YXJ0VGh1bWIgW2Zvcm1Db250cm9sXT1cInRoaXMuZ2V0VmFsdWUoKVwiIChjaGFuZ2UpPVwidGhpcy5jYW1iaW9WYWxvckluaWNpbygkZXZlbnQpXCIgLz5cclxuICA8aW5wdXQgbWF0U2xpZGVyRW5kVGh1bWIgW2Zvcm1Db250cm9sXT1cInRoaXMuZm9ybUNvbnRyb2xGaW5hbFwiIChjaGFuZ2UpPVwidGhpcy5jYW1iaW9WYWxvckZpbigkZXZlbnQpXCIgLz5cclxuPC9tYXQtc2xpZGVyPlxyXG4iXX0=