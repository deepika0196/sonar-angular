import { Component, Input } from '@angular/core';
import { ArqGenericInputComponent } from '../../../core/arq-generic-input/arq-generic-input.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/material/tooltip";
import * as i3 from "@angular/forms";
import * as i4 from "@angular/material/input";
import * as i5 from "@angular/material/form-field";
import * as i6 from "@angular/material/icon";
import * as i7 from "../arq-form-control-error/arq-form-control-error.component";
export class ArqTextInputComponent extends ArqGenericInputComponent {
    constructor() {
        super();
        this.maxLength = 100;
        this.disabled = false;
    }
    comprobarEntradas() { }
}
ArqTextInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: ArqTextInputComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ArqTextInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: ArqTextInputComponent, selector: "arq-text-input", inputs: { maxLength: "maxLength", append: "append", disabled: "disabled" }, usesInheritance: true, ngImport: i0, template: "<label *ngIf=\"this.label\"\r\n  >{{ this.label }}\r\n  <span *ngIf=\"this.getValidations()\" class=\"text-danger\"> * </span>\r\n</label>\r\n<mat-form-field\r\n  appearance=\"outline\"\r\n  class=\"input-text\"\r\n  [class]=\"sizeInput\"\r\n  [ngClass]=\"{ inputReadOnly: this.readonly || this.disabled }\"\r\n  *ngIf=\"this.getValue()\">\r\n  <span *ngIf=\"!iconPrefix\" matPrefix>{{ prefix }}</span>\r\n  <mat-icon *ngIf=\"iconPrefix\" matPrefix>{{ prefix }}</mat-icon>\r\n  <input\r\n    class=\"input-text\"\r\n    matInput\r\n    [placeholder]=\"this.placeholder\"\r\n    [readonly]=\"this.readonly\"\r\n    [disabled]=\"this.disabled\"\r\n    [formControl]=\"this.getValue()\"\r\n    [maxLength]=\"this.maxLength\"\r\n    #tooltip=\"matTooltip\"\r\n    [matTooltip]=\"this.message\"\r\n    [matTooltipPosition]=\"this.positionTooltip\"\r\n    [matTooltipHideDelay]=\"this.hideDelay\"\r\n    (change)=\"this.ngChanges()\"\r\n    (focusOut)=\"this.onFocusOutEvent($event)\" />\r\n  <mat-error arq-form-control-error [labelControl]=\"this.label\" [formControlSibling]=\"this.getValue()\"></mat-error>\r\n  <span *ngIf=\"!iconSuffix\" matSuffix>{{ suffix }}</span>\r\n  <mat-icon *ngIf=\"iconSuffix\" matSuffix>{{ suffix }}</mat-icon>\r\n</mat-form-field>\r\n", styles: [".input-text{border-radius:0%;width:100%;border:3px}\n"], dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.MatTooltip, selector: "[matTooltip]", exportAs: ["matTooltip"] }, { kind: "directive", type: i3.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i3.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "directive", type: i4.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { kind: "component", type: i5.MatFormField, selector: "mat-form-field", inputs: ["hideRequiredMarker", "color", "floatLabel", "appearance", "subscriptSizing", "hintLabel"], exportAs: ["matFormField"] }, { kind: "directive", type: i5.MatError, selector: "mat-error, [matError]", inputs: ["id"] }, { kind: "directive", type: i5.MatPrefix, selector: "[matPrefix], [matIconPrefix], [matTextPrefix]", inputs: ["matTextPrefix"] }, { kind: "directive", type: i5.MatSuffix, selector: "[matSuffix], [matIconSuffix], [matTextSuffix]", inputs: ["matTextSuffix"] }, { kind: "component", type: i6.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "component", type: i7.ArqFormControlErrorComponent, selector: "[arq-form-control-error]", inputs: ["labelControl", "errorMapMessages", "formControlSibling"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: ArqTextInputComponent, decorators: [{
            type: Component,
            args: [{ selector: 'arq-text-input', template: "<label *ngIf=\"this.label\"\r\n  >{{ this.label }}\r\n  <span *ngIf=\"this.getValidations()\" class=\"text-danger\"> * </span>\r\n</label>\r\n<mat-form-field\r\n  appearance=\"outline\"\r\n  class=\"input-text\"\r\n  [class]=\"sizeInput\"\r\n  [ngClass]=\"{ inputReadOnly: this.readonly || this.disabled }\"\r\n  *ngIf=\"this.getValue()\">\r\n  <span *ngIf=\"!iconPrefix\" matPrefix>{{ prefix }}</span>\r\n  <mat-icon *ngIf=\"iconPrefix\" matPrefix>{{ prefix }}</mat-icon>\r\n  <input\r\n    class=\"input-text\"\r\n    matInput\r\n    [placeholder]=\"this.placeholder\"\r\n    [readonly]=\"this.readonly\"\r\n    [disabled]=\"this.disabled\"\r\n    [formControl]=\"this.getValue()\"\r\n    [maxLength]=\"this.maxLength\"\r\n    #tooltip=\"matTooltip\"\r\n    [matTooltip]=\"this.message\"\r\n    [matTooltipPosition]=\"this.positionTooltip\"\r\n    [matTooltipHideDelay]=\"this.hideDelay\"\r\n    (change)=\"this.ngChanges()\"\r\n    (focusOut)=\"this.onFocusOutEvent($event)\" />\r\n  <mat-error arq-form-control-error [labelControl]=\"this.label\" [formControlSibling]=\"this.getValue()\"></mat-error>\r\n  <span *ngIf=\"!iconSuffix\" matSuffix>{{ suffix }}</span>\r\n  <mat-icon *ngIf=\"iconSuffix\" matSuffix>{{ suffix }}</mat-icon>\r\n</mat-form-field>\r\n", styles: [".input-text{border-radius:0%;width:100%;border:3px}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { maxLength: [{
                type: Input
            }], append: [{
                type: Input
            }], disabled: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJxLXRleHQtaW5wdXQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vYXJxLXNkay9zcmMvbGliL2NvbXBvbmVudHMvYXJxLXRleHQtaW5wdXQvYXJxLXRleHQtaW5wdXQuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vYXJxLXNkay9zcmMvbGliL2NvbXBvbmVudHMvYXJxLXRleHQtaW5wdXQvYXJxLXRleHQtaW5wdXQuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFFekQsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sNkRBQTZELENBQUM7Ozs7Ozs7OztBQU92RyxNQUFNLE9BQU8scUJBQXNCLFNBQVEsd0JBQXdCO0lBVWpFO1FBQ0UsS0FBSyxFQUFFLENBQUM7UUFUSCxjQUFTLEdBQUcsR0FBRyxDQUFDO1FBTWhCLGFBQVEsR0FBWSxLQUFLLENBQUM7SUFJakMsQ0FBQztJQUNELGlCQUFpQixLQUFVLENBQUM7O2tIQWJqQixxQkFBcUI7c0dBQXJCLHFCQUFxQix5SkNUbEMsZ3ZDQThCQTsyRkRyQmEscUJBQXFCO2tCQUxqQyxTQUFTOytCQUNFLGdCQUFnQjswRUFNbkIsU0FBUztzQkFEZixLQUFLO2dCQUlDLE1BQU07c0JBRFosS0FBSztnQkFJQyxRQUFRO3NCQURkLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7IEFycUdlbmVyaWNJbnB1dENvbXBvbmVudCB9IGZyb20gJy4uLy4uLy4uL2NvcmUvYXJxLWdlbmVyaWMtaW5wdXQvYXJxLWdlbmVyaWMtaW5wdXQuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYXJxLXRleHQtaW5wdXQnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9hcnEtdGV4dC1pbnB1dC5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vYXJxLXRleHQtaW5wdXQuY29tcG9uZW50LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBBcnFUZXh0SW5wdXRDb21wb25lbnQgZXh0ZW5kcyBBcnFHZW5lcmljSW5wdXRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIEBJbnB1dCgpXHJcbiAgcHVibGljIG1heExlbmd0aCA9IDEwMDtcclxuXHJcbiAgQElucHV0KClcclxuICBwdWJsaWMgYXBwZW5kITogc3RyaW5nO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIHB1YmxpYyBkaXNhYmxlZDogYm9vbGVhbiA9IGZhbHNlO1xyXG5cclxuICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XHJcbiAgICBzdXBlcigpO1xyXG4gIH1cclxuICBjb21wcm9iYXJFbnRyYWRhcygpOiB2b2lkIHt9XHJcbn1cclxuIiwiPGxhYmVsICpuZ0lmPVwidGhpcy5sYWJlbFwiXHJcbiAgPnt7IHRoaXMubGFiZWwgfX1cclxuICA8c3BhbiAqbmdJZj1cInRoaXMuZ2V0VmFsaWRhdGlvbnMoKVwiIGNsYXNzPVwidGV4dC1kYW5nZXJcIj4gKiA8L3NwYW4+XHJcbjwvbGFiZWw+XHJcbjxtYXQtZm9ybS1maWVsZFxyXG4gIGFwcGVhcmFuY2U9XCJvdXRsaW5lXCJcclxuICBjbGFzcz1cImlucHV0LXRleHRcIlxyXG4gIFtjbGFzc109XCJzaXplSW5wdXRcIlxyXG4gIFtuZ0NsYXNzXT1cInsgaW5wdXRSZWFkT25seTogdGhpcy5yZWFkb25seSB8fCB0aGlzLmRpc2FibGVkIH1cIlxyXG4gICpuZ0lmPVwidGhpcy5nZXRWYWx1ZSgpXCI+XHJcbiAgPHNwYW4gKm5nSWY9XCIhaWNvblByZWZpeFwiIG1hdFByZWZpeD57eyBwcmVmaXggfX08L3NwYW4+XHJcbiAgPG1hdC1pY29uICpuZ0lmPVwiaWNvblByZWZpeFwiIG1hdFByZWZpeD57eyBwcmVmaXggfX08L21hdC1pY29uPlxyXG4gIDxpbnB1dFxyXG4gICAgY2xhc3M9XCJpbnB1dC10ZXh0XCJcclxuICAgIG1hdElucHV0XHJcbiAgICBbcGxhY2Vob2xkZXJdPVwidGhpcy5wbGFjZWhvbGRlclwiXHJcbiAgICBbcmVhZG9ubHldPVwidGhpcy5yZWFkb25seVwiXHJcbiAgICBbZGlzYWJsZWRdPVwidGhpcy5kaXNhYmxlZFwiXHJcbiAgICBbZm9ybUNvbnRyb2xdPVwidGhpcy5nZXRWYWx1ZSgpXCJcclxuICAgIFttYXhMZW5ndGhdPVwidGhpcy5tYXhMZW5ndGhcIlxyXG4gICAgI3Rvb2x0aXA9XCJtYXRUb29sdGlwXCJcclxuICAgIFttYXRUb29sdGlwXT1cInRoaXMubWVzc2FnZVwiXHJcbiAgICBbbWF0VG9vbHRpcFBvc2l0aW9uXT1cInRoaXMucG9zaXRpb25Ub29sdGlwXCJcclxuICAgIFttYXRUb29sdGlwSGlkZURlbGF5XT1cInRoaXMuaGlkZURlbGF5XCJcclxuICAgIChjaGFuZ2UpPVwidGhpcy5uZ0NoYW5nZXMoKVwiXHJcbiAgICAoZm9jdXNPdXQpPVwidGhpcy5vbkZvY3VzT3V0RXZlbnQoJGV2ZW50KVwiIC8+XHJcbiAgPG1hdC1lcnJvciBhcnEtZm9ybS1jb250cm9sLWVycm9yIFtsYWJlbENvbnRyb2xdPVwidGhpcy5sYWJlbFwiIFtmb3JtQ29udHJvbFNpYmxpbmddPVwidGhpcy5nZXRWYWx1ZSgpXCI+PC9tYXQtZXJyb3I+XHJcbiAgPHNwYW4gKm5nSWY9XCIhaWNvblN1ZmZpeFwiIG1hdFN1ZmZpeD57eyBzdWZmaXggfX08L3NwYW4+XHJcbiAgPG1hdC1pY29uICpuZ0lmPVwiaWNvblN1ZmZpeFwiIG1hdFN1ZmZpeD57eyBzdWZmaXggfX08L21hdC1pY29uPlxyXG48L21hdC1mb3JtLWZpZWxkPlxyXG4iXX0=