import { AfterViewInit, EventEmitter, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { Observable, Subscription } from 'rxjs';
import { ArqGenericInputComponent } from '../../../core/arq-generic-input/arq-generic-input.component';
import { ArqAutocompleteSearchFn, ArqPageableRequest } from '../../../lib/interfaces/arq-basic.interface';
import { ArqList } from '../../interfaces/arq-list.interface';
import { ArqAutocompleteService } from './arq-autocomplete.service';
import { MatPaginator, MatPaginatorIntl, PageEvent } from '@angular/material/paginator';
import { MatAutocomplete } from '@angular/material/autocomplete';
import * as i0 from "@angular/core";
export declare class ArqAutocompleteComponent extends ArqGenericInputComponent implements OnInit, AfterViewInit, OnDestroy {
    service: ArqAutocompleteService;
    _MatPaginatorIntl: MatPaginatorIntl;
    filteredOptions: Observable<ArqList[]>;
    firstChangeLoaded: boolean;
    ariaLabel: string;
    autoActiveFirstOption: boolean;
    autoSelectActiveOption: boolean;
    panelWidth: string | number | undefined;
    nameOptions: string;
    type: string;
    options?: ArqAutocompleteSearchFn | Observable<ArqList[]>;
    dependsOn?: any[];
    filterBack: boolean;
    closed: EventEmitter<void>;
    opened: EventEmitter<void>;
    emitValue: EventEmitter<ArqPageableRequest>;
    defaultSize: number;
    request: ArqPageableRequest;
    totalElements: number;
    subscriptions: Subscription[];
    ac: MatAutocomplete;
    paginator: MatPaginator;
    nextPageLabel: string;
    firstPageLabel: string;
    lastPageLabel: string;
    previousPageLabel: string;
    range: string;
    private searchSubject;
    private oldValues?;
    constructor(service: ArqAutocompleteService, _MatPaginatorIntl: MatPaginatorIntl);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnInit(): void;
    configureDependents(): void;
    private prepareDependentsStringArray;
    private changeObjectWithArrayPropertiesToNull;
    ngAfterViewInit(): void;
    getContent(): any;
    displayFn(option: any): string;
    getOptions(): void;
    private loadFirstChange;
    getStringValue(): any;
    private isFirstChange;
    ngGetValue(evt: KeyboardEvent): any;
    getData(key: string): void;
    loadPage(): void;
    onPageChange(event: PageEvent): void;
    clickEvent(evt: any): void;
    private configureMatPaginator;
    comprobarEntradas(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ArqAutocompleteComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ArqAutocompleteComponent, "arq-autocomplete", never, { "ariaLabel": "ariaLabel"; "autoActiveFirstOption": "autoActiveFirstOption"; "autoSelectActiveOption": "autoSelectActiveOption"; "panelWidth": "panelWidth"; "nameOptions": "nameOptions"; "type": "type"; "options": "options"; "dependsOn": "dependsOn"; "filterBack": "filterBack"; "defaultSize": "defaultSize"; "nextPageLabel": "nextPageLabel"; "firstPageLabel": "firstPageLabel"; "lastPageLabel": "lastPageLabel"; "previousPageLabel": "previousPageLabel"; "range": "range"; }, { "closed": "closed"; "opened": "opened"; "emitValue": "emitValue"; }, never, never, false, never>;
}
