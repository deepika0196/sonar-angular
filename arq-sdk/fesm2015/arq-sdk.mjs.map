{"version":3,"file":"arq-sdk.mjs","sources":["../../../arq-sdk/src/lib/components/arq-form-control-error/arq-form-control-error.component.ts","../../../arq-sdk/src/lib/components/arq-form-control-error/arq-form-control-error.component.html","../../../arq-sdk/src/lib/components/arq-form-control-error/arq-form-control-error.module.ts","../../../arq-sdk/src/core/arq-generic-input/arq-generic-input.component.ts","../../../arq-sdk/src/lib/components/arq-autocomplete/arq-autocomplete.service.ts","../../../arq-sdk/src/lib/components/arq-autocomplete/arq-autocomplete.component.ts","../../../arq-sdk/src/lib/components/arq-autocomplete/arq-autocomplete.component.html","../../../arq-sdk/src/lib/components/arq-autocomplete/arq-autocomplete.module.ts","../../../arq-sdk/src/core/utils/basic.util.ts","../../../arq-sdk/src/lib/components/arq-badge/arq-badge.component.ts","../../../arq-sdk/src/lib/components/arq-badge/arq-badge.component.html","../../../arq-sdk/src/lib/components/arq-badge/arq-badge.module.ts","../../../arq-sdk/src/lib/components/arq-button-toggle-multiple/arq-button-toggle-multiple.component.ts","../../../arq-sdk/src/lib/components/arq-button-toggle-multiple/arq-button-toggle-multiple.component.html","../../../arq-sdk/src/lib/components/arq-button-toggle-multiple/arq-button-toggle-multiple.module.ts","../../../arq-sdk/src/lib/components/arq-button/arq-button.component.ts","../../../arq-sdk/src/lib/components/arq-button/arq-button.component.html","../../../arq-sdk/src/lib/components/arq-button/arq-button.module.ts","../../../arq-sdk/src/lib/components/arq-card/arq-card.component.ts","../../../arq-sdk/src/lib/components/arq-card/arq-card.component.html","../../../arq-sdk/src/lib/components/arq-card/arq-card.module.ts","../../../arq-sdk/src/lib/components/arq-checkbox-basic/arq-checkbox-basic.component.ts","../../../arq-sdk/src/lib/components/arq-checkbox-basic/arq-checkbox-basic.component.html","../../../arq-sdk/src/lib/components/arq-checkbox-basic/arq-checkbox-basic.module.ts","../../../arq-sdk/src/lib/components/arq-checkbox/arq-checkbox.component.ts","../../../arq-sdk/src/lib/components/arq-checkbox/arq-checkbox.component.html","../../../arq-sdk/src/lib/components/arq-checkbox/arq-checkbox.module.ts","../../../arq-sdk/src/lib/components/arq-chips/arq-chips.component.ts","../../../arq-sdk/src/lib/components/arq-chips/arq-chips.component.html","../../../arq-sdk/src/lib/components/arq-chips/arq-chips.module.ts","../../../arq-sdk/src/lib/components/arq-context-menu/arq-context-menu.component.ts","../../../arq-sdk/src/lib/components/arq-context-menu/arq-context-menu.component.html","../../../arq-sdk/src/lib/components/arq-context-menu/arq-context-menu.module.ts","../../../arq-sdk/src/lib/components/arq-datepicker/arq-datepicker.component.ts","../../../arq-sdk/src/lib/components/arq-datepicker/arq-datepicker.component.html","../../../arq-sdk/src/lib/components/arq-datepicker-range/arq-datepicker-range.component.ts","../../../arq-sdk/src/lib/components/arq-datepicker-range/arq-datepicker-range.component.html","../../../arq-sdk/src/lib/components/arq-datepicker-range/arq-datepicker-range.module.ts","../../../arq-sdk/src/lib/components/arq-datepicker/arq-datepicker.module.ts","../../../arq-sdk/src/lib/components/arq-datetimepicker/arq-datetimepicker.component.ts","../../../arq-sdk/src/lib/components/arq-datetimepicker/arq-datetimepicker.component.html","../../../arq-sdk/src/lib/components/arq-datetimepicker/arq-datetimepicker.module.ts","../../../arq-sdk/src/lib/components/arq-dialog/arq-dialog.component.ts","../../../arq-sdk/src/lib/components/arq-dialog/arq-dialog.component.html","../../../arq-sdk/src/lib/services/arq-dialog.service.ts","../../../arq-sdk/src/lib/components/arq-dialog/dialogs/arq-dialog-prompt.component.ts","../../../arq-sdk/src/core/transloco-root.module.ts","../../../arq-sdk/src/lib/components/arq-dialog/arq-dialog.module.ts","../../../arq-sdk/src/lib/components/arq-expansion-panel/arq-expansion-panel.component.ts","../../../arq-sdk/src/lib/components/arq-expansion-panel/arq-expansion-panel.component.html","../../../arq-sdk/src/lib/components/arq-expansion-panel/arq-expansion-panel.module.ts","../../../arq-sdk/src/lib/components/arq-input-money/directives/LocalizedNumericInputDirective.ts","../../../arq-sdk/src/lib/components/arq-input-money/arq-input-money.component.ts","../../../arq-sdk/src/lib/components/arq-input-money/arq-input-money.component.html","../../../arq-sdk/src/core/arq-generic-input/arq-generic-input.module.ts","../../../arq-sdk/src/lib/components/arq-input-money/arq-input-money.module.ts","../../../arq-sdk/src/lib/components/arq-input-number/arq-input-number.component.ts","../../../arq-sdk/src/lib/components/arq-input-number/arq-input-number.component.html","../../../arq-sdk/src/lib/components/arq-input-number/arq-input-number.module.ts","../../../arq-sdk/src/lib/components/arq-radio-button/arq-radio-button.component.ts","../../../arq-sdk/src/lib/components/arq-radio-button/arq-radio-button.component.html","../../../arq-sdk/src/lib/components/arq-radio-button/arq-radio-button.module.ts","../../../arq-sdk/src/lib/components/arq-select-multiple/arq-select-multiple.component.ts","../../../arq-sdk/src/lib/components/arq-select-multiple/arq-select-multiple.component.html","../../../arq-sdk/src/lib/components/arq-select-multiple/arq-select-multiple.module.ts","../../../arq-sdk/src/lib/components/arq-select/arq-select.component.ts","../../../arq-sdk/src/lib/components/arq-select/arq-select.component.html","../../../arq-sdk/src/lib/components/arq-select/arq-select.module.ts","../../../arq-sdk/src/lib/components/arq-slider-doble/arq-slider-doble.component.ts","../../../arq-sdk/src/lib/components/arq-slider-doble/arq-slider-doble.component.html","../../../arq-sdk/src/lib/components/arq-slider-doble/arq-slider-doble.module.ts","../../../arq-sdk/src/lib/components/arq-slider-toggle/arq-slider-toggle.component.ts","../../../arq-sdk/src/lib/components/arq-slider-toggle/arq-slider-toggle.component.html","../../../arq-sdk/src/lib/components/arq-slider-toggle/arq-slider-toggle.module.ts","../../../arq-sdk/src/lib/components/arq-slider/arq-slider.component.ts","../../../arq-sdk/src/lib/components/arq-slider/arq-slider.component.html","../../../arq-sdk/src/lib/components/arq-slider/arq-slider.module.ts","../../../arq-sdk/src/lib/components/arq-snackbar/arq-snackbar.component.ts","../../../arq-sdk/src/lib/components/arq-snackbar/arq-snackbar.component.html","../../../arq-sdk/src/lib/components/arq-snackbar/arq-snackbar.module.ts","../../../arq-sdk/src/core/services/arq-overlay/arq-overlay.service.ts","../../../arq-sdk/src/lib/services/arq-spinner.service.ts","../../../arq-sdk/src/lib/components/arq-spinner/arq-spinner.component.ts","../../../arq-sdk/src/lib/components/arq-spinner/arq-spinner.component.html","../../../arq-sdk/src/lib/components/arq-spinner/arq-spinner.module.ts","../../../arq-sdk/src/lib/components/arq-stepper/arq-step-item-label/arq-step-item-label.component.ts","../../../arq-sdk/src/lib/components/arq-stepper/arq-step-item-label/arq-step-item-label.component.html","../../../arq-sdk/src/lib/components/arq-stepper/arq-step-item/arq-step-item.component.ts","../../../arq-sdk/src/lib/components/arq-stepper/arq-step-item/arq-step-item.component.html","../../../arq-sdk/src/lib/components/arq-stepper/arq-step-group/arq-step-group.component.ts","../../../arq-sdk/src/lib/components/arq-stepper/arq-step-group/arq-step-group.component.html","../../../arq-sdk/src/lib/components/arq-stepper/arq-step-item-content/arq-step-item-content.component.ts","../../../arq-sdk/src/lib/components/arq-stepper/arq-step-item-content/arq-step-item-content.component.html","../../../arq-sdk/src/lib/components/arq-stepper/arq-stepper.module.ts","../../../arq-sdk/src/lib/components/arq-tab/arq-tab-item-header/arq-tab-item-header.component.ts","../../../arq-sdk/src/lib/components/arq-tab/arq-tab-item-header/arq-tab-item-header.component.html","../../../arq-sdk/src/lib/components/arq-tab/arq-tab-item/arq-tab-item.component.ts","../../../arq-sdk/src/lib/components/arq-tab/arq-tab-item/arq-tab-item.component.html","../../../arq-sdk/src/lib/components/arq-tab/arq-tab-group/arq-tab-group.component.ts","../../../arq-sdk/src/lib/components/arq-tab/arq-tab-group/arq-tab-group.component.html","../../../arq-sdk/src/lib/components/arq-tab/arq-tab-item-content/arq-tab-item-content.component.ts","../../../arq-sdk/src/lib/components/arq-tab/arq-tab-item-content/arq-tab-item-content.component.html","../../../arq-sdk/src/lib/components/arq-tab/arq-tab.module.ts","../../../arq-sdk/src/lib/components/arq-text-input/arq-text-input.component.ts","../../../arq-sdk/src/lib/components/arq-text-input/arq-text-input.component.html","../../../arq-sdk/src/lib/components/arq-text-input/arq-text-input.module.ts","../../../arq-sdk/src/lib/components/arq-textarea/arq-textarea.component.ts","../../../arq-sdk/src/lib/components/arq-textarea/arq-textarea.component.html","../../../arq-sdk/src/lib/components/arq-textarea/arq-textarea.module.ts","../../../arq-sdk/src/lib/components/arq-toolbar/arq-submenu/arq-submenu.component.ts","../../../arq-sdk/src/lib/components/arq-toolbar/arq-submenu/arq-submenu.component.html","../../../arq-sdk/src/lib/components/arq-toolbar/arq-toolbar.component.ts","../../../arq-sdk/src/lib/components/arq-toolbar/arq-toolbar.component.html","../../../arq-sdk/src/lib/components/arq-toolbar/arq-toolbar.module.ts","../../../arq-sdk/src/lib/components/arq-upload-files/arq-upload-files.component.ts","../../../arq-sdk/src/lib/components/arq-upload-files/arq-upload-files.component.html","../../../arq-sdk/src/lib/components/arq-upload-files-dialog/arq-upload-files-dialog.component.ts","../../../arq-sdk/src/lib/components/arq-upload-files-dialog/arq-upload-files-dialog.component.html","../../../arq-sdk/src/lib/components/arq-upload-files/arq-upload-files.module.ts","../../../arq-sdk/src/lib/components/arq-upload-files-dialog/arq-upload-files-dialog.module.ts","../../../arq-sdk/src/lib/services/validator.ts","../../../arq-sdk/src/lib/services/arq-schema.service.ts","../../../arq-sdk/src/lib/services/arq-auth.service.ts","../../../arq-sdk/src/lib/services/arq-gvlogin.service.ts","../../../arq-sdk/src/lib/interceptors/arq-gvlogin-interceptor.service.ts","../../../arq-sdk/src/lib/services/arq-service.service.ts","../../../arq-sdk/src/lib/utils/arq-snackbar-emited-message.ts","../../../arq-sdk/src/lib/services/arq-snackbar.service.ts","../../../arq-sdk/src/lib/services/arq-api.service.ts","../../../arq-sdk/src/lib/utils/arq-basic.component.ts","../../../arq-sdk/src/lib/components/arq-dependent-inputs/arq-dependent-inputs.component.ts","../../../arq-sdk/src/lib/components/arq-dependent-inputs/arq-dependent-inputs.component.html","../../../arq-sdk/src/lib/components/arq-dependent-inputs/arq-dependent-inputs.module.ts","../../../arq-sdk/src/lib/utils/arq-base.component.ts","../../../arq-sdk/src/lib/utils/arq-basic-complejo.component.ts","../../../arq-sdk/src/lib/utils/arq-basic.module.ts","../../../arq-sdk/src/lib/services/arq-download-file.service.ts","../../../arq-sdk/src/lib/services/arq-upload-files-dialog.service.ts","../../../arq-sdk/src/lib/services/arq-http-client.service.ts","../../../arq-sdk/src/lib/utils/arq-gvlogin.module.ts","../../../arq-sdk/src/lib/components/arq-datatable/arq-datatable.component.ts","../../../arq-sdk/src/lib/components/arq-datatable/arq-datatable.component.html","../../../arq-sdk/src/lib/components/arq-datatable-mantenimiento/arq-datatable-mantenimiento.component.ts","../../../arq-sdk/src/lib/components/arq-datatable-mantenimiento/arq-datatable-mantenimiento.component.html","../../../arq-sdk/src/lib/components/arq-datatable/arq-datatable.module.ts","../../../arq-sdk/src/lib/components/arq-datatable-mantenimiento/arq-datatable-mantenimiento.module.ts","../../../arq-sdk/src/lib/components/arq-dt-busqueda-avanzada/arq-dt-busqueda-avanzada.interface.ts","../../../arq-sdk/src/lib/components/arq-dt-busqueda-avanzada/dialogs/adv-filter/adv-filter-dialog.component.ts","../../../arq-sdk/src/lib/components/arq-dt-busqueda-avanzada/dialogs/adv-filter/adv-filter-dialog.component.html","../../../arq-sdk/src/lib/components/arq-dt-busqueda-avanzada/dialogs/prefilters/prefilters-dialog.component.ts","../../../arq-sdk/src/lib/components/arq-dt-busqueda-avanzada/dialogs/prefilters/prefilters-dialog.component.html","../../../arq-sdk/src/lib/components/arq-dt-busqueda-avanzada/arq-dt-busqueda-avanzada.component.ts","../../../arq-sdk/src/lib/components/arq-dt-busqueda-avanzada/arq-dt-busqueda-avanzada.component.html","../../../arq-sdk/src/lib/components/arq-dt-busqueda-avanzada/arq-dt-busqueda-avanzada.module.ts","../../../arq-sdk/src/lib/components/arq-fieldset/arq-fieldset.component.ts","../../../arq-sdk/src/lib/components/arq-fieldset/arq-fieldset.component.html","../../../arq-sdk/src/lib/components/arq-fieldset/arq-fieldset.module.ts","../../../arq-sdk/src/lib/components/arq-listado/arq-listado.component.ts","../../../arq-sdk/src/lib/components/arq-listado/arq-listado.component.html","../../../arq-sdk/src/lib/components/arq-listado/arq-listado.module.ts","../../../arq-sdk/src/lib/guards/arq-role.guard.ts","../../../arq-sdk/src/lib/interfaces/arq-gvlogin-token-data.ts","../../../arq-sdk/src/lib/interfaces/arq-usuario.interface.ts","../../../arq-sdk/src/lib/interfaces/backend/arq-error-type-enum.interface.ts","../../../arq-sdk/src/lib/resolvers/arq-api-service.resolver.ts","../../../arq-sdk/src/lib/functions/arq-transloco-preload.ts","../../../arq-sdk/public-api.ts","../../../arq-sdk/arq-sdk.ts"],"sourcesContent":["import { AfterViewInit, Component, Input } from '@angular/core';\r\nimport { FormControl, FormControlStatus } from '@angular/forms';\r\nimport { TranslocoService } from '@ngneat/transloco';\r\n\r\nexport const errorMapMessagesDefault: Map<string, string> = new Map([\r\n  ['required', 'arq.form-control-error.default-error-message.required'],\r\n  ['readOnly', 'arq.form-control-error.default-error-message.readOnly'],\r\n  ['minlength', 'arq.form-control-error.default-error-message.minlength'],\r\n  ['maxlength', 'arq.form-control-error.default-error-message.maxlength'],\r\n  ['pattern', 'arq.form-control-error.default-error-message.pattern'],\r\n  ['min', 'arq.form-control-error.default-error-message.min'],\r\n  ['max', 'arq.form-control-error.default-error-message.max'],\r\n  ['format', 'arq.form-control-error.default-error-message.format'],\r\n  ['matDatepickerParse', 'arq.form-control-error.default-error-message.matDatepickerParse'],\r\n  ['matStartDateInvalid', 'arq.form-control-error.default-error-message.matStartDateInvalid'],\r\n  ['mtxDatetimepickerParse', 'arq.form-control-error.default-error-message.mtxDatetimepickerParse']\r\n]);\r\n\r\n@Component({\r\n  selector: '[arq-form-control-error]',\r\n  templateUrl: './arq-form-control-error.component.html',\r\n  styleUrls: ['./arq-form-control-error.component.css']\r\n})\r\nexport class ArqFormControlErrorComponent implements AfterViewInit {\r\n  @Input()\r\n  public labelControl: string | undefined = '';\r\n\r\n  @Input()\r\n  public errorMapMessages: Map<string, string> = errorMapMessagesDefault;\r\n\r\n  private _errorMessage: string = '';\r\n\r\n  @Input()\r\n  public formControlSibling?: FormControl;\r\n\r\n  constructor(private _translocoService: TranslocoService) {}\r\n\r\n  // hacemos todo esto despues del init cuando existan los elementos en el DOM\r\n  ngAfterViewInit(): void {\r\n    this.formControlSibling!.statusChanges!.subscribe(this.updateErrors);\r\n  }\r\n\r\n  private updateErrors = (state: FormControlStatus): void => {\r\n    if (state === 'INVALID') {\r\n      this._errorMessage = '';\r\n      // recuperamos el mapa de errores\r\n      const controlErrors = this.formControlSibling!.errors!;\r\n      Object.keys(controlErrors).forEach(keyError => {\r\n        let params: Record<string, string> = {\r\n          labelControl: this.labelControl!\r\n        };\r\n\r\n        switch (keyError) {\r\n          case 'min':\r\n            params = {\r\n              ...params,\r\n              min: controlErrors[keyError].min\r\n            };\r\n            this.concatLabel(keyError, params);\r\n            break;\r\n          case 'max':\r\n            params = {\r\n              ...params,\r\n              max: controlErrors[keyError].max\r\n            };\r\n            this.concatLabel(keyError, params);\r\n            break;\r\n          case 'minlength':\r\n          case 'maxlength':\r\n            params = {\r\n              ...params,\r\n              length: controlErrors[keyError].requiredLength\r\n            };\r\n            this.concatLabel(keyError, params);\r\n            break;\r\n          case 'readOnly':\r\n          case 'format':\r\n          case 'pattern':\r\n          case 'required':\r\n            this.concatLabel(keyError, params);\r\n            break;\r\n          case 'matDatepickerParse':\r\n          case 'matStartDateInvalid':\r\n          case 'mtxDatetimepickerParse':\r\n            params = {\r\n              ...params,\r\n              format: controlErrors[keyError]\r\n            };\r\n\r\n            this.concatLabel(keyError, params);\r\n            break;\r\n          default:\r\n            this._errorMessage += this.getCustomLabel(controlErrors[keyError]);\r\n            break;\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  private getCustomLabel(keyLabel: string): string {\r\n    return this._translocoService.translate(keyLabel) + ' ';\r\n  }\r\n\r\n  private concatLabel(keyError: string, params: Record<string, string> = {}): void {\r\n    const valueError = this.errorMapMessages.get(keyError) as string;\r\n    this._errorMessage += this._translocoService.translate(valueError, params) + ' ';\r\n  }\r\n\r\n  public get errorMessage() {\r\n    return this._errorMessage;\r\n  }\r\n}\r\n","<span>\r\n  <span\r\n    *ngIf=\"errorMessage\"\r\n    [matTooltip]=\"errorMessage\">\r\n    {{ errorMessage }}\r\n  </span>\r\n</span>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ArqFormControlErrorComponent } from './arq-form-control-error.component';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ArqFormControlErrorComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatTooltipModule,\r\n  ],\r\n  exports: [\r\n    ArqFormControlErrorComponent,\r\n  ],\r\n})\r\nexport class ArqFormControlErrorModule { }\r\n","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { TooltipPosition } from '@angular/material/tooltip';\r\nimport { pairwise, startWith, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  template: '',\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport abstract class ArqGenericInputComponent implements OnInit {\r\n  public readonly LANG_ES = 'es';\r\n\r\n  //#region Variables\r\n  @Input()\r\n  public layout = 'h';\r\n\r\n  @Input()\r\n  public label: string | undefined;\r\n\r\n  @Input()\r\n  public columns = 12;\r\n\r\n  @Input()\r\n  public labelColumns: any;\r\n\r\n  @Input()\r\n  public value: string = '';\r\n\r\n  @Input()\r\n  public required = false;\r\n\r\n  @Input()\r\n  public readonly: boolean = false;\r\n\r\n  @Input()\r\n  public placeholder = '';\r\n\r\n  @Input()\r\n  public sizeInput: string = 'small';\r\n\r\n  //propiedades Tooltip\r\n  @Input()\r\n  hideDelay!: number;\r\n\r\n  @Input()\r\n  message!: string;\r\n\r\n  @Input()\r\n  positionTooltip!: TooltipPosition;\r\n\r\n  @Input()\r\n  msgError!: string;\r\n\r\n  @Input()\r\n  public prefix!: string;\r\n\r\n  @Input()\r\n  public suffix!: string;\r\n\r\n  @Input()\r\n  public iconPrefix: boolean = false;\r\n\r\n  @Input()\r\n  public iconSuffix: boolean = false;\r\n\r\n  @Input()\r\n  public fGroup!: FormGroup;\r\n\r\n  @Input()\r\n  lang: string | undefined = this.LANG_ES;\r\n\r\n  @Input()\r\n  showValue: boolean = false;\r\n\r\n  @Output()\r\n  protected changeEvent!: EventEmitter<any>;\r\n\r\n  public subscription: Subscription | undefined;\r\n  public idioma: string | undefined;\r\n\r\n  public labelClass = '';\r\n\r\n  public inputClass = 'form-group';\r\n  //#endregion\r\n\r\n  //#region  Constructor\r\n  public constructor() {\r\n    this.changeEvent = new EventEmitter<any>();\r\n  }\r\n  //#endregion\r\n\r\n  //#region  Angular lifecycle\r\n  public ngOnInit(): void {\r\n    this.initcialitzarForm();\r\n    this.comprobarEntradas();\r\n  }\r\n  //#endregion\r\n\r\n  protected abstract comprobarEntradas(): any;\r\n\r\n  //#region Initcialitzacio\r\n  protected initcialitzarForm(): void {}\r\n\r\n  public vaciaInput() {\r\n    this.fGroup?.controls[this.value].setValue('');\r\n  }\r\n\r\n  public ngChanges(evt?: any, elem?: any) {\r\n    this.changeEvent.emit(this.fGroup?.controls[this.value].value);\r\n  }\r\n\r\n  public validateValue(): void {\r\n    this.fGroup?.controls[this.value].updateValueAndValidity();\r\n    this.fGroup?.controls[this.value].clearAsyncValidators();\r\n  }\r\n\r\n  public ngSetChanges() {\r\n    if (this.fGroup?.controls[this.value]) {\r\n      if (this.fGroup?.controls[this.value].value == true) this.fGroup?.controls[this.value].setValue('S');\r\n      if (this.fGroup?.controls[this.value].value == false) this.fGroup?.controls[this.value].setValue('N');\r\n    }\r\n    this.changeEvent.emit(this.fGroup?.controls[this.value].value);\r\n  }\r\n\r\n  protected getValue(): FormControl {\r\n    if (!this.fGroup?.controls[this.value]) {\r\n      console.error(`ERROR: El FormControl ${this.value} no existe!!`);\r\n    }\r\n\r\n    return this.fGroup?.controls[this.value] as FormControl;\r\n  }\r\n\r\n  protected setValueCheckbox(): void {\r\n    if (this.fGroup?.controls[this.value]) {\r\n      if (this.fGroup?.controls[this.value].value == 'S') this.fGroup?.controls[this.value].setValue(true);\r\n      if (this.fGroup?.controls[this.value].value == 'N') this.fGroup?.controls[this.value].setValue(false);\r\n    }\r\n  }\r\n\r\n  protected setValue(value: any): void {\r\n    if (this.fGroup?.controls[this.value]) {\r\n      this.fGroup?.controls[this.value].setValue(value);\r\n    }\r\n  }\r\n\r\n  protected setValueDate() {\r\n    this.fGroup.controls[this.value].valueChanges.subscribe(x => {\r\n      this.validateDate();\r\n    });\r\n  }\r\n\r\n  public validateDate() {\r\n    const value = this.fGroup?.controls[this.value].value;\r\n    if (this.fGroup?.controls[this.value].value) {\r\n      if (typeof value == 'number') {\r\n        this.fGroup.controls[this.value].setValue(new Date(value));\r\n      } else if (typeof value == 'string') {\r\n        const regEx = /^\\d{4}-\\d{2}-\\d{2}$/;\r\n\r\n        if (value?.toString()?.match(regEx) == null) {\r\n          this.fGroup.controls[this.value].setValue(new Date(Number(value)));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public setFG(control: any) {\r\n    this.fGroup.addControl(control, new FormControl(''));\r\n  }\r\n\r\n  public getValidations() {\r\n    if (!this.fGroup?.controls[this.value]) {\r\n      console.error(`ERROR: El FormControl ${this.value} no existe!!`);\r\n    }\r\n    return this.fGroup.controls[this.value].hasValidator(Validators.required);\r\n  }\r\n\r\n  public onFocusOutEvent(event: any): void {\r\n    //console.log(event.target.value);\r\n    this.getValue()?.markAsDirty();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ArqAutocompleteService {\r\n  constructor() {}\r\n\r\n  public _filter(options: any, value: string, lang: any): Observable<any> {\r\n    const filterValue = value ? value.toString().toLowerCase() : '';\r\n\r\n    let result: any[] = [];\r\n\r\n    options.forEach((opt: any) => {\r\n      opt.forEach((el: any) => {\r\n        if (lang == 'ca') {\r\n          if (el?.descriptionV?.toLowerCase().includes(filterValue)) {\r\n            result.push(el);\r\n          }\r\n        } else {\r\n          if (el?.description?.toLowerCase().includes(filterValue)) {\r\n            result.push(el);\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    return of(result);\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { Observable, Subscription, map, Subject, debounceTime } from 'rxjs';\r\n\r\nimport { ArqGenericInputComponent } from '../../../core/arq-generic-input/arq-generic-input.component';\r\nimport {\r\n  ArqAutocompleteSearchFn,\r\n  ArqDependentWatch,\r\n  ArqPageableRequest,\r\n  ArqPageableResponse\r\n} from '../../../lib/interfaces/arq-basic.interface';\r\nimport { ArqList } from '../../interfaces/arq-list.interface';\r\nimport { ArqAutocompleteService } from './arq-autocomplete.service';\r\nimport { MatPaginator, MatPaginatorIntl, PageEvent } from '@angular/material/paginator';\r\nimport { MatAutocomplete } from '@angular/material/autocomplete';\r\n\r\nconst DEBOUNCE_TIME: number = 500;\r\n\r\n@Component({\r\n  selector: 'arq-autocomplete',\r\n  templateUrl: './arq-autocomplete.component.html',\r\n  styleUrls: ['./arq-autocomplete.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqAutocompleteComponent extends ArqGenericInputComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  //TODO: crear input metodo filtrado\r\n\r\n  filteredOptions: Observable<ArqList[]>;\r\n\r\n  firstChangeLoaded: boolean = false;\r\n\r\n  @Input()\r\n  ariaLabel!: string;\r\n\r\n  @Input()\r\n  autoActiveFirstOption: boolean = true;\r\n\r\n  @Input()\r\n  autoSelectActiveOption: boolean = false;\r\n\r\n  @Input()\r\n  panelWidth: string | number | undefined;\r\n\r\n  @Input()\r\n  nameOptions: string = 'auto';\r\n\r\n  @Input()\r\n  type: string = 'text';\r\n\r\n  @Input()\r\n  options?: ArqAutocompleteSearchFn | Observable<ArqList[]>;\r\n\r\n  @Input()\r\n  dependsOn?: any[];\r\n\r\n  @Input()\r\n  filterBack: boolean = true;\r\n\r\n  @Output()\r\n  closed: EventEmitter<void>;\r\n\r\n  @Output()\r\n  opened: EventEmitter<void>;\r\n\r\n  @Output()\r\n  emitValue: EventEmitter<ArqPageableRequest>;\r\n\r\n  @Input()\r\n  defaultSize: number = 10;\r\n\r\n  request: ArqPageableRequest = { page: 0, size: this.defaultSize };\r\n\r\n  totalElements!: number;\r\n\r\n  subscriptions: Subscription[] = [];\r\n\r\n  @ViewChild(MatAutocomplete) ac!: MatAutocomplete;\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator!: MatPaginator;\r\n  @Input('nextPageLabel') public nextPageLabel: string = 'Siguiente';\r\n  @Input('firstPageLabel') public firstPageLabel: string = 'Primera';\r\n  @Input('lastPageLabel') public lastPageLabel: string = 'Última';\r\n  @Input('previousPageLabel') public previousPageLabel: string = 'Anterior';\r\n  @Input('range') public range: string = 'de';\r\n\r\n  private searchSubject: Subject<string> = new Subject();\r\n\r\n  private oldValues?: any = {};\r\n\r\n  public constructor(public service: ArqAutocompleteService, public _MatPaginatorIntl: MatPaginatorIntl) {\r\n    super();\r\n    this.closed = new EventEmitter<any>();\r\n    this.opened = new EventEmitter<any>();\r\n    this.emitValue = new EventEmitter<ArqPageableRequest>();\r\n    this.filteredOptions = new Observable();\r\n    this.configureMatPaginator(_MatPaginatorIntl);\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes) {\r\n      this.getOptions();\r\n    }\r\n  }\r\n\r\n  override ngOnInit() {\r\n    this.request = { page: 0, size: this.defaultSize };\r\n    this.totalElements = this.defaultSize;\r\n    this.configureDependents();\r\n    this.changeObjectWithArrayPropertiesToNull();\r\n    this.request.filter = this.getStringValue() == null ? '' : this.getStringValue();\r\n    this.filteredOptions = this.getContent();\r\n    this.searchSubject.pipe(debounceTime(DEBOUNCE_TIME)).subscribe(value => this.getData(value));\r\n  }\r\n\r\n  configureDependents() {\r\n    if (!this.dependsOn || this.dependsOn.length == 0) return;\r\n    this.prepareDependentsStringArray();\r\n    this.dependsOn\r\n      .filter((d: any) => (<ArqDependentWatch>d).watch)\r\n      .forEach((d: any) => {\r\n        const dependent: string = (<ArqDependentWatch>d).field;\r\n        this.subscriptions.push(\r\n          this.fGroup.controls[dependent].valueChanges.subscribe((value: any) => {\r\n            if ((typeof value === 'string' && value.length > 0) || this.oldValues[dependent] == value) {\r\n              return;\r\n            }\r\n            this.oldValues[dependent] = value;\r\n            this.request = {\r\n              page: 0,\r\n              size: this.defaultSize,\r\n              filter: ''\r\n            };\r\n            this.setValue(null);\r\n            // forzamos que se resetee la paginacion\r\n            this.totalElements = 0;\r\n            this.filteredOptions = (<ArqAutocompleteSearchFn>this.options)(this.request, this.fGroup.value).pipe(\r\n              map((result: ArqPageableResponse) => {\r\n                this.totalElements = result.totalElements;\r\n                this.request.size = result.pageable?.pageSize;\r\n                this.request.page = result.pageable?.pageNumber;\r\n                return result.content;\r\n              })\r\n            );\r\n          })\r\n        );\r\n      });\r\n  }\r\n\r\n  private prepareDependentsStringArray() {\r\n    if (Array.isArray(this.dependsOn) && this.dependsOn.every((d: any) => typeof d === 'string')) {\r\n      let dependents: ArqDependentWatch[] = [];\r\n      this.dependsOn.forEach((d: any) => {\r\n        dependents.push({ field: <string>d, watch: false });\r\n      });\r\n      dependents[dependents.length - 1].watch = true;\r\n      this.dependsOn = dependents;\r\n    }\r\n  }\r\n\r\n  private changeObjectWithArrayPropertiesToNull() {\r\n    if (Array.isArray(this.getValue().value?.value) || this.getValue().value === '') {\r\n      this.setValue(null);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.panelWidth) {\r\n      this.ac.panelWidth = this.panelWidth;\r\n    }\r\n  }\r\n\r\n  public getContent(): any {\r\n    if (typeof this.options === 'function') {\r\n      const response = this.options(this.request, this.fGroup.value).pipe(\r\n        map(result => {\r\n          this.totalElements = result.totalElements;\r\n          return result.content;\r\n        })\r\n      );\r\n      return response;\r\n    } else if (this.options) {\r\n      return this.options;\r\n    }\r\n  }\r\n\r\n  public displayFn(option: any): string {\r\n    if (!option) {\r\n      return '';\r\n    }\r\n\r\n    return option.description;\r\n  }\r\n\r\n  public getOptions() {\r\n    if (!this.filterBack && this.options) {\r\n      this.getValue().valueChanges.subscribe((value: any) => {\r\n        if (this.options) {\r\n          this.filteredOptions = this.service._filter(this.getContent(), value, this.lang);\r\n        }\r\n      });\r\n    } else {\r\n      if (this.options) {\r\n        if (this.isFirstChange()) {\r\n          this.loadFirstChange();\r\n        } else {\r\n          this.request.filter = this.getStringValue() == null ? '' : this.getStringValue();\r\n          this.filteredOptions = this.getContent();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private loadFirstChange() {\r\n    this.firstChangeLoaded = true;\r\n    this.request.filter = this.getStringValue() == null ? '' : this.getStringValue();\r\n    this.filteredOptions = this.getContent();\r\n    this.filteredOptions.subscribe((result: ArqList[]) => {\r\n      if (result.length === 1) {\r\n        this.setValue(result[0]);\r\n      }\r\n    });\r\n  }\r\n\r\n  public getStringValue(): any {\r\n    let value = this.getValue().value;\r\n    value = value?.value !== undefined ? value.value : value;\r\n    return value;\r\n  }\r\n\r\n  private isFirstChange(): boolean {\r\n    return this.getStringValue()?.length > 0 && !this.firstChangeLoaded;\r\n  }\r\n\r\n  public ngGetValue(evt: KeyboardEvent): any {\r\n    this.searchSubject.next(evt.key);\r\n  }\r\n\r\n  public getData(key: string): void {\r\n    if (this.readonly) return;\r\n    if (key === 'Enter') {\r\n      return;\r\n    }\r\n    // forzamos que se resetee la paginacion\r\n    this.totalElements = 0;\r\n    this.request = {\r\n      page: 0,\r\n      size: this.defaultSize,\r\n      filter: this.getValue().value\r\n    };\r\n\r\n    this.emitValue.emit(this.request);\r\n    if (this.options) {\r\n      this.loadPage();\r\n    }\r\n  }\r\n\r\n  loadPage() {\r\n    if (this.filterBack) {\r\n      this.filteredOptions = this.getContent();\r\n    } else {\r\n      this.filteredOptions = this.service._filter(\r\n        this.getContent(),\r\n        this.request.filter ? this.request.filter : '',\r\n        this.lang\r\n      );\r\n    }\r\n  }\r\n\r\n  public onPageChange(event: PageEvent): void {\r\n    this.request.page = +event.pageIndex.toString();\r\n    this.request.size = +event.pageSize.toString();\r\n\r\n    this.loadPage();\r\n  }\r\n\r\n  public clickEvent(evt: any): void {\r\n    evt.stopPropagation();\r\n  }\r\n\r\n  private configureMatPaginator(paginatorInt1: MatPaginatorIntl): void {\r\n    paginatorInt1.firstPageLabel = this.firstPageLabel;\r\n    paginatorInt1.lastPageLabel = this.lastPageLabel;\r\n    paginatorInt1.nextPageLabel = this.nextPageLabel;\r\n    paginatorInt1.previousPageLabel = this.previousPageLabel;\r\n    paginatorInt1.getRangeLabel = (page: number, pageSize: number, length: number): any => {\r\n      const start = page * pageSize + 1;\r\n      let end = (page + 1) * pageSize;\r\n      if (end > length) {\r\n        end = length;\r\n      }\r\n      return `${start} - ${end} ${this.range} ${length}`;\r\n    };\r\n  }\r\n\r\n  public comprobarEntradas(): void {}\r\n\r\n  public ngOnDestroy(): void {\r\n    this.subscriptions.forEach((s: Subscription) => {\r\n      s.unsubscribe();\r\n    });\r\n  }\r\n}\r\n","<label *ngIf=\"this.label\"\r\n  >{{ this.label }}\r\n  <span *ngIf=\"this.getValidations()\" class=\"text-danger\"> * </span>\r\n</label>\r\n<mat-form-field appearance=\"outline\" class=\"full-width\" [class]=\"sizeInput\" *ngIf=\"this.getValue()\">\r\n  <input\r\n    matInput\r\n    [formControl]=\"this.getValue()\"\r\n    [type]=\"this.type\"\r\n    [placeholder]=\"this.placeholder\"\r\n    [matAutocomplete]=\"auto\"\r\n    #tooltip=\"matTooltip\"\r\n    [matTooltip]=\"this.message\"\r\n    [matTooltipPosition]=\"this.positionTooltip\"\r\n    [matTooltipHideDelay]=\"this.hideDelay\"\r\n    (keyup)=\"ngGetValue($event)\"\r\n    (focusOut)=\"this.onFocusOutEvent($event)\" />\r\n  <mat-error arq-form-control-error [labelControl]=\"this.label\" [formControlSibling]=\"this.getValue()\"></mat-error>\r\n  <mat-autocomplete\r\n    class=\"arq-autocomplete\"\r\n    autoActiveFirstOption\r\n    #auto=\"matAutocomplete\"\r\n    [displayWith]=\"displayFn\"\r\n    (optionSelected)=\"ngChanges($event)\">\r\n    <mat-paginator\r\n      *ngIf=\"this.totalElements > this.request.size\"\r\n      showFirstLastButtons\r\n      hidePageSize\r\n      [length]=\"this.totalElements\"\r\n      [pageSize]=\"this.request.size\"\r\n      (page)=\"onPageChange($event)\"\r\n      (click)=\"clickEvent($event)\">\r\n    </mat-paginator>\r\n    <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\r\n      <ng-container *ngIf=\"lang === 'ca'; else elseTemplateDescription\">\r\n        <span *ngIf=\"showValue\">{{ option?.value }} - </span> {{ option?.descriptionV }}\r\n      </ng-container>\r\n      <ng-template #elseTemplateDescription>\r\n        <span *ngIf=\"showValue\">{{ option?.value }} - </span> {{ option?.description }}\r\n      </ng-template>\r\n    </mat-option>\r\n  </mat-autocomplete>\r\n  <mat-icon matSuffix>search</mat-icon>\r\n</mat-form-field>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { ArqAutocompleteComponent } from './arq-autocomplete.component';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { ArqFormControlErrorModule } from '../components';\r\n\r\n@NgModule({\r\n  declarations: [ArqAutocompleteComponent],\r\n  exports: [ArqAutocompleteComponent],\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    MatAutocompleteModule,\r\n    MatFormFieldModule,\r\n    MatTooltipModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatPaginatorModule,\r\n    ArqFormControlErrorModule\r\n  ]\r\n})\r\nexport class ArqAutocompleteModule {}\r\n","export function checkRequiredFields(input: any, name: string) {\r\n  if (input == null) {\r\n    throw new Error('El elemento \"' + name + '\" es obligatorio');\r\n  }\r\n}\r\n\r\nexport function checkRequired2Fields(input: any, name: string, input2: any) {\r\n  if (input == null && input2 == null) {\r\n    throw new Error('El elemento \"' + name + '\" es obligatorio');\r\n  }\r\n}\r\n\r\nexport function checkRequiredListFields(input: any[], name: string[]) {\r\n  input.forEach(function (value, i) {\r\n    checkRequiredFields(value, name[i]);\r\n  });\r\n}\r\n","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { MatBadgePosition, MatBadgeSize } from '@angular/material/badge';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { ArqGenericInputComponent } from '../../../core/arq-generic-input/arq-generic-input.component';\r\nimport { checkRequiredListFields } from '../../../core/utils/basic.util';\r\n\r\n@Component({\r\n  selector: 'arq-bagde',\r\n  templateUrl: './arq-badge.component.html',\r\n  styleUrls: ['./arq-badge.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqBadgeComponent extends ArqGenericInputComponent implements OnInit {\r\n  @Input()\r\n  color: ThemePalette;\r\n\r\n  @Input()\r\n  content: string | number | undefined | null;\r\n\r\n  @Input()\r\n  description?: string;\r\n\r\n  @Input()\r\n  disabled?: boolean;\r\n\r\n  @Input()\r\n  hidden?: boolean;\r\n\r\n  @Input()\r\n  overlap?: boolean;\r\n\r\n  @Input()\r\n  position?: MatBadgePosition;\r\n\r\n  @Input()\r\n  size?: MatBadgeSize;\r\n\r\n  @Input()\r\n  icon?: string;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  override ngOnInit(): void {\r\n    checkRequiredListFields([this.content, this.description, this.icon], ['content', 'description', 'icon']);\r\n  }\r\n\r\n  comprobarEntradas(): void {}\r\n}\r\n","<div class=\"demo-section\">\r\n  {{ this.description }}\r\n  <mat-icon [matBadge]=\"this.content\" [matBadgeColor]=\"this.color\">{{ this.icon }}</mat-icon>\r\n  <!-- Include text description of the icon's meaning for screen-readers -->\r\n  <span class=\"cdk-visually-hidden\"> </span>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ArqBadgeComponent } from './arq-badge.component';\r\n\r\n@NgModule({\r\n  declarations: [ArqBadgeComponent],\r\n  exports: [ArqBadgeComponent],\r\n  imports: [MatBadgeModule, MatIconModule, ReactiveFormsModule, CommonModule]\r\n})\r\nexport class ArqBadgeModule {}\r\n","import { Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ArqGenericInputComponent } from '../../../core/arq-generic-input/arq-generic-input.component';\r\nimport { checkRequiredFields } from '../../../core/utils/basic.util';\r\nimport { ArqList } from '../../interfaces/arq-list.interface';\r\n\r\n@Component({\r\n  selector: 'arq-button-toggle-multiple',\r\n  templateUrl: './arq-button-toggle-multiple.component.html',\r\n  styleUrls: ['./arq-button-toggle-multiple.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqButtonToggleMultipleComponent extends ArqGenericInputComponent implements OnInit {\r\n  @Input()\r\n  toggleOptions!: Observable<ArqList[]>;\r\n\r\n  @Output()\r\n  selectionChange = new EventEmitter();\r\n\r\n  onValChange(value: any) {\r\n    this.selectionChange.emit(value);\r\n  }\r\n\r\n  comprobarEntradas(): void {\r\n    checkRequiredFields(this.toggleOptions, 'toggleOptions');\r\n  }\r\n}\r\n","<mat-button-toggle-group multiple [formControl]=\"this.getValue()\" (change)=\"onValChange($event.value)\">\r\n  <mat-button-toggle *ngFor=\"let op of toggleOptions | async\" [value]=\"op.value\">\r\n    {{ op.description }}\r\n  </mat-button-toggle>\r\n</mat-button-toggle-group>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { ArqButtonToggleMultipleComponent } from './arq-button-toggle-multiple.component';\r\n\r\n@NgModule({\r\n  declarations: [ArqButtonToggleMultipleComponent],\r\n  exports: [ArqButtonToggleMultipleComponent],\r\n  imports: [ReactiveFormsModule, FormsModule, CommonModule, MatButtonToggleModule]\r\n})\r\nexport class ArqButtonToggleMultipleModule {}\r\n","import { Component, HostBinding, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'arq-button',\r\n  templateUrl: './arq-button.component.html',\r\n  styleUrls: ['./arq-button.component.css']\r\n})\r\nexport class ArqButtonComponent {\r\n  @Input()\r\n  public readonly: boolean = false;\r\n\r\n  @Input()\r\n  public label!: string;\r\n\r\n  @Input()\r\n  public color!: string;\r\n\r\n  @Input()\r\n  public type!: string;\r\n\r\n  @Input()\r\n  public icon!: string;\r\n\r\n  @Input()\r\n  public tipoButton?: string;\r\n\r\n  @Input()\r\n  public btnName?: string\r\n\r\n  @HostBinding('class.parent-disabled') get className() {\r\n    return this.readonly;\r\n  }\r\n}\r\n","<ng-container [ngSwitch]=\"tipoButton\">\r\n  <button\r\n    *ngSwitchDefault\r\n    class=\"btn-marte\"\r\n    mat-raised-button\r\n    [color]=\"this.color\"\r\n    [disabled]=\"this.readonly\"\r\n    [type]=\"this.type\"\r\n    [attr.name]=\"this.btnName ? this.btnName : null\"\r\n    >\r\n    <mat-icon *ngIf=\"this.icon\">{{ this.icon }}</mat-icon>\r\n    {{ this.label }}\r\n  </button>\r\n  <button\r\n    *ngSwitchCase=\"'raised'\"\r\n    class=\"btn-marte\"\r\n    mat-raised-button\r\n    [color]=\"this.color\"\r\n    [disabled]=\"this.readonly\"\r\n    [type]=\"this.type\"\r\n    [attr.name]=\"this.btnName ? this.btnName : null\"\r\n    >\r\n    <mat-icon *ngIf=\"this.icon\">{{ this.icon }}</mat-icon>\r\n    {{ this.label }}\r\n  </button>\r\n  <button\r\n    *ngSwitchCase=\"'stroked'\"\r\n    mat-stroked-button\r\n    [color]=\"this.color\"\r\n    [disabled]=\"this.readonly\"\r\n    [type]=\"this.type\"\r\n    [attr.name]=\"this.btnName ? this.btnName : null\"\r\n    >\r\n    <mat-icon *ngIf=\"this.icon\">{{ this.icon }}</mat-icon>\r\n    {{ this.label }}\r\n  </button>\r\n  <button\r\n    *ngSwitchCase=\"'flat'\"\r\n    mat-flat-button\r\n    [color]=\"this.color\"\r\n    [disabled]=\"this.readonly\"\r\n    [type]=\"this.type\"\r\n    [attr.name]=\"this.btnName ? this.btnName : null\"\r\n    >\r\n    <mat-icon *ngIf=\"this.icon\">{{ this.icon }}</mat-icon>\r\n    {{ this.label }}\r\n  </button>\r\n  <button\r\n    *ngSwitchCase=\"'icon'\"\r\n    mat-icon-button\r\n    [color]=\"this.color\"\r\n    [disabled]=\"this.readonly\"\r\n    [type]=\"this.type\"\r\n    [attr.name]=\"this.btnName ? this.btnName : null\"\r\n    >\r\n    <mat-icon *ngIf=\"this.icon\">{{ this.icon }}</mat-icon>\r\n    {{ this.label }}\r\n  </button>\r\n  <button\r\n    *ngSwitchCase=\"'fab'\"\r\n    mat-fab\r\n    [color]=\"this.color\"\r\n    [disabled]=\"this.readonly\"\r\n    [type]=\"this.type\"\r\n    [attr.name]=\"this.btnName ? this.btnName : null\"\r\n    >\r\n    <mat-icon *ngIf=\"this.icon\">{{ this.icon }}</mat-icon>\r\n    {{ this.label }}\r\n  </button>\r\n  <button\r\n    *ngSwitchCase=\"'mini-fab'\"\r\n    mat-mini-fab\r\n    [color]=\"this.color\"\r\n    [disabled]=\"this.readonly\"\r\n    [type]=\"this.type\"\r\n    [attr.name]=\"this.btnName ? this.btnName : null\"\r\n    >\r\n    <mat-icon *ngIf=\"this.icon\">{{ this.icon }}</mat-icon>\r\n    {{ this.label }}\r\n  </button>\r\n</ng-container>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ArqButtonComponent } from './arq-button.component';\r\n\r\n@NgModule({\r\n  declarations: [ArqButtonComponent],\r\n  exports: [ArqButtonComponent],\r\n  imports: [MatButtonModule, MatIconModule, CommonModule]\r\n})\r\nexport class ArqButtonModule { }\r\n","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { checkRequiredFields } from '../../../core/utils/basic.util';\r\n\r\n@Component({\r\n  selector: 'arq-card',\r\n  templateUrl: './arq-card.component.html',\r\n  styleUrls: ['./arq-card.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqCardComponent implements OnInit {\r\n  @Input()\r\n  title?: string;\r\n\r\n  @Input()\r\n  subtitle?: string;\r\n\r\n  @Input()\r\n  content?: string;\r\n\r\n  @Input()\r\n  src?: string;\r\n\r\n  @Input()\r\n  image?: string;\r\n\r\n  @Input()\r\n  alt?: string;\r\n\r\n  @Input()\r\n  buttonsSchema?: any[];\r\n\r\n  @Input()\r\n  extraClass?: string;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    checkRequiredFields(this.content, 'Content');\r\n    checkRequiredFields(this.title, 'title');\r\n    checkRequiredFields(this.src, 'src');\r\n  }\r\n}\r\n","<mat-card appearance=\"outlined\" class=\"{{ this.extraClass }}\">\r\n  <mat-card-header>\r\n    <mat-card-title>{{ this.title }}</mat-card-title>\r\n    <mat-card-subtitle>{{ this.subtitle }}</mat-card-subtitle>\r\n  </mat-card-header>\r\n  <img mat-card-image *ngIf=\"this.src\" src=\"{{ this.src }}\" alt=\"{{ this.alt }}\" />\r\n  <mat-card-content>\r\n    <p>\r\n      {{ this.content }}\r\n      <ng-content></ng-content>\r\n    </p>\r\n  </mat-card-content>\r\n  <mat-card-actions *ngIf=\"buttonsSchema\">\r\n    <ng-container *ngFor=\"let btn of buttonsSchema\">\r\n      <button mat-button [color]=\"btn.color\" (click)=\"btn.action()\">{{ btn.title }}</button>\r\n    </ng-container>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { ArqCardComponent } from './arq-card.component';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n@NgModule({\r\n  declarations: [ArqCardComponent],\r\n  exports: [ArqCardComponent],\r\n  imports: [ReactiveFormsModule, CommonModule, MatCardModule, MatButtonModule]\r\n})\r\nexport class ArqCardModule {}\r\n","import { Component, Input, OnInit, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { ArqGenericInputComponent } from '../../../core/arq-generic-input/arq-generic-input.component';\r\n\r\n@Component({\r\n  selector: 'arq-checkbox-basic',\r\n  templateUrl: './arq-checkbox-basic.component.html',\r\n  styleUrls: ['./arq-checkbox-basic.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqCheckboxBasicComponent extends ArqGenericInputComponent implements OnInit {\r\n  @Input()\r\n  color: ThemePalette = 'primary';\r\n\r\n  @Input()\r\n  checked?: boolean;\r\n\r\n  @Input()\r\n  disabled?: boolean;\r\n\r\n  @Input()\r\n  sectionClass?: string;\r\n\r\n  @Input()\r\n  spanClass?: string;\r\n\r\n  @Input() checkbox_down: boolean = false;\r\n\r\n  @Input() checkbox_sn: boolean = false;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes) {\r\n      this.verifyCheckbox();\r\n    }\r\n  }\r\n\r\n  override ngOnInit(): void {\r\n    this.verifyCheckbox();\r\n  }\r\n\r\n  verifyCheckbox() {\r\n    if (this.getValue() && this.checkbox_sn) {\r\n      this.setValueCheckbox();\r\n    }\r\n  }\r\n\r\n  comprobarEntradas(): void {}\r\n}\r\n","<section class=\"example-section\" *ngIf=\"this.getValue()\">\r\n  <mat-checkbox\r\n    [color]=\"color\"\r\n    [formControl]=\"this.getValue()\"\r\n    [ngClass]=\"{ checkbox_down: checkbox_down == true }\"\r\n    (change)=\"checkbox_sn ? this.ngSetChanges() : this.ngChanges()\">\r\n    {{ label }}\r\n  </mat-checkbox>\r\n  <mat-error\r\n    arq-form-control-error\r\n    [labelControl]=\"this.label\"\r\n    [formControlSibling]=\"this.getValue()\"\r\n  ></mat-error>\r\n</section>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { ArqCheckboxBasicComponent } from './arq-checkbox-basic.component';\r\nimport { ArqFormControlErrorModule } from '../components';\r\n\r\n@NgModule({\r\n  declarations: [ArqCheckboxBasicComponent],\r\n  exports: [ArqCheckboxBasicComponent],\r\n  imports: [\r\n    MatCheckboxModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    ArqFormControlErrorModule,\r\n  ]\r\n})\r\nexport class ArqCheckboxBasicModule {}\r\n","import { Component, Input, ViewEncapsulation } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\n\r\nimport { ArqGenericInputComponent } from '../../../core/arq-generic-input/arq-generic-input.component';\r\nimport { checkRequiredFields } from '../../../core/utils/basic.util';\r\nimport { ArqCheckbox } from '../../interfaces/arq-checkbox.interface';\r\n\r\n@Component({\r\n  selector: 'arq-checkbox',\r\n  templateUrl: './arq-checkbox.component.html',\r\n  styleUrls: ['./arq-checkbox.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqCheckboxComponent extends ArqGenericInputComponent {\r\n  @Input()\r\n  color: ThemePalette;\r\n\r\n  @Input()\r\n  checked?: boolean;\r\n\r\n  @Input()\r\n  disabled?: boolean;\r\n\r\n  @Input()\r\n  indeterminate?: boolean;\r\n\r\n  @Input()\r\n  disableRipple?: boolean;\r\n\r\n  @Input()\r\n  checkBoxes!: ArqCheckbox[];\r\n\r\n  @Input()\r\n  sectionClass?: string;\r\n\r\n  @Input()\r\n  spanClass?: string;\r\n\r\n  @Input()\r\n  direction?: string = 'column';\r\n\r\n  @Input() checkbox_down: boolean = false;\r\n\r\n  @Input() checkbox_sn: boolean = false;\r\n  copyCheckboxes!: ArqCheckbox[];\r\n\r\n  override comprobarEntradas() {\r\n    checkRequiredFields(this.checkBoxes, 'checkBoxes');\r\n  }\r\n\r\n  override ngOnInit(): void {\r\n    this.copyCheckboxes = this.checkBoxes.slice();\r\n  }\r\n\r\n  public setCheckBoxes(evt: any, item: any) {\r\n    item.completed = evt;\r\n    if (this.checkbox_sn) {\r\n      this.copyCheckboxes.forEach((check: ArqCheckbox) => {\r\n        if (check.completed == true) check.completed = 'S';\r\n        if (check.completed == false) check.completed = 'N';\r\n      });\r\n    }\r\n    this.setValue(this.copyCheckboxes);\r\n    this.ngChanges();\r\n  }\r\n}\r\n","<section class=\"example-section\">\r\n  <span class=\"example-list-section\">\r\n    <ul [ngClass]=\"{ row: direction === 'row' }\">\r\n      <li *ngFor=\"let checkBox of copyCheckboxes\">\r\n        <mat-checkbox\r\n          [color]=\"checkBox.color\"\r\n          [(ngModel)]=\"checkbox_sn ? (checkBox.completed == 'S' ? true : false) : checkBox.completed\"\r\n          [ngClass]=\"{ checkbox_down: checkbox_down == true }\"\r\n          (ngModelChange)=\"setCheckBoxes($event, checkBox)\">\r\n          {{ checkBox.name }}\r\n        </mat-checkbox>\r\n      </li>\r\n    </ul>\r\n  </span>\r\n  <mat-error\r\n    arq-form-control-error\r\n    [labelControl]=\"this.label\"\r\n    [formControlSibling]=\"this.getValue()\"\r\n  ></mat-error>\r\n</section>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { ArqCheckboxComponent } from './arq-checkbox.component';\r\nimport { ArqFormControlErrorModule } from '../components';\r\n\r\n@NgModule({\r\n  declarations: [ArqCheckboxComponent],\r\n  exports: [ArqCheckboxComponent],\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    MatCheckboxModule,\r\n    ArqFormControlErrorModule,\r\n  ]\r\n})\r\nexport class ArqCheckboxModule {}\r\n","import { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { Component, ElementRef, Input, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { MatChipInputEvent } from '@angular/material/chips';\r\nimport { ThemePalette } from '@angular/material/core';\r\n\r\nimport { ArqGenericInputComponent } from '../../../core/arq-generic-input/arq-generic-input.component';\r\n\r\n@Component({\r\n  selector: 'arq-chips',\r\n  templateUrl: './arq-chips.component.html',\r\n  styleUrls: ['./arq-chips.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqChipsComponent extends ArqGenericInputComponent implements OnInit {\r\n  @Input()\r\n  placeholderadd!: string;\r\n\r\n  @Input()\r\n  compareWith?: (o1: any, o2: any) => boolean;\r\n\r\n  @Input()\r\n  selectable: boolean = true;\r\n\r\n  @Input()\r\n  role?: string | null;\r\n\r\n  @Input()\r\n  multiple?: boolean;\r\n\r\n  //Chip Properties\r\n  @Input()\r\n  color: ThemePalette;\r\n\r\n  @Input()\r\n  disabled?: boolean;\r\n\r\n  @Input()\r\n  removable: boolean = true;\r\n\r\n  @Input()\r\n  roleChip?: string;\r\n\r\n  @Input()\r\n  selectableChip: boolean = true;\r\n\r\n  @ViewChild('chipInput') chipInput?: ElementRef<HTMLInputElement>;\r\n\r\n  addOnBlur = true;\r\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  add(event: MatChipInputEvent): void {\r\n    const input = event.chipInput;\r\n    const value = event.value;\r\n\r\n    if ((value || '').trim()) {\r\n      let val = this.value && this.fGroup?.controls[this.value].value ? this.fGroup?.controls[this.value].value : [];\r\n      this.fGroup?.controls[this.value].setValue([...val, value.trim()]);\r\n      this.fGroup?.controls[this.value].updateValueAndValidity();\r\n      this.ngChanges();\r\n    }\r\n  }\r\n\r\n  remove(elem: string): void {\r\n    const index = this.fGroup?.controls[this.value].value.indexOf(elem);\r\n\r\n    if (index >= 0) {\r\n      this.fGroup?.controls[this.value].value.splice(index, 1);\r\n      this.fGroup?.controls[this.value].updateValueAndValidity();\r\n      this.ngChanges();\r\n    }\r\n  }\r\n\r\n  comprobarEntradas(): void {}\r\n}\r\n","<label *ngIf=\"this.label\">{{ this.label }}</label>\r\n<mat-form-field appearance=\"outline\" class=\"chip-list\">\r\n  <mat-chip-grid #chipList aria-label=\"this.label\" [formControl]=\"this.getValue()\" multiple>\r\n    <mat-chip-row\r\n      *ngFor=\"let chip of this.getValue()?.value\"\r\n      [editable]=\"!removable\"\r\n      [removable]=\"removable\"\r\n      (removed)=\"remove(chip)\"\r\n      color=\"primary\">\r\n      {{ chip }}\r\n      <button matChipRemove>\r\n        <mat-icon>cancel</mat-icon>\r\n      </button>\r\n    </mat-chip-row>\r\n    <input\r\n      #chipInput\r\n      placeholder=\"{{ this.placeholderadd }}\"\r\n      [matChipInputFor]=\"chipList\"\r\n      [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n      [matChipInputAddOnBlur]=\"addOnBlur\"\r\n      (matChipInputTokenEnd)=\"add($event)\" />\r\n  </mat-chip-grid>\r\n  <mat-error\r\n    arq-form-control-error\r\n    [labelControl]=\"this.label\"\r\n    [formControlSibling]=\"this.getValue()\"\r\n  ></mat-error>\r\n</mat-form-field>\r\n","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nimport { ArqChipsComponent } from './arq-chips.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ArqFormControlErrorModule } from '../components';\r\n\r\n@NgModule({\r\n  declarations: [ArqChipsComponent],\r\n  exports: [ArqChipsComponent],\r\n  imports: [\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    ArqFormControlErrorModule,\r\n  ]\r\n})\r\nexport class ArqChipsModule {}\r\n","import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\r\nimport { ContextMenuModel } from './models/contextmenu.model';\r\nimport { MenuPositions } from './models/menupositions.model';\r\n\r\n@Component({\r\n  selector: 'arq-context-menu',\r\n  templateUrl: './arq-context-menu.component.html',\r\n  styleUrls: ['./arq-context-menu.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqContextMenuComponent {\r\n  @Input()\r\n  contextMenuItems!: Array<ContextMenuModel>;\r\n  @Input()\r\n  menuPositions!: MenuPositions;\r\n\r\n  @Output()\r\n  onContextMenuItemClick: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  onContextMenuClick(event: any, data: any): any {\r\n    this.onContextMenuItemClick.emit({\r\n      event,\r\n      data\r\n    });\r\n  }\r\n}\r\n","<ng-container>\r\n  <div class=\"container-links\" [ngStyle]=\"{ 'left.px': menuPositions.x, 'top.px': menuPositions.y }\">\r\n    <div\r\n      class=\"menu-link\"\r\n      *ngFor=\"let menuItem of contextMenuItems; index as i\"\r\n      (click)=\"onContextMenuClick($event, menuItem)\">\r\n      {{ menuItem.menuText }}\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ArqContextMenuComponent } from './arq-context-menu.component';\r\n\r\n@NgModule({\r\n  declarations: [ArqContextMenuComponent],\r\n  exports: [ArqContextMenuComponent],\r\n  imports: [ReactiveFormsModule, CommonModule]\r\n})\r\nexport class ArqContextMenuModule {}\r\n","import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\n\r\nimport { ArqGenericInputComponent } from '../../../core/arq-generic-input/arq-generic-input.component';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'DD/MM/YYYY'\r\n  },\r\n  display: {\r\n    dateInput: 'L',\r\n    monthYearLabel: 'MMMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY'\r\n  }\r\n};\r\n\r\nexport const dateProviders = [\r\n  { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  { provide: MAT_MOMENT_DATE_ADAPTER_OPTIONS, useValue: { strict: true } },\r\n  { provide: MAT_MOMENT_DATE_ADAPTER_OPTIONS, useValue: { useUtc: true } }\r\n];\r\n\r\n@Component({\r\n  selector: 'arq-datepicker',\r\n  templateUrl: './arq-datepicker.component.html',\r\n  styleUrls: ['./arq-datepicker.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqDatepickerComponent extends ArqGenericInputComponent implements OnInit, OnChanges {\r\n  @Input() public override label!: string;\r\n  @Input() public hint!: string;\r\n  @Input() public disabled: undefined | string | boolean;\r\n\r\n  public constructor(public datePipe: DatePipe) {\r\n    super();\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes) this.setValueDate();\r\n  }\r\n\r\n  public override ngOnInit(): void {\r\n    this.validateDate();\r\n\r\n    // Disable funcionality\r\n    if (typeof this.disabled === 'string') this.fGroup.controls[this.value].disable();\r\n    else if (typeof this.disabled === 'boolean' && this.disabled) this.fGroup.controls[this.value].disable();\r\n  }\r\n\r\n  public isDisabled(): boolean {\r\n    if (this.fGroup) {\r\n      return this.fGroup.controls[this.value].disabled;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public comprobarEntradas(): void {}\r\n}\r\n","<label *ngIf=\"this.label\"\r\n  >{{ this.label }}\r\n  <span *ngIf=\"this.getValidations()\" class=\"text-danger\"> * </span>\r\n</label>\r\n<mat-form-field appearance=\"outline\" class=\"full-width type-date pb-0\" [class]=\"sizeInput\" *ngIf=\"this.getValue()\">\r\n  <input\r\n    matInput\r\n    [matDatepicker]=\"picker\"\r\n    [formControl]=\"this.getValue()\"\r\n    #tooltip=\"matTooltip\"\r\n    [matTooltip]=\"this.message\"\r\n    [matTooltipPosition]=\"this.positionTooltip\"\r\n    [matTooltipHideDelay]=\"this.hideDelay\"\r\n    [placeholder]=\"placeholder\"\r\n    (dateChange)=\"ngChanges()\"\r\n    (blur)=\"validateValue()\" />\r\n  <mat-error arq-form-control-error [labelControl]=\"this.label\" [formControlSibling]=\"this.getValue()\"></mat-error>\r\n  <mat-hint *ngIf=\"hint\">{{ this.hint }}</mat-hint>\r\n  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n  <mat-datepicker #picker [disabled]=\"this.isDisabled()\"></mat-datepicker>\r\n</mat-form-field>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ArqDatepickerComponent, dateProviders } from '../arq-datepicker/arq-datepicker.component';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'arq-datepicker-range',\r\n  templateUrl: './arq-datepicker-range.component.html',\r\n  styleUrls: ['./arq-datepicker-range.component.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [dateProviders, DatePipe]\r\n})\r\nexport class ArqDatepickerRangeComponent extends ArqDatepickerComponent implements OnInit, OnChanges {\r\n  @Input() public labelErrorStart!: string;\r\n\r\n  @Input() public labelErrorEnd!: string;\r\n\r\n  @Input() public visibleRange: boolean = true;\r\n\r\n  @Input() public rangeLabel: string = '';\r\n\r\n  @Input() public placeholderStart!: string;\r\n\r\n  @Input() public placeholderEnd!: string;\r\n\r\n  @Input() public fechaFin!: string;\r\n\r\n  @Output() public selectionChange = new EventEmitter();\r\n\r\n  public fechaFinCntr!: FormControl;\r\n\r\n  public constructor(public override datePipe: DatePipe) {\r\n    super(datePipe);\r\n  }\r\n\r\n  public override ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes) this.setValueDate();\r\n  }\r\n\r\n  public override ngOnInit(): void {\r\n    this.addControEnd();\r\n    this.validateDate();\r\n\r\n    // Disable funcionality\r\n    if (typeof this.disabled === 'string') {\r\n      this.fGroup.controls[this.value].disable();\r\n      this.fGroup.controls[this.fechaFin].disable();\r\n    } else if (typeof this.disabled === 'boolean' && this.disabled) {\r\n      this.fGroup.controls[this.value].disable();\r\n      this.fGroup.controls[this.fechaFin].disable();\r\n    }\r\n  }\r\n\r\n  public addControEnd(): void {\r\n    this.setFG(this.fechaFin);\r\n  }\r\n\r\n  public dateRangeChange(dateRangeStart: HTMLInputElement, dateRangeEnd: HTMLInputElement): void {\r\n    this.selectionChange.emit({\r\n      start: dateRangeStart.value,\r\n      end: dateRangeEnd.value\r\n    });\r\n  }\r\n\r\n  protected getFechaFinCntr(): FormControl {\r\n    if (this.fGroup?.controls[this.fechaFin].value) {\r\n      this.fGroup?.controls[this.fechaFin].setValue(new Date(this.fGroup?.controls[this.fechaFin].value));\r\n    }\r\n    return this.fGroup?.controls[this.fechaFin] as FormControl;\r\n  }\r\n}\r\n","<label *ngIf=\"this.label\"\r\n  >{{ this.label }}\r\n  <span *ngIf=\"this.getValidations()\" class=\"text-danger\"> * </span>\r\n</label>\r\n<mat-form-field appearance=\"outline\" class=\"full-width type-date pb-0\" [class]=\"sizeInput\" *ngIf=\"this.getValue()\">\r\n  <mat-date-range-input [rangePicker]=\"picker\">\r\n    <input\r\n      matStartDate\r\n      [formControl]=\"this.getValue()\"\r\n      [placeholder]=\"placeholderStart\"\r\n      #dateRangeStart\r\n      #tooltip=\"matTooltip\"\r\n      [matTooltip]=\"this.message\"\r\n      [matTooltipPosition]=\"this.positionTooltip\"\r\n      [matTooltipHideDelay]=\"this.hideDelay\" />\r\n    <input\r\n      matEndDate\r\n      [formControl]=\"this.getFechaFinCntr()\"\r\n      [placeholder]=\"placeholderEnd\"\r\n      (dateChange)=\"dateRangeChange(dateRangeStart, dateRangeEnd)\"\r\n      (blur)=\"validateValue()\"\r\n      #dateRangeEnd />\r\n  </mat-date-range-input>\r\n\r\n  <mat-hint *ngIf=\"hint\">{{ this.hint }} - {{ this.hint }}</mat-hint>\r\n  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n  <mat-date-range-picker #picker [disabled]=\"this.isDisabled()\"></mat-date-range-picker>\r\n\r\n  <!-- TODO este componente esta todo comentado por lo que doy por echo que esta a medias,\r\n    dejo aqui la manera en la que se estaban controlando los errores hasta ahora por si se necesitase\r\n    probar\r\n  <mat-error *ngIf=\"this.getValue()?.hasError('matStartDateInvalid')\">{{ this.labelErrorStart }}</mat-error>\r\n  <mat-error *ngIf=\"this.fechaFinCntr?.hasError('matEndDateInvalid')\">{{ this.labelErrorEnd }}</mat-error>\r\n  -->\r\n  <mat-error arq-form-control-error [labelControl]=\"this.label\" [formControlSibling]=\"this.getValue()\"></mat-error>\r\n</mat-form-field>\r\n<p *ngIf=\"this.visibleRange && this.getValue()\">\r\n  {{ this.rangeLabel }}: {{ this.getValue().value | date : 'dd/MM/yyyy' }} -\r\n  {{ this.fechaFinCntr.value | date : 'dd/MM/yyyy' }}\r\n</p>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatMomentDateModule, MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MatNativeDateModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { ArqDatepickerRangeComponent } from './arq-datepicker-range.component';\r\nimport { ArqFormControlErrorModule } from '../components';\r\n\r\n@NgModule({\r\n  declarations: [ArqDatepickerRangeComponent],\r\n  exports: [ArqDatepickerRangeComponent],\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    MatDatepickerModule,\r\n    MatInputModule,\r\n    MatTooltipModule,\r\n    MatNativeDateModule,\r\n    MatMomentDateModule,\r\n    ArqFormControlErrorModule\r\n  ],\r\n  providers: [{ provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] }]\r\n})\r\nexport class ArqDatepickerRangeModule {}\r\n","import { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatMomentDateModule, MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MatNativeDateModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\nimport { ArqDatepickerComponent, dateProviders } from './arq-datepicker.component';\r\nimport { ArqFormControlErrorModule } from '../components';\r\n\r\n@NgModule({\r\n  declarations: [ArqDatepickerComponent],\r\n  exports: [ArqDatepickerComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    MatTooltipModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatMomentDateModule,\r\n    ArqFormControlErrorModule\r\n  ],\r\n  providers: [DatePipe, dateProviders, { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] }]\r\n})\r\nexport class ArqDatepickerModule {}\r\n","import { DatePipe } from '@angular/common';\r\nimport { Component, Input, OnChanges, OnInit, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\r\nimport { MTX_DATETIME_FORMATS } from '@ng-matero/extensions/core';\r\nimport { MtxCalendarView, MtxDatetimepickerMode, MtxDatetimepickerType } from '@ng-matero/extensions/datetimepicker';\r\nimport { isMoment } from 'moment';\r\n\r\nimport { ArqGenericInputComponent } from '../../../core/arq-generic-input/arq-generic-input.component';\r\n\r\nexport const MY_FORMATS_TIME = {\r\n  parse: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthInput: 'MMMM',\r\n    yearInput: 'YYYY',\r\n    timeInput: 'HH:mm',\r\n    datetimeInput: 'DD/MM/YYYY HH:mm'\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'MMMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n    monthInput: 'MMMM',\r\n    yearInput: 'YYYY',\r\n    timeInput: 'HH:mm',\r\n    datetimeInput: 'DD/MM/YYYY HH:mm',\r\n    popupHeaderDateLabel: 'MMM DD, ddd'\r\n  }\r\n};\r\n\r\nexport const dateTimeProviders = [\r\n  { provide: MTX_DATETIME_FORMATS, useValue: MY_FORMATS_TIME },\r\n  { provide: MAT_MOMENT_DATE_ADAPTER_OPTIONS, useValue: { strict: true } },\r\n  { provide: MAT_MOMENT_DATE_ADAPTER_OPTIONS, useValue: { useUtc: false } }\r\n];\r\n\r\n@Component({\r\n  selector: 'arq-datetimepicker',\r\n  templateUrl: './arq-datetimepicker.component.html',\r\n  styleUrls: ['./arq-datetimepicker.component.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [dateTimeProviders, DatePipe]\r\n})\r\nexport class ArqDateTimepickerComponent extends ArqGenericInputComponent implements OnInit {\r\n  @Input() public withHours: boolean = false;\r\n  @Input() public hint!: string;\r\n\r\n  @Input() public disabled: undefined | string | boolean;\r\n\r\n  public type: MtxDatetimepickerType = 'datetime';\r\n  public mode: MtxDatetimepickerMode = 'portrait';\r\n  public multiYearSelector: boolean = false;\r\n  public startView: MtxCalendarView = 'month';\r\n  public twelvehour: boolean = false;\r\n  public timeInterval: any = 1;\r\n  public touchUi: boolean = false;\r\n  public timeInput: boolean = true;\r\n\r\n  public constructor(public datePipe: DatePipe) {\r\n    super();\r\n  }\r\n\r\n  public override ngOnInit(): void {\r\n    this.validateDate();\r\n    let formControl: FormControl = this.getValue();\r\n    formControl.valueChanges.subscribe((value: any) => {\r\n      if (value && isMoment(value)) {\r\n        // Por defecto, usa la fecha seleccionada como UTC y le suma +1/+2 al convertir a date.\r\n        // De esta manera forzamos que la fecha seleccionada sea realmente la local.\r\n        //\r\n        // No devuelve bien las fechas configurando MAT_DATE_LOCALE, ni estableciendo el locale\r\n        // de moment, ni DateAdapter en constructor.\r\n        formControl.setValue(\r\n          new Date(\r\n            value.year(),\r\n            value.month(),\r\n            value.date(),\r\n            value.hour(),\r\n            value.minute(),\r\n            value.second(),\r\n            value.millisecond()\r\n          ),\r\n          { emitEvent: false }\r\n        );\r\n        this.ngChanges();\r\n      }\r\n    });\r\n\r\n    // Disable funcionality\r\n    if (typeof this.disabled === 'string') this.fGroup.controls[this.value].disable();\r\n    else if (typeof this.disabled === 'boolean' && this.disabled) this.fGroup.controls[this.value].disable();\r\n  }\r\n\r\n  public ngSetValue(evt: any): void {\r\n    this.setValue(evt);\r\n    this.ngChanges();\r\n  }\r\n\r\n  public isDisabled(): boolean {\r\n    if (this.fGroup) {\r\n      return this.fGroup.controls[this.value].disabled;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public comprobarEntradas(): void {}\r\n}\r\n","<label *ngIf=\"this.label\"\r\n  >{{ this.label }}\r\n  <span *ngIf=\"this.getValidations()\" class=\"text-danger\"> * </span>\r\n</label>\r\n<mat-form-field appearance=\"outline\" *ngIf=\"this.getValue()\" [class]=\"sizeInput\" class=\"type-date pb-0\">\r\n  <mtx-datetimepicker\r\n    #datetimePicker\r\n    [type]=\"type\"\r\n    [mode]=\"mode\"\r\n    [multiYearSelector]=\"multiYearSelector\"\r\n    [startView]=\"startView\"\r\n    [twelvehour]=\"twelvehour\"\r\n    [timeInterval]=\"timeInterval\"\r\n    [touchUi]=\"touchUi\"\r\n    [timeInput]=\"timeInput\"\r\n    [disabled]=\"this.isDisabled()\"\r\n    (blur)=\"validateValue()\">\r\n  </mtx-datetimepicker>\r\n  <mat-error arq-form-control-error [labelControl]=\"this.label\" [formControlSibling]=\"this.getValue()\"></mat-error>\r\n  <mat-hint *ngIf=\"hint\">{{ this.hint }}</mat-hint>\r\n  <input [mtxDatetimepicker]=\"datetimePicker\" matInput [formControl]=\"this.getValue()\" />\r\n  <mtx-datetimepicker-toggle [for]=\"datetimePicker\" matSuffix></mtx-datetimepicker-toggle>\r\n</mat-form-field>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MtxMomentDatetimeModule } from '@ng-matero/extensions-moment-adapter';\r\nimport { MtxDatetimepickerModule } from '@ng-matero/extensions/datetimepicker';\r\nimport { ArqDateTimepickerComponent } from './arq-datetimepicker.component';\r\nimport { ArqFormControlErrorModule } from '../components';\r\nimport { DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\n\r\n@NgModule({\r\n  declarations: [ArqDateTimepickerComponent],\r\n  exports: [ArqDateTimepickerComponent],\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    MatDatepickerModule,\r\n    MatInputModule,\r\n    MatTooltipModule,\r\n    MtxMomentDatetimeModule,\r\n    MtxDatetimepickerModule,\r\n    ArqFormControlErrorModule\r\n  ],\r\n  providers: [{ provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] }]\r\n})\r\nexport class ArqDateTimepickerModule {}\r\n","import { ChangeDetectionStrategy, Component, HostListener, Inject, Optional, ViewEncapsulation } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'arq-dialog',\r\n  templateUrl: './arq-dialog.component.html',\r\n  styleUrls: ['./arq-dialog.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqDialogComponent {\r\n  public constructor(\r\n    @Optional()\r\n    @Inject(MAT_DIALOG_DATA)\r\n    public data: {\r\n      cancelBtn: boolean;\r\n      confirmBtn: boolean;\r\n      message: string;\r\n      title: string;\r\n      type: string;\r\n      icon: string;\r\n      color: string;\r\n      textConfirm: string;\r\n      textCancel: string;\r\n      content?: any;\r\n    },\r\n    @Optional() private mdDialogRef: MatDialogRef<ArqDialogComponent>\r\n  ) {}\r\n\r\n  public cancel(): void {\r\n    this.close(false);\r\n  }\r\n\r\n  public close(value: boolean): void {\r\n    this.mdDialogRef.close(value);\r\n  }\r\n\r\n  public confirm(): void {\r\n    this.close(true);\r\n  }\r\n\r\n  @HostListener('keydown.esc')\r\n  public onEsc(): void {\r\n    this.close(false);\r\n  }\r\n}\r\n","<div class=\"custom-class-dialog p-3\" *ngIf=\"data\">\r\n  <div class=\"d-flex justify-content-center align-items-center mb-2\">\r\n    <div class=\"col-2 px-0\" *ngIf=\"data?.icon\">\r\n      <mat-icon [class]=\"data.color\" class=\"icon-dialog\">{{ data.icon }}</mat-icon>\r\n    </div>\r\n    <div *ngIf=\"data?.icon\" class=\"col-10\" [ngClass]=\"{ 'px-0': data.icon.length > 0 }\">\r\n      <h2 class=\"mb-1\">{{ data.title }}</h2>\r\n      <p class=\"dialog-message mb-0\">{{ data.message }}</p>\r\n    </div>\r\n  </div>\r\n\r\n  <div align=\"end\">\r\n    <button mat-button *ngIf=\"data?.cancelBtn\" class=\"btn btn-cancel\" style=\"margin-right: 10px\" (click)=\"cancel()\">\r\n      {{ data.textCancel }}\r\n    </button>\r\n    <button mat-raised-button *ngIf=\"data?.confirmBtn\" color=\"primary\" class=\"btn\" (click)=\"confirm()\" cdkFocusInitial>\r\n      {{ data.textConfirm }}\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig, MatDialogRef, MatDialogState } from '@angular/material/dialog';\r\nimport { Observable } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\n\r\nimport { TranslocoService } from '@ngneat/transloco';\r\n\r\nimport { ArqDialogComponent } from '../components/arq-dialog/arq-dialog.component';\r\nimport { ArqPromptDialogComponent } from '../components/arq-dialog/dialogs/arq-dialog-prompt.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ArqDialogService {\r\n  public constructor(private dialog: MatDialog, private transloco: TranslocoService) {}\r\n  public dialogRef: MatDialogRef<ArqDialogComponent>[] = [];\r\n\r\n  /**\r\n   * Crea y muestra el dialog\r\n   * @param data\r\n   * @param component\r\n   * @param width\r\n   * @returns Devuelve el observable que retorna dialogRef\r\n   */\r\n  public open(data: any, component: any = null, opciones?: MatDialogConfig): Observable<any> {\r\n    if (!component) component = ArqDialogComponent;\r\n\r\n    this.popClosedDialogs();\r\n\r\n    this.dialogRef.push(\r\n      this.dialog.open(component, {\r\n        autoFocus: false,\r\n        data: data,\r\n        panelClass: 'custom-class-dialog',\r\n        disableClose: true,\r\n        ...opciones\r\n      })\r\n    );\r\n    return this.dialogRef[this.dialogRef.length - 1].afterClosed().pipe(take(1));\r\n  }\r\n\r\n  /**\r\n   * Cierra y elimina el ultimo dialog, dando por confirmado y mandando los datos\r\n   * @param data\r\n   */\r\n  public confirmed(data: any): void {\r\n    this.popClosedDialogs();\r\n    this.dialogRef[this.dialogRef.length - 1].close(data);\r\n    this.dialogRef.pop();\r\n  }\r\n\r\n  /**\r\n   * Cierra y elimina el ultimo dialog\r\n   */\r\n  public close(): void {\r\n    this.popClosedDialogs();\r\n    this.dialogRef[this.dialogRef.length - 1].close();\r\n    this.dialogRef.pop();\r\n  }\r\n\r\n  /**\r\n   * Elimina los dialogs cerrados del array\r\n   */\r\n  public popClosedDialogs(): void {\r\n    this.dialogRef.forEach((dialog, index) => {\r\n      if (dialog.getState() !== MatDialogState.OPEN) {\r\n        this.dialogRef.splice(index, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  /********************/\r\n  // FEATURED DIALOGS //\r\n  /********************/\r\n\r\n  /**\r\n   * Crea y muestra un modal de exito sencillo\r\n   * @param _message Mensaje\r\n   * @param _title Titulo\r\n   * @returns Devuelve el observable que retorna dialogRef\r\n   */\r\n  public openSuccess(_message: string, _title?: string): Observable<any> {\r\n    return this.open({\r\n      confirmBtn: true,\r\n      message: _message,\r\n      title: _title || this.transloco.translate('GENERIC.SUCCESS'),\r\n      type: 'success',\r\n      icon: 'done',\r\n      color: 'text-success',\r\n      textConfirm: this.transloco.translate('GENERIC.CONTINUE')\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Crea y muestra un modal de alerta sencillo\r\n   * @param _message Mensaje\r\n   * @param _title Titulo\r\n   * @returns Devuelve el observable que retorna dialogRef\r\n   */\r\n  public openAlert(_message: string, _title?: string): Observable<any> {\r\n    return this.open({\r\n      confirmBtn: true,\r\n      message: _message,\r\n      title: _title || this.transloco.translate('GENERIC.ALERT'),\r\n      type: 'alert',\r\n      icon: 'warning',\r\n      color: 'text-warning',\r\n      textConfirm: this.transloco.translate('GENERIC.CONTINUE')\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Crea y muestra un modal de alerta sencillo\r\n   * @param _message Mensaje\r\n   * @param _title Titulo\r\n   * @returns Devuelve el observable que retorna dialogRef\r\n   */\r\n  public openError(_message: string, _title?: string): Observable<any> {\r\n    return this.open({\r\n      confirmBtn: true,\r\n      message: _message,\r\n      title: _title || this.transloco.translate('GENERIC.ERROR'),\r\n      type: 'error',\r\n      icon: 'error',\r\n      color: 'text-danger',\r\n      textConfirm: this.transloco.translate('GENERIC.CONTINUE')\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Crea y muestra un modal de confirmacion sencillo\r\n   * @param _message Mensaje\r\n   * @param _title Titulo\r\n   * @returns Devuelve el observable que retorna dialogRef\r\n   */\r\n  public openConfirm(_message: string, _title?: string): Observable<any> {\r\n    return this.open({\r\n      cancelBtn: true,\r\n      confirmBtn: true,\r\n      message: _message,\r\n      title: _title || this.transloco.translate('GENERIC.ATTENTION'),\r\n      type: 'alert',\r\n      icon: 'help',\r\n      color: 'text-warning',\r\n      textConfirm: this.transloco.translate('GENERIC.ACCEPT'),\r\n      textCancel: this.transloco.translate('GENERIC.CANCEL')\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Crea y muestra un modal de prompt sencillo\r\n   * @param _message Mensaje\r\n   * @param _title Titulo\r\n   * @returns Devuelve el observable que retorna dialogRef\r\n   */\r\n  public openPrompt(_message: string, _title?: string): Observable<any> {\r\n    return this.open({ message: _message, title: _title || '' }, ArqPromptDialogComponent);\r\n  }\r\n}\r\n","import { ArqDialogService } from './../../../services/arq-dialog.service';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'arq-dt-prompt-dialog',\r\n  template: `\r\n    <div class=\"p-3\">\r\n      <h1 mat-dialog-title>{{ data.title }}</h1>\r\n\r\n      <div mat-dialog-content>\r\n        <p>{{ data.message }}</p>\r\n        <mat-form-field>\r\n          <input matInput [(ngModel)]=\"fValue\" />\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div mat-dialog-actions align=\"end\">\r\n        <arq-button (click)=\"cancelDialog()\" [label]=\"'GENERIC.CANCEL' | transloco\"></arq-button>\r\n        <arq-button (click)=\"closeDialog()\" color=\"primary\" [label]=\"'GENERIC.CONTINUE' | transloco\"></arq-button>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class ArqPromptDialogComponent {\r\n  public fValue!: string;\r\n\r\n  public constructor(@Inject(MAT_DIALOG_DATA) public data: any, private dialogService: ArqDialogService) {}\r\n\r\n  public cancelDialog(): void {\r\n    this.dialogService.close();\r\n  }\r\n\r\n  public closeDialog(): void {\r\n    this.dialogService.confirmed(this.fValue);\r\n  }\r\n}\r\n","import { Injectable, isDevMode, NgModule } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {\r\n  Translation,\r\n  translocoConfig,\r\n  TranslocoLoader,\r\n  TranslocoModule,\r\n  TRANSLOCO_CONFIG,\r\n  TRANSLOCO_LOADER\r\n} from '@ngneat/transloco';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TranslocoHttpLoader implements TranslocoLoader {\r\n  // TODO: cambiar a ArqHttpClient\r\n  public constructor(private http: HttpClient) {}\r\n\r\n  public getTranslation(lang: string): any {\r\n    return this.http.get<Translation>(`./assets/i18n/${lang}.json`);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  exports: [TranslocoModule],\r\n  providers: [\r\n    {\r\n      provide: TRANSLOCO_CONFIG,\r\n      useValue: translocoConfig({\r\n        availableLangs: ['es', 'ca'],\r\n        defaultLang: 'es',\r\n        fallbackLang: 'es',\r\n        // Remove this option if your application doesn't support changing language in runtime.\r\n        reRenderOnLangChange: true,\r\n        prodMode: !isDevMode()\r\n      })\r\n    },\r\n    { provide: TRANSLOCO_LOADER, useClass: TranslocoHttpLoader }\r\n  ]\r\n})\r\nexport class TranslocoRootModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { TranslocoModule } from '@ngneat/transloco';\r\nimport { TranslocoRootModule } from '../../../core/transloco-root.module';\r\n\r\nimport { ArqButtonModule } from '../components';\r\n\r\nimport { ArqDialogComponent } from './arq-dialog.component';\r\nimport { ArqPromptDialogComponent } from './dialogs/arq-dialog-prompt.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n\r\n    MatInputModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n\r\n    ArqButtonModule,\r\n\r\n    TranslocoModule,\r\n    TranslocoRootModule\r\n  ],\r\n  declarations: [ArqDialogComponent, ArqPromptDialogComponent],\r\n  exports: [ArqDialogComponent, ArqPromptDialogComponent],\r\n  entryComponents: [ArqDialogComponent]\r\n})\r\nexport class ArqDialogModule {}\r\n","import { Component, ElementRef, Input, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { MatExpansionPanel } from '@angular/material/expansion';\r\n\r\n@Component({\r\n  selector: 'arq-expansion-panel',\r\n  templateUrl: './arq-expansion-panel.component.html',\r\n  styleUrls: ['./arq-expansion-panel.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqExpansionPanelComponent {\r\n  public panelOpenState = false;\r\n  /**\r\n   * Title of the panel.\r\n   */\r\n  @Input()\r\n  title!: string;\r\n\r\n  /**\r\n   * description of the panel.\r\n   */\r\n  @Input()\r\n  description!: string;\r\n\r\n  /**\r\n   * Contenido que mostrar.\r\n   */\r\n  @Input()\r\n  content?: string;\r\n\r\n  @Input() expanded: boolean = this.panelOpenState;\r\n}\r\n","<!-- Dinamicos para que cargue en una lista -->\r\n<div class=\"item-accordion\">\r\n  <mat-accordion>\r\n    <mat-expansion-panel #panel [expanded]=\"expanded\" hideToggle>\r\n      <mat-expansion-panel-header class=\"panel-background-header\">\r\n        <mat-panel-title>{{ this.title }}</mat-panel-title>\r\n        <mat-panel-description\r\n          *ngIf=\"this.description\"\r\n        >\r\n          {{ this.description }}\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <ng-content class=\"panel-body\"></ng-content>\r\n    </mat-expansion-panel>\r\n  </mat-accordion>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { ArqExpansionPanelComponent } from './arq-expansion-panel.component';\r\n\r\n@NgModule({\r\n  declarations: [ArqExpansionPanelComponent],\r\n  exports: [ArqExpansionPanelComponent],\r\n  imports: [CommonModule, MatExpansionModule]\r\n})\r\nexport class ArqExpansionPanelModule {}\r\n","import { formatNumber } from '@angular/common';\r\nimport { Directive, ElementRef, EventEmitter, forwardRef, HostListener, Input, Output } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\r\n\r\n@Directive({\r\n  selector: 'input[localizedNumericInput]',\r\n  providers: [\r\n    {\r\n      provide: MAT_INPUT_VALUE_ACCESSOR,\r\n      useExisting: LocalizedNumericInputDirective\r\n    },\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => LocalizedNumericInputDirective),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class LocalizedNumericInputDirective implements ControlValueAccessor {\r\n  locale = 'es';\r\n  decimalMarker!: string;\r\n\r\n  constructor(private element: ElementRef<HTMLInputElement>) {}\r\n\r\n  private _value!: string | null;\r\n\r\n  get value(): string | null {\r\n    return this._value;\r\n  }\r\n\r\n  @Input('value')\r\n  set value(value: string | null) {\r\n    this._value = value;\r\n    this.formatValue(value);\r\n  }\r\n\r\n  @Input('localizedNumericInput') set valor(valor: string) {\r\n    if (!valor) {\r\n      valor = '0';\r\n    }\r\n\r\n    this.formatValue(valor.toString());\r\n  }\r\n  @Output('localizedNumericInputChange') valorChange = new EventEmitter<string>();\r\n\r\n  @Input('objeto') objeto: any;\r\n  @Input('propiedad')\r\n  propiedad!: string;\r\n\r\n  @HostListener('input', ['$event.target.value'])\r\n  input(value: any) {\r\n    const re = /^[0-9]+([.])?([0-9]+)?$/;\r\n    const test = re.test(value);\r\n\r\n    if (test) {\r\n      value = value.replace('.', ',');\r\n    }\r\n\r\n    //Find all numerics, decimal marker(, or .) and -\r\n    //It will delete thousandSeparator cos it's always opposite to decimal marker\r\n    const regExp = new RegExp(`[^\\\\d${this.decimalMarker}-]`, 'g');\r\n    //Separate value on before and after decimal marker\r\n    let [integer, decimal] = value.replace(regExp, '').split(this.decimalMarker);\r\n\r\n    if (!integer) {\r\n      integer = '0';\r\n    }\r\n    if (!decimal) {\r\n      decimal = '00';\r\n    }\r\n\r\n    //Send non localized value, with dot as decimalMarker to API\r\n    this._value = decimal ? integer.concat(',', decimal) : integer;\r\n\r\n    // If decimal separator is last character don't update\r\n    // because it will delete . || ,\r\n    if (this.isLastCharacterDecimalSeparator(value)) {\r\n      this._value = value;\r\n    }\r\n\r\n    // here to notify Angular Validators\r\n    this._onChange(this._value);\r\n  }\r\n\r\n  @HostListener('blur')\r\n  _onBlur() {\r\n    /**\r\n     * Adding thousand separators\r\n     */\r\n    this.formatValue(this._value);\r\n\r\n    this.valorChange.emit(this._value ? this._value : '');\r\n  }\r\n\r\n  @HostListener('focus')\r\n  onFocus() {\r\n    this.unFormatValue();\r\n  }\r\n\r\n  _onChange(value: any): void {}\r\n\r\n  /**\r\n   * @param value\r\n   * apply formatting on value assignment\r\n   */\r\n  writeValue(value: any) {\r\n    if (typeof value == 'number') {\r\n      value = value.toString();\r\n      if (value) {\r\n        value = value.replace('.', ',');\r\n      }\r\n    }\r\n    this._value = value;\r\n    this.formatValue(this._value);\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => void) {\r\n    this._onChange = fn;\r\n  }\r\n\r\n  registerOnTouched() {}\r\n\r\n  isLastCharacterDecimalSeparator(value: any) {\r\n    return isNaN(value[value.length - 1]);\r\n  }\r\n\r\n  private formatValue(value: string | null) {\r\n    if (value === null) {\r\n      this.element.nativeElement.value = '';\r\n      return;\r\n    }\r\n\r\n    // if (this.isLastCharacterDecimalSeparator(value.toString())) {\r\n    //   this.element.nativeElement.value = value;\r\n    //   return;\r\n    // }\r\n\r\n    // Conclude the decimal and thousand separators from locale\r\n    const [thousandSeparator, decimalMarker] = formatNumber(1000.99, this.locale).replace(/\\d/g, '');\r\n    this.decimalMarker = decimalMarker;\r\n\r\n    //Here value should always come with . as decimal marker thus any other behavior is bug\r\n    let [integer, decimal] = value.toString().split(',');\r\n    // console.log(decimal);\r\n    integer = integer ? integer.toString().replace(/[^0-9.]/g, '') : '';\r\n    decimal = decimal ? decimal.toString().replace(/[^0-9.]/g, '') : '';\r\n    // console.log(decimal);\r\n    if (!integer) {\r\n      integer = '0';\r\n    }\r\n    if (!decimal) {\r\n      decimal = '00';\r\n    }\r\n    // console.log(decimal);\r\n    if (!isNaN(Number(decimal))) {\r\n      let numero: number;\r\n      numero = Math.round(Number('0.' + decimal) * 100) / 100;\r\n      if (numero == 0) {\r\n        decimal = '0.00';\r\n      } else if (numero == 1) {\r\n        decimal = '0.00';\r\n        integer = (!isNaN(Number(integer)) ? Number(integer) + 1 : 0).toLocaleString();\r\n      } else {\r\n        decimal = numero.toLocaleString();\r\n      }\r\n      decimal = decimal.substring(2, decimal.length);\r\n    }\r\n\r\n    //Group every three elements, and add thousandSeparator after them\r\n    this.element.nativeElement.value = integer.replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousandSeparator);\r\n\r\n    //Add decimals and decimalMarker if any\r\n    if (decimal) {\r\n      this.element.nativeElement.value = this.element.nativeElement.value.concat(decimalMarker, decimal);\r\n    }\r\n\r\n    this._value = this.element.nativeElement.value;\r\n  }\r\n\r\n  private unFormatValue() {\r\n    const value = this.element.nativeElement.value;\r\n\r\n    if (this.isLastCharacterDecimalSeparator(value)) {\r\n      return;\r\n    }\r\n\r\n    const regExp = new RegExp(`[^\\\\d${this.decimalMarker}-]`, 'g');\r\n    let [integer, decimal] = value.replace(regExp, '').split(this.decimalMarker);\r\n\r\n    if (!integer) {\r\n      integer = '0';\r\n    }\r\n    if (!decimal) {\r\n      decimal = '00';\r\n    }\r\n\r\n    this._value = integer.concat(',', decimal);\r\n    if (value) {\r\n      this.element.nativeElement.value = this._value;\r\n    } else {\r\n      this.element.nativeElement.value = '';\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { ArqGenericInputComponent } from '../../../core/arq-generic-input/arq-generic-input.component';\r\n\r\n@Component({\r\n  selector: 'arq-input-money',\r\n  templateUrl: './arq-input-money.component.html',\r\n  styleUrls: ['./arq-input-money.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqInputMoneyComponent extends ArqGenericInputComponent implements OnInit {\r\n  @Input()\r\n  public maxLength = 100;\r\n\r\n  @Input()\r\n  public append!: string;\r\n\r\n  public valor!: string;\r\n\r\n  public constructor() {\r\n    super();\r\n  }\r\n\r\n  comprobarEntradas(): void {}\r\n}\r\n","<label *ngIf=\"this.label\"\r\n  >{{ this.label }}\r\n  <span *ngIf=\"this.getValidations()\" class=\"text-danger\"> * </span>\r\n</label>\r\n<mat-form-field\r\n  appearance=\"outline\"\r\n  class=\"input-money\"\r\n  [class]=\"sizeInput\"\r\n  [ngClass]=\"{ inputReadOnly: this.readonly }\"\r\n  *ngIf=\"this.getValue()\">\r\n  <span *ngIf=\"!iconPrefix\" matPrefix>{{ prefix }}</span>\r\n  <mat-icon *ngIf=\"iconPrefix\" matPrefix>{{ prefix }}</mat-icon>\r\n  <input\r\n    type=\"text\"\r\n    matInput\r\n    [(localizedNumericInput)]=\"this.valor\"\r\n    [placeholder]=\"this.placeholder\"\r\n    [readonly]=\"this.readonly\"\r\n    [formControl]=\"this.getValue()\"\r\n    #tooltip=\"matTooltip\"\r\n    [matTooltip]=\"this.message\"\r\n    [matTooltipPosition]=\"this.positionTooltip\"\r\n    [matTooltipHideDelay]=\"this.hideDelay\"\r\n    (change)=\"this.ngChanges()\"\r\n    (focusOut)=\"this.onFocusOutEvent($event)\" />\r\n  <mat-error arq-form-control-error [labelControl]=\"this.label\" [formControlSibling]=\"this.getValue()\"></mat-error>\r\n\r\n  <mat-icon *ngIf=\"iconSuffix\" matSuffix>euro_symbol</mat-icon>\r\n\r\n  <span *ngIf=\"!iconSuffix\" matSuffix>{{ suffix }}</span>\r\n  <mat-icon *ngIf=\"iconSuffix\" matSuffix>{{ suffix }}</mat-icon>\r\n</mat-form-field>\r\n","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  exports: [MatTooltipModule, ReactiveFormsModule],\r\n  imports: [MatTooltipModule, ReactiveFormsModule]\r\n})\r\nexport class ArqGenericInputModule {}\r\n","import { CommonModule, DecimalPipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\nimport { ArqGenericInputModule } from '../../../core/arq-generic-input/arq-generic-input.module';\r\nimport { LocalizedNumericInputDirective } from './directives/LocalizedNumericInputDirective';\r\n\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ArqInputMoneyComponent } from './arq-input-money.component';\r\nimport { ArqFormControlErrorModule } from '../components';\r\n\r\n@NgModule({\r\n  declarations: [ArqInputMoneyComponent, LocalizedNumericInputDirective],\r\n  exports: [ArqInputMoneyComponent, LocalizedNumericInputDirective],\r\n  imports: [\r\n    CommonModule,\r\n    ArqGenericInputModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    ArqFormControlErrorModule,\r\n  ],\r\n  providers: [DecimalPipe]\r\n})\r\nexport class ArqInputMoneyModule {}\r\n","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { ArqGenericInputComponent } from '../../../core/arq-generic-input/arq-generic-input.component';\r\n\r\n@Component({\r\n  selector: 'arq-input-number',\r\n  templateUrl: './arq-input-number.component.html',\r\n  styleUrls: ['./arq-input-number.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqInputNumberComponent extends ArqGenericInputComponent implements OnInit {\r\n  @Input()\r\n  public maxLength = 100;\r\n\r\n  @Input()\r\n  public append!: string;\r\n\r\n  public constructor() {\r\n    super();\r\n  }\r\n\r\n  comprobarEntradas(): void {}\r\n}\r\n","<label *ngIf=\"this.label\"\r\n  >{{ this.label }}\r\n  <span *ngIf=\"this.getValidations()\" class=\"text-danger\"> * </span>\r\n</label>\r\n<mat-form-field\r\n  appearance=\"outline\"\r\n  class=\"input-number\"\r\n  [class]=\"sizeInput\"\r\n  [ngClass]=\"{ inputReadOnly: this.readonly }\"\r\n  *ngIf=\"this.getValue()\">\r\n  <span *ngIf=\"!iconPrefix\" matPrefix>{{ prefix }}</span>\r\n  <mat-icon *ngIf=\"iconPrefix\" matPrefix>{{ prefix }}</mat-icon>\r\n  <input\r\n    matInput\r\n    type=\"number\"\r\n    [placeholder]=\"this.placeholder\"\r\n    [readonly]=\"this.readonly\"\r\n    [formControl]=\"this.getValue()\"\r\n    #tooltip=\"matTooltip\"\r\n    [matTooltip]=\"this.message\"\r\n    [matTooltipPosition]=\"this.positionTooltip\"\r\n    [matTooltipHideDelay]=\"this.hideDelay\"\r\n    (change)=\"this.ngChanges()\"\r\n    (focusOut)=\"this.onFocusOutEvent($event)\" />\r\n  <mat-error arq-form-control-error [labelControl]=\"this.label\" [formControlSibling]=\"this.getValue()\"></mat-error>\r\n  <span *ngIf=\"!iconSuffix\" matSuffix>{{ suffix }}</span>\r\n  <mat-icon *ngIf=\"iconSuffix\" matSuffix>{{ suffix }}</mat-icon>\r\n</mat-form-field>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\nimport { ArqGenericInputModule } from '../../../core/arq-generic-input/arq-generic-input.module';\r\n\r\nimport { ArqInputNumberComponent } from './arq-input-number.component';\r\nimport { ArqFormControlErrorModule } from '../components';\r\n\r\n@NgModule({\r\n  declarations: [ArqInputNumberComponent],\r\n  exports: [ArqInputNumberComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ArqGenericInputModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    ArqFormControlErrorModule,\r\n  ]\r\n})\r\nexport class ArqInputNumberModule {}\r\n","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ArqGenericInputComponent } from '../../../core/arq-generic-input/arq-generic-input.component';\r\nimport { checkRequiredFields } from '../../../core/utils/basic.util';\r\nimport { ArqList } from '../../interfaces/arq-list.interface';\r\n\r\n@Component({\r\n  selector: 'arq-radio-button',\r\n  templateUrl: './arq-radio-button.component.html',\r\n  styleUrls: ['./arq-radio-button.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqRadioButtonComponent extends ArqGenericInputComponent implements OnInit {\r\n  //Add properties for the RadioGroup\r\n  @Input()\r\n  color: ThemePalette;\r\n\r\n  @Input()\r\n  disabled: boolean = true;\r\n\r\n  @Input()\r\n  labelPosition: 'before' | 'after' = 'before';\r\n\r\n  @Input()\r\n  name: string = 'radio-group-example';\r\n\r\n  @Input()\r\n  checked: boolean = false;\r\n\r\n  @Input()\r\n  colorRadio: ThemePalette;\r\n\r\n  @Input()\r\n  disabledRadio: boolean = false;\r\n\r\n  @Input()\r\n  id!: string;\r\n\r\n  @Input()\r\n  class?: string;\r\n\r\n  @Input()\r\n  radioOptionsList?: Observable<ArqList[]>;\r\n\r\n  @Input()\r\n  selectedValue?: string;\r\n\r\n  @Input()\r\n  direction: string = 'column';\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  override ngOnInit(): void {\r\n    checkRequiredFields(this.radioOptionsList, 'radioOptionsList');\r\n    checkRequiredFields(this.label, 'label');\r\n  }\r\n\r\n  protected comprobarEntradas() {}\r\n}\r\n","<div [ngClass]=\"{ 'd-flex': direction == 'row' }\">\r\n  <div class=\"d-flex align-items-center\">\r\n    <label [ngClass]=\"{ 'mb-0': direction == 'row' }\" *ngIf=\"this.label\">{{ this.label }}</label>\r\n    <p [ngClass]=\"{ 'mb-0': direction == 'row' }\" *ngIf=\"this.label\"></p>\r\n  </div>\r\n\r\n  <ng-container *ngIf=\"this.getValue()\">\r\n    <mat-radio-group class=\"{{ this.class }}\" [formControl]=\"this.getValue()\">\r\n      <mat-radio-button\r\n        class=\"radio-button-arq\"\r\n        *ngFor=\"let radio of radioOptionsList | async\"\r\n        [value]=\"radio.value\"\r\n        [checked]=\"radio.value == this.selectedValue\">\r\n        {{ radio.description }}\r\n      </mat-radio-button>\r\n    </mat-radio-group>\r\n    <mat-error arq-form-control-error [labelControl]=\"this.label\" [formControlSibling]=\"this.getValue()\"></mat-error>\r\n  </ng-container>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatRadioModule, MAT_RADIO_DEFAULT_OPTIONS } from '@angular/material/radio';\r\n\r\nimport { ArqRadioButtonComponent } from './arq-radio-button.component';\r\nimport { ArqFormControlErrorModule } from '../components';\r\n\r\n@NgModule({\r\n  declarations: [ArqRadioButtonComponent],\r\n  exports: [ArqRadioButtonComponent],\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    MatRadioModule,\r\n    ArqFormControlErrorModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: MAT_RADIO_DEFAULT_OPTIONS,\r\n      useValue: { color: 'primary' }\r\n    }\r\n  ]\r\n})\r\nexport class ArqRadioButtonModule {}\r\n","import { Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { ArqGenericInputComponent } from '../../../core/arq-generic-input/arq-generic-input.component';\r\nimport { checkRequiredListFields } from '../../../core/utils/basic.util';\r\nimport { ArqList } from '../../interfaces/arq-list.interface';\r\n\r\n@Component({\r\n  selector: 'arq-select-multiple',\r\n  templateUrl: './arq-select-multiple.component.html',\r\n  styleUrls: ['./arq-select-multiple.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqSelectMultipleComponent extends ArqGenericInputComponent implements OnInit {\r\n  @Input()\r\n  disabled: boolean = false;\r\n\r\n  @Input()\r\n  public selectedValue?: any;\r\n\r\n  @Input()\r\n  selectOptionsList!: Observable<ArqList[]> | any;\r\n\r\n  @Output()\r\n  selectionChange = new EventEmitter();\r\n\r\n  @Input()\r\n  hint: string = '';\r\n\r\n  optionsList: any[] = [];\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  override ngOnInit(): void {\r\n    checkRequiredListFields([this.selectOptionsList], ['selectOptionsList']);\r\n\r\n    if (Array.isArray(this.selectOptionsList)) {\r\n      this.selectOptionsList = of(this.selectOptionsList);\r\n    }\r\n\r\n    this.selectOptionsList.subscribe((data: any[]) => {\r\n      this.optionsList = data;\r\n    });\r\n\r\n    if (this.selectedValue) {\r\n      this.getValue()?.setValue(this.selectedValue);\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.selectedValue = '';\r\n  }\r\n\r\n  comprobarEntradas(): void {}\r\n}\r\n","<label *ngIf=\"this.label\"\r\n  >{{ this.label }}\r\n  <span *ngIf=\"this.getValidations()\" class=\"text-danger\"> * </span>\r\n</label>\r\n<mat-form-field appearance=\"outline\" class=\"full-width\" *ngIf=\"this.getValue()\">\r\n  <mtx-select\r\n    [formControl]=\"this.getValue()\"\r\n    [items]=\"this.optionsList\"\r\n    [bindLabel]=\"this.lang === this.LANG_ES ? 'description' : 'descriptionV'\"\r\n    bindValue=\"value\"\r\n    [multiple]=\"true\"\r\n    (change)=\"ngChanges()\">\r\n  </mtx-select>\r\n\r\n  <mat-hint>{{ this.hint }}</mat-hint>\r\n  <mat-error\r\n    arq-form-control-error\r\n    [labelControl]=\"this.label\"\r\n    [formControlSibling]=\"this.getValue()\"\r\n  ></mat-error>\r\n</mat-form-field>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MtxSelectModule } from '@ng-matero/extensions/select';\r\nimport { ArqSelectMultipleComponent } from './arq-select-multiple.component';\r\nimport { ArqFormControlErrorModule } from '../components';\r\n\r\n@NgModule({\r\n  declarations: [ArqSelectMultipleComponent],\r\n  exports: [ArqSelectMultipleComponent],\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MtxSelectModule,\r\n    ArqFormControlErrorModule,\r\n  ]\r\n})\r\nexport class ArqSelectMultipleModule {}\r\n","import { Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { ArqGenericInputComponent } from '../../../core/arq-generic-input/arq-generic-input.component';\r\nimport { checkRequiredListFields } from '../../../core/utils/basic.util';\r\nimport { ArqList } from '../../../lib/interfaces/arq-list.interface';\r\n\r\n@Component({\r\n  selector: 'arq-select',\r\n  templateUrl: './arq-select.component.html',\r\n  styleUrls: ['./arq-select.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqSelectComponent extends ArqGenericInputComponent implements OnInit {\r\n  @Input()\r\n  disabled!: boolean;\r\n\r\n  @Input()\r\n  selectOptionsList?: Observable<ArqList[]> | any;\r\n\r\n  @Input()\r\n  emptyOption?: boolean = false;\r\n\r\n  @Input()\r\n  fullObject?: boolean = true;\r\n\r\n  @Input()\r\n  public multiple?: boolean = false;\r\n\r\n  @Output()\r\n  selectionChange = new EventEmitter();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  override ngOnInit(): void {\r\n    checkRequiredListFields(\r\n      [this.selectOptionsList, this.placeholder, this.required],\r\n      ['selectOptionsList', 'placeholder', 'required']\r\n    );\r\n\r\n    if (Array.isArray(this.selectOptionsList)) {\r\n      this.selectOptionsList = of(this.selectOptionsList);\r\n    }\r\n\r\n    this.getValue().valueChanges.subscribe(value => {\r\n      if (value === undefined || value === '') {\r\n        this.setValue(null);\r\n      }\r\n      // caso select fullObject false, no multiple\r\n      if (!this.fullObject && !this.multiple && value?.value) {\r\n        this.setValue(value.value);\r\n      }\r\n      // caso select fullObject false, multiple\r\n      if (!this.fullObject && this.multiple && Array.isArray(value) && value.length > 0 && value[0].value) {\r\n        this.setValue(value.map((obj: { value: string }) => obj.value));\r\n      }\r\n    });\r\n\r\n    this.changeObjectWithArrayPropertiesToNull();\r\n\r\n    this.checkInitValue();\r\n  }\r\n\r\n  private changeObjectWithArrayPropertiesToNull() {\r\n    if (this.fullObject && Array.isArray(this.getValue().value?.value)) {\r\n      this.setValue(null);\r\n    }\r\n  }\r\n\r\n  private checkInitValue() {\r\n    if (this.fullObject) {\r\n      if (this.getValue().value && !this.getValue().value?.value) {\r\n        throw new Error(\r\n          'El valor del select debe heredar de ArqList (con propiedades value, description, descriptionV)'\r\n        );\r\n      }\r\n    } else if (this.multiple) {\r\n      if (this.getValue().value && !Array.isArray(this.getValue().value)) {\r\n        throw new Error('Al ser un select múltiple, el valor del select debe ser un array');\r\n      }\r\n    } else {\r\n      if (typeof this.getValue().value === 'object' && this.getValue().value !== null) {\r\n        throw new Error('El valor del select no acepta objetos, solo valores primitivos');\r\n      }\r\n    }\r\n  }\r\n\r\n  compareFunction(o1: any, o2: any) {\r\n    let val1 = o1?.value ? o1.value : o1;\r\n    let val2 = o2?.value ? o2.value : o2;\r\n    return val1 === val2;\r\n  }\r\n\r\n  comprobarEntradas(): void {}\r\n}\r\n","<label *ngIf=\"this.label\"\r\n  >{{ this.label }}\r\n  <span *ngIf=\"this.getValidations()\" class=\"text-danger\"> * </span>\r\n</label>\r\n<mat-form-field appearance=\"outline\" class=\"full-width\" [class]=\"sizeInput\" *ngIf=\"this.getValue()\">\r\n  <mat-select\r\n    [formControl]=\"this.getValue()\"\r\n    name=\"selected\"\r\n    #tooltip=\"matTooltip\"\r\n    [matTooltip]=\"this.message\"\r\n    [matTooltipPosition]=\"this.positionTooltip\"\r\n    [matTooltipHideDelay]=\"this.hideDelay\"\r\n    [compareWith]=\"compareFunction\"\r\n    [multiple]=\"this.multiple\"\r\n    (selectionChange)=\"ngChanges()\">\r\n    <mat-option *ngIf=\"emptyOption\"></mat-option>\r\n    <mat-option *ngFor=\"let option of selectOptionsList | async\" [value]=\"option\">\r\n      <ng-container *ngIf=\"lang === 'ca'; else elseTemplateDescription\">\r\n        <span *ngIf=\"showValue\">{{ option?.value }} - </span> {{ option?.descriptionV }}\r\n      </ng-container>\r\n      <ng-template #elseTemplateDescription>\r\n        <span *ngIf=\"showValue\">{{ option?.value }} - </span> {{ option?.description }}\r\n      </ng-template>\r\n    </mat-option>\r\n  </mat-select>\r\n  <mat-error arq-form-control-error [labelControl]=\"this.label\" [formControlSibling]=\"this.getValue()\"></mat-error>\r\n</mat-form-field>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { ArqSelectComponent } from './arq-select.component';\r\nimport { ArqFormControlErrorModule } from '../components';\r\n\r\n@NgModule({\r\n  declarations: [ArqSelectComponent],\r\n  exports: [ArqSelectComponent],\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    MatTooltipModule,\r\n    ArqFormControlErrorModule\r\n  ]\r\n})\r\nexport class ArqSelectModule {}\r\n","import { BooleanInput, NumberInput } from '@angular/cdk/coercion';\r\nimport { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ArqGenericInputComponent } from '../../../core/arq-generic-input/arq-generic-input.component';\r\n\r\n@Component({\r\n  selector: 'arq-slider-doble',\r\n  templateUrl: './arq-slider-doble.component.html',\r\n  styleUrls: ['./arq-slider-doble.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqSliderDobleComponent extends ArqGenericInputComponent implements OnInit {\r\n  @Input()\r\n  max: NumberInput;\r\n\r\n  @Input()\r\n  min: NumberInput;\r\n\r\n  @Input()\r\n  step: NumberInput;\r\n\r\n  @Input()\r\n  barraLabel: BooleanInput;\r\n\r\n  @Input()\r\n  formControlFinal!: FormControl;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  cambioValorInicio(event: Event) {\r\n    return this.fGroup?.controls[this.value].setValue((event.target as HTMLInputElement).value);\r\n  }\r\n\r\n  cambioValorFin(event: Event) {\r\n    this.formControlFinal.setValue((event.target as HTMLInputElement).value);\r\n  }\r\n\r\n  comprobarEntradas(): void {}\r\n}\r\n","<mat-slider *ngIf=\"this.getValue()\" [max]=\"max\" [min]=\"min\" [step]=\"step\" [discrete]=\"barraLabel\">\r\n  <input matSliderStartThumb [formControl]=\"this.getValue()\" (change)=\"this.cambioValorInicio($event)\" />\r\n  <input matSliderEndThumb [formControl]=\"this.formControlFinal\" (change)=\"this.cambioValorFin($event)\" />\r\n</mat-slider>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { ArqSliderDobleComponent } from './arq-slider-doble.component';\r\n\r\n@NgModule({\r\n  declarations: [ArqSliderDobleComponent],\r\n  exports: [ArqSliderDobleComponent],\r\n  imports: [ReactiveFormsModule, CommonModule, MatSliderModule]\r\n})\r\nexport class ArqSliderDobleModule {}\r\n","import { BooleanInput } from '@angular/cdk/coercion';\r\nimport { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ArqGenericInputComponent } from '../../../core/arq-generic-input/arq-generic-input.component';\r\n\r\n@Component({\r\n  selector: 'arq-slider-toggle',\r\n  templateUrl: './arq-slider-toggle.component.html',\r\n  styleUrls: ['./arq-slider-toggle.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqSliderToggleComponent extends ArqGenericInputComponent implements OnInit {\r\n  @Input()\r\n  checked: BooleanInput;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  comprobarEntradas(): void {}\r\n}\r\n","<mat-slide-toggle *ngIf=\"this.getValue()\" [formControl]=\"this.getValue()\" [checked]=\"this.getValue().value\">{{\r\n  this.label\r\n}}</mat-slide-toggle>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { ArqSliderToggleComponent } from './arq-slider-toggle.component';\r\n\r\n@NgModule({\r\n  declarations: [ArqSliderToggleComponent],\r\n  exports: [ArqSliderToggleComponent],\r\n  imports: [ReactiveFormsModule, CommonModule, MatSlideToggleModule]\r\n})\r\nexport class ArqSliderToggleModule {}\r\n","import { BooleanInput, NumberInput } from '@angular/cdk/coercion';\r\nimport { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ArqGenericInputComponent } from '../../../core/arq-generic-input/arq-generic-input.component';\r\n\r\n@Component({\r\n  selector: 'arq-slider',\r\n  templateUrl: './arq-slider.component.html',\r\n  styleUrls: ['./arq-slider.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqSliderComponent extends ArqGenericInputComponent implements OnInit {\r\n  @Input()\r\n  disabled: BooleanInput;\r\n\r\n  @Input()\r\n  max: NumberInput;\r\n\r\n  @Input()\r\n  min: NumberInput;\r\n\r\n  @Input()\r\n  step: NumberInput;\r\n\r\n  @Input()\r\n  barraLabel: BooleanInput;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  comprobarEntradas(): void {}\r\n}\r\n","<mat-slider\r\n  *ngIf=\"this.getValue()\"\r\n  [disabled]=\"this.disabled\"\r\n  [max]=\"max\"\r\n  [min]=\"min\"\r\n  [step]=\"step\"\r\n  [discrete]=\"barraLabel\">\r\n  <input matSliderThumb [formControl]=\"this.getValue()\" />\r\n</mat-slider>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { ArqSliderComponent } from './arq-slider.component';\r\n\r\n@NgModule({\r\n  declarations: [ArqSliderComponent],\r\n  exports: [ArqSliderComponent],\r\n  imports: [ReactiveFormsModule, CommonModule, MatSliderModule]\r\n})\r\nexport class ArqSliderModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'arq-snackbar',\r\n  templateUrl: './arq-snackbar.component.html'\r\n})\r\nexport class ArqSnackBarComponent {}\r\n","","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { ArqSnackBarComponent } from './arq-snackbar.component';\r\n\r\n@NgModule({\r\n  declarations: [ArqSnackBarComponent],\r\n  exports: [ArqSnackBarComponent],\r\n  imports: [CommonModule, BrowserAnimationsModule, ToastrModule.forRoot()],\r\n  entryComponents: [ArqSnackBarComponent]\r\n})\r\nexport class ArqSnackBarModule {}\r\n","import { Overlay, OverlayConfig, OverlayRef, PositionStrategy } from '@angular/cdk/overlay';\r\nimport { TemplatePortal } from '@angular/cdk/portal';\r\nimport { Injectable, TemplateRef, ViewContainerRef } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ArqOverlayService {\r\n  constructor(private overlay: Overlay) {}\r\n  createOverlay(config: OverlayConfig): OverlayRef {\r\n    return this.overlay.create(config);\r\n  }\r\n  attachTemplatePortal(overlayRef: OverlayRef, templateRef: TemplateRef<any>, vcRef: ViewContainerRef) {\r\n    let templatePortal = new TemplatePortal(templateRef, vcRef);\r\n    // console.log(templatePortal);\r\n    overlayRef.attach(templatePortal);\r\n  }\r\n  positionGloballyCenter(): PositionStrategy {\r\n    return this.overlay.position().global().centerHorizontally().centerVertically();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject, distinctUntilChanged } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ArqSpinnerService {\r\n  private loading = new Subject<boolean>();\r\n\r\n  constructor() {}\r\n\r\n  show() {\r\n    this.loading.next(true);\r\n  }\r\n\r\n  hide() {\r\n    setTimeout(() => {\r\n      this.loading.next(false);\r\n    }, 500);\r\n  }\r\n\r\n  state(): Observable<boolean> {\r\n    return this.loading.asObservable().pipe(distinctUntilChanged());\r\n  }\r\n}\r\n","import { OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\r\nimport { ChangeDetectorRef, Component, Input, OnInit, TemplateRef, ViewChild, ViewContainerRef, ViewEncapsulation } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { ProgressSpinnerMode } from '@angular/material/progress-spinner';\r\n\r\nimport { ArqOverlayService } from '../../../core/services/arq-overlay/arq-overlay.service';\r\nimport { ArqSpinnerService } from '../../services/arq-spinner.service';\r\n\r\n@Component({\r\n  selector: 'arq-spinner',\r\n  templateUrl: './arq-spinner.component.html',\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqSpinnerComponent implements OnInit {\r\n  @Input() color?: ThemePalette;\r\n  @Input() diameter?: number = 100;\r\n  @Input() mode: ProgressSpinnerMode = 'determinate';\r\n  @Input() value?: number;\r\n  @Input() backdropEnabled = true;\r\n  @Input() positionGloballyCenter = true;\r\n  @Input() displayProgressSpinner: boolean = false;\r\n\r\n  @ViewChild('progressSpinnerRef')\r\n  private progressSpinnerRef: TemplateRef<any> | undefined;\r\n\r\n  private progressSpinnerOverlayConfig!: OverlayConfig;\r\n  private overlayRef!: OverlayRef;\r\n\r\n  constructor(\r\n    private vcRef: ViewContainerRef,\r\n    private overlayService: ArqOverlayService,\r\n    private spinnerService: ArqSpinnerService,\r\n    private _changeDetector: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngAfterViewInit() {\r\n    // Config for Overlay Service\r\n    this.progressSpinnerOverlayConfig = {\r\n      hasBackdrop: this.backdropEnabled\r\n    };\r\n    if (this.positionGloballyCenter) {\r\n      this.progressSpinnerOverlayConfig['positionStrategy'] = this.overlayService.positionGloballyCenter();\r\n    }\r\n    // Create Overlay for progress spinner\r\n    this.overlayRef = this.overlayService.createOverlay(this.progressSpinnerOverlayConfig);\r\n    // console.log(this.overlayRef);\r\n    this.spinnerService.state().subscribe((observer: boolean) => {\r\n      // console.log(observer);\r\n      // this.displayProgressSpinner = observer;\r\n      // this._changeDetector.detectChanges();\r\n      this.spinnerShow(observer);\r\n    });\r\n  }\r\n  ngDoCheck() {\r\n    // Based on status of displayProgressSpinner attach/detach overlay to progress spinner template\r\n    // this.spinnerShow();\r\n  }\r\n\r\n  spinnerShow(val : boolean) {\r\n    this.overlayRef?.detach();\r\n    if (val && this.progressSpinnerRef) {\r\n      this.overlayService.attachTemplatePortal(this.overlayRef, this.progressSpinnerRef, this.vcRef);\r\n    }\r\n  }\r\n}\r\n","<ng-template #progressSpinnerRef>\r\n  <mat-progress-spinner [color]=\"color\" [diameter]=\"diameter\" [mode]=\"mode\" [value]=\"value\"> </mat-progress-spinner>\r\n</ng-template>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { ArqOverlayService } from '../../../core/services/arq-overlay/arq-overlay.service';\r\n\r\nimport { CdkAccordionModule } from '@angular/cdk/accordion';\r\nimport { ClipboardModule } from '@angular/cdk/clipboard';\r\nimport { DialogModule } from '@angular/cdk/dialog';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { CdkMenuModule } from '@angular/cdk/menu';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkStepperModule } from '@angular/cdk/stepper';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MtxMomentDatetimeModule } from '@ng-matero/extensions-moment-adapter';\r\nimport { MtxDatetimepickerModule } from '@ng-matero/extensions/datetimepicker';\r\nimport { ArqSpinnerService } from '../../services/arq-spinner.service';\r\nimport { ArqSpinnerComponent } from './arq-spinner.component';\r\n\r\n@NgModule({\r\n  declarations: [ArqSpinnerComponent],\r\n  exports: [ArqSpinnerComponent],\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    MatProgressSpinnerModule,\r\n    OverlayModule,\r\n    BrowserAnimationsModule,\r\n    CdkAccordionModule,\r\n    ClipboardModule,\r\n    CdkMenuModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatBadgeModule,\r\n    MatCheckboxModule,\r\n    MatStepperModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatGridListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatDividerModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n    DialogModule,\r\n    MatDatepickerModule,\r\n    MtxDatetimepickerModule,\r\n    MtxMomentDatetimeModule,\r\n    MatCardModule,\r\n    MatTabsModule,\r\n    MatChipsModule\r\n  ],\r\n  providers: [ArqSpinnerService, ArqOverlayService]\r\n})\r\nexport class ArqSpinnerModule {}\r\n","import { Component, Input, OnInit, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'arq-step-item-label',\r\n  templateUrl: './arq-step-item-label.component.html',\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqStepItemLabelComponent implements OnInit {\r\n  @ViewChild(TemplateRef)\r\n  public labelTemplate!: TemplateRef<any>;\r\n  @Input()\r\n  title: string = '';\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","<ng-template>\r\n  {{ title }}\r\n</ng-template>\r\n","import { Component, ContentChild, Input, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ArqStepItemLabelComponent } from '../arq-step-item-label/arq-step-item-label.component';\r\n@Component({\r\n  selector: 'arq-step-item',\r\n  templateUrl: './arq-step-item.component.html',\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqStepItemComponent {\r\n  @ViewChild(TemplateRef) public contentTemplate!: TemplateRef<any>;\r\n  @ContentChild(ArqStepItemLabelComponent) public itemLabel!: ArqStepItemLabelComponent;\r\n\r\n  @Input() title: string = '';\r\n  @Input()\r\n  btnNext!: boolean;\r\n  @Input()\r\n  btnBack!: boolean;\r\n  @Input()\r\n  control!: FormGroup;\r\n}\r\n","<ng-template>\r\n  <ng-content select=\"arq-step-item-content\"> </ng-content>\r\n</ng-template>\r\n","import { StepperOrientation, StepperSelectionEvent } from '@angular/cdk/stepper';\r\nimport { Component, ContentChildren, EventEmitter, Input, Output, QueryList, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { ArqGenericInputComponent } from '../../../../core/arq-generic-input/arq-generic-input.component';\r\nimport { ArqStepItemComponent } from '../arq-step-item/arq-step-item.component';\r\n\r\n@Component({\r\n  selector: 'arq-step-group',\r\n  templateUrl: './arq-step-group.component.html',\r\n  styleUrls: ['./arq-step-group.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqStepGroupComponent extends ArqGenericInputComponent {\r\n  @Input() public duration = '2000';\r\n\r\n  @Input() public linear = false;\r\n\r\n  @Input() public orientation: StepperOrientation = 'horizontal';\r\n\r\n  @Input() public isEditable = false;\r\n\r\n  @Input() public position: 'top' | 'bottom' = 'top';\r\n\r\n  @Input() public labelPosition: 'bottom' | 'end' = 'bottom';\r\n\r\n  @Input() public isOptional = false;\r\n\r\n  @Output()\r\n  emitValue = new EventEmitter<any>();\r\n\r\n  @ContentChildren(ArqStepItemComponent) private contentItems?: QueryList<ArqStepItemComponent>;\r\n  public appItems?: QueryList<ArqStepItemComponent>;\r\n\r\n  ngAfterContentInit() {\r\n    this.appItems = this.contentItems;\r\n  }\r\n\r\n  selectionChange(evt: StepperSelectionEvent) {\r\n    this.emitValue.emit(evt);\r\n  }\r\n\r\n  next(control: any) {\r\n    if (control && this.linear && !control.valid) {\r\n      control.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  comprobarEntradas(): void {}\r\n}\r\n","<mat-stepper\r\n  #stepper\r\n  [linear]=\"linear\"\r\n  [animationDuration]=\"duration\"\r\n  [headerPosition]=\"position\"\r\n  [labelPosition]=\"labelPosition\"\r\n  [orientation]=\"orientation\"\r\n  (selectionChange)=\"selectionChange($event)\">\r\n  <ng-template ngFor let-item [ngForOf]=\"appItems\" let-i=\"index\">\r\n    <mat-step [stepControl]=\"item.control\" [editable]=\"isEditable\">\r\n      <ng-template matStepLabel>\r\n        <ng-container *ngTemplateOutlet=\"item.itemLabel.labelTemplate\"></ng-container>\r\n      </ng-template>\r\n      <ng-template matStepContent>\r\n        <ng-container *ngTemplateOutlet=\"item.contentTemplate\"></ng-container>\r\n        <button *ngIf=\"item.btnBack\" mat-button matStepperPrevious>Back</button>\r\n        <button *ngIf=\"item.btnNext\" mat-button matStepperNext (click)=\"next(item.control)\">Next</button>\r\n      </ng-template>\r\n    </mat-step>\r\n  </ng-template>\r\n</mat-stepper>\r\n","import { Component, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'arq-step-item-content',\r\n  templateUrl: './arq-step-item-content.component.html',\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqStepItemContentComponent {}\r\n","<div class=\"py-4\">\r\n  <ng-content></ng-content>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\n\r\nimport { ArqStepItemComponent, ArqStepItemContentComponent, ArqStepItemLabelComponent } from '../components';\r\nimport { ArqStepGroupComponent } from './arq-step-group/arq-step-group.component';\r\n\r\n@NgModule({\r\n  declarations: [ArqStepGroupComponent, ArqStepItemComponent, ArqStepItemLabelComponent, ArqStepItemContentComponent],\r\n  exports: [ArqStepGroupComponent, ArqStepItemComponent, ArqStepItemLabelComponent, ArqStepItemContentComponent],\r\n  imports: [CommonModule, MatInputModule, ReactiveFormsModule, MatStepperModule, MatButtonModule]\r\n})\r\nexport class ArqStepperModule {}\r\n","import { Component, Input, OnInit, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'arq-tab-item-header',\r\n  templateUrl: './arq-tab-item-header.component.html',\r\n  styleUrls: ['./arq-tab-item-header.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqTabItemHeaderComponent implements OnInit {\r\n  @ViewChild(TemplateRef)\r\n  public headerTemplate!: TemplateRef<any>;\r\n  @Input()\r\n  title: string = '';\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","<ng-template>\r\n  <span class=\"title\"> {{ title }}</span>\r\n</ng-template>\r\n","import { Component, ContentChild, Input, OnInit, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { ArqTabItemHeaderComponent } from '../arq-tab-item-header/arq-tab-item-header.component';\r\n\r\n@Component({\r\n  selector: 'arq-tab-item',\r\n  templateUrl: './arq-tab-item.component.html',\r\n  styleUrls: ['./arq-tab-item.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqTabItemComponent implements OnInit {\r\n  @ViewChild(TemplateRef) public contentTemplate!: TemplateRef<any>;\r\n  @ContentChild(ArqTabItemHeaderComponent) public itemHeader!: ArqTabItemHeaderComponent;\r\n  @Input() title: string = '';\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<ng-template>\r\n  <ng-content select=\"arq-tab-item-content\"></ng-content>\r\n</ng-template>\r\n","import {\r\n  AfterContentInit,\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { MatTabChangeEvent, MatTabGroup } from '@angular/material/tabs';\r\nimport { BehaviorSubject, timer } from 'rxjs';\r\nimport { ArqTabItemComponent } from '../arq-tab-item/arq-tab-item.component';\r\n\r\n@Component({\r\n  selector: 'arq-tab-group',\r\n  templateUrl: './arq-tab-group.component.html',\r\n  styleUrls: ['./arq-tab-group.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqTabGroupComponent implements AfterContentInit {\r\n  @ContentChildren(ArqTabItemComponent) private contentItems?: QueryList<ArqTabItemComponent>;\r\n  public appItems?: QueryList<ArqTabItemComponent>;\r\n\r\n  @Input('selectedTabChange') _selectedTabChange!: (_tab: number) => any;\r\n  @Output('selectedTabChangeOutput') selectedTabChangeOutput: EventEmitter<number> = new EventEmitter<number>();\r\n  @Output('selectedIndexChange') selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  @ViewChild(MatTabGroup) tabGroup!: MatTabGroup;\r\n\r\n  constructor() {}\r\n\r\n  ngAfterContentInit() {\r\n    timer(0).subscribe(() => {\r\n      this.appItems = this.contentItems;\r\n    });\r\n  }\r\n\r\n  changeTab(tabIdx: number) {\r\n    this.tabGroup.selectedIndex = tabIdx;\r\n  }\r\n\r\n  getSelectedIndex(): number {\r\n    return this.tabGroup?.selectedIndex || 0;\r\n  }\r\n\r\n  selectedTabChange($event: MatTabChangeEvent) {\r\n    this.selectedTabChangeOutput.emit($event.index);\r\n    if (this._selectedTabChange) {\r\n      this._selectedTabChange($event.index);\r\n    }\r\n  }\r\n}\r\n","<mat-tab-group\r\n  (selectedTabChange)=\"this.selectedTabChange($event)\"\r\n  (selectedIndexChange)=\"selectedIndexChange.next($event)\">\r\n  <mat-tab *ngFor=\"let item of appItems\">\r\n    <ng-template mat-tab-label>\r\n      <ng-container *ngTemplateOutlet=\"item.itemHeader.headerTemplate\"></ng-container>\r\n    </ng-template>\r\n    <ng-container *ngTemplateOutlet=\"item.contentTemplate\"></ng-container>\r\n  </mat-tab>\r\n</mat-tab-group>\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'arq-tab-item-content',\r\n  templateUrl: './arq-tab-item-content.component.html',\r\n  styleUrls: ['./arq-tab-item-content.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqTabItemContentComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<div class=\"py-4\">\r\n  <ng-content></ng-content>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { ArqTabGroupComponent } from './arq-tab-group/arq-tab-group.component';\r\nimport { ArqTabItemContentComponent } from './arq-tab-item-content/arq-tab-item-content.component';\r\nimport { ArqTabItemHeaderComponent } from './arq-tab-item-header/arq-tab-item-header.component';\r\nimport { ArqTabItemComponent } from './arq-tab-item/arq-tab-item.component';\r\n\r\n@NgModule({\r\n  declarations: [ArqTabItemComponent, ArqTabItemContentComponent, ArqTabItemHeaderComponent, ArqTabGroupComponent],\r\n  exports: [ArqTabItemComponent, ArqTabItemContentComponent, ArqTabItemHeaderComponent, ArqTabGroupComponent],\r\n  imports: [ReactiveFormsModule, CommonModule, MatTabsModule]\r\n})\r\nexport class ArqTabModule {}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { ArqGenericInputComponent } from '../../../core/arq-generic-input/arq-generic-input.component';\r\n\r\n@Component({\r\n  selector: 'arq-text-input',\r\n  templateUrl: './arq-text-input.component.html',\r\n  styleUrls: ['./arq-text-input.component.css']\r\n})\r\nexport class ArqTextInputComponent extends ArqGenericInputComponent implements OnInit {\r\n  @Input()\r\n  public maxLength = 100;\r\n\r\n  @Input()\r\n  public append!: string;\r\n\r\n  @Input()\r\n  public disabled: boolean = false;\r\n\r\n  public constructor() {\r\n    super();\r\n  }\r\n  comprobarEntradas(): void {}\r\n}\r\n","<label *ngIf=\"this.label\"\r\n  >{{ this.label }}\r\n  <span *ngIf=\"this.getValidations()\" class=\"text-danger\"> * </span>\r\n</label>\r\n<mat-form-field\r\n  appearance=\"outline\"\r\n  class=\"input-text\"\r\n  [class]=\"sizeInput\"\r\n  [ngClass]=\"{ inputReadOnly: this.readonly || this.disabled }\"\r\n  *ngIf=\"this.getValue()\">\r\n  <span *ngIf=\"!iconPrefix\" matPrefix>{{ prefix }}</span>\r\n  <mat-icon *ngIf=\"iconPrefix\" matPrefix>{{ prefix }}</mat-icon>\r\n  <input\r\n    class=\"input-text\"\r\n    matInput\r\n    [placeholder]=\"this.placeholder\"\r\n    [readonly]=\"this.readonly\"\r\n    [disabled]=\"this.disabled\"\r\n    [formControl]=\"this.getValue()\"\r\n    [maxLength]=\"this.maxLength\"\r\n    #tooltip=\"matTooltip\"\r\n    [matTooltip]=\"this.message\"\r\n    [matTooltipPosition]=\"this.positionTooltip\"\r\n    [matTooltipHideDelay]=\"this.hideDelay\"\r\n    (change)=\"this.ngChanges()\"\r\n    (focusOut)=\"this.onFocusOutEvent($event)\" />\r\n  <mat-error arq-form-control-error [labelControl]=\"this.label\" [formControlSibling]=\"this.getValue()\"></mat-error>\r\n  <span *ngIf=\"!iconSuffix\" matSuffix>{{ suffix }}</span>\r\n  <mat-icon *ngIf=\"iconSuffix\" matSuffix>{{ suffix }}</mat-icon>\r\n</mat-form-field>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\nimport { ArqGenericInputModule } from '../../../core/arq-generic-input/arq-generic-input.module';\r\n\r\nimport { ArqTextInputComponent } from './arq-text-input.component';\r\nimport { ArqFormControlErrorModule } from '../arq-form-control-error/arq-form-control-error.module';\r\n\r\n@NgModule({\r\n  declarations: [ArqTextInputComponent],\r\n  exports: [ArqTextInputComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ArqGenericInputModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    ArqFormControlErrorModule,\r\n  ]\r\n})\r\nexport class ArqTextInputModule {}\r\n","import { Component, Input, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { ArqGenericInputComponent } from '../../../core/arq-generic-input/arq-generic-input.component';\r\n\r\n@Component({\r\n  selector: 'arq-textarea',\r\n  templateUrl: './arq-textarea.component.html',\r\n  styleUrls: ['./arq-textarea.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqTextareaComponent extends ArqGenericInputComponent {\r\n  @Input()\r\n  public maxLength?: number;\r\n\r\n  @Input()\r\n  public minHeight: number = 5;\r\n\r\n  public constructor() {\r\n    super();\r\n    this.sizeInput = 'large';\r\n  }\r\n\r\n  comprobarEntradas(): void {}\r\n}\r\n","<label *ngIf=\"this.label\"\r\n  >{{ this.label }}\r\n  <span *ngIf=\"this.getValidations()\" class=\"text-danger\"> * </span>\r\n</label>\r\n<p *ngIf=\"this.label\"></p>\r\n<mat-form-field\r\n  appearance=\"outline\"\r\n  class=\"full-width\"\r\n  [class]=\"sizeInput\"\r\n  [ngClass]=\"{ inputReadOnly: this.readonly }\"\r\n  *ngIf=\"this.getValue()\">\r\n  <textarea\r\n    matInput\r\n    [placeholder]=\"this.placeholder\"\r\n    [readonly]=\"this.readonly\"\r\n    [formControl]=\"this.getValue()\"\r\n    [attr.maxLength]=\"this.maxLength\"\r\n    #tooltip=\"matTooltip\"\r\n    [matTooltip]=\"this.message\"\r\n    [matTooltipPosition]=\"this.positionTooltip\"\r\n    [matTooltipHideDelay]=\"this.hideDelay\"\r\n    [rows]=\"this.minHeight\"\r\n    (change)=\"this.ngChanges()\"\r\n    (focusOut)=\"this.onFocusOutEvent($event)\"></textarea>\r\n  <mat-error arq-form-control-error [labelControl]=\"this.label\" [formControlSibling]=\"this.getValue()\"></mat-error>\r\n</mat-form-field>\r\n","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\nimport { ArqGenericInputModule } from '../../../core/arq-generic-input/arq-generic-input.module';\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { ArqTextareaComponent } from './arq-textarea.component';\r\nimport { ArqFormControlErrorModule } from '../components';\r\n\r\n@NgModule({\r\n  declarations: [ArqTextareaComponent],\r\n  exports: [ArqTextareaComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ArqGenericInputModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    ArqFormControlErrorModule,\r\n  ]\r\n})\r\nexport class ArqTextareaModule {}\r\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'arq-submenu',\r\n  templateUrl: 'arq-submenu.component.html',\r\n  styleUrls: ['./arq-submenu.component.css']\r\n})\r\nexport class ArqSubMenuComponent implements OnInit {\r\n  @Input()\r\n  SubMenuItems!: any;\r\n\r\n  @ViewChild('Submenuitem') public Submenuitem: any;\r\n\r\n  @Output() SelectedMenu: EventEmitter<any> = new EventEmitter();\r\n\r\n  ngOnInit(): void {}\r\n\r\n  clickeventhandler(menu: any) {\r\n    this.SelectedMenu.emit(menu);\r\n  }\r\n}\r\n","<mat-menu #Submenuitem=\"matMenu\" [overlapTrigger]=\"false\" class=\"customize-mat-menu\">\r\n  <div *ngFor=\"let submenu of SubMenuItems\">\r\n    <span *ngIf=\"submenu.subItems && submenu.subItems.length > 0\">\r\n      <button class=\"btn-marte-menu\" mat-menu-item [matMenuTriggerFor]=\"secondsubmenu.Submenuitem\">\r\n        <mat-icon *ngIf=\"submenu.icon\">{{ submenu.icon }}</mat-icon>\r\n        <span>{{ submenu.label }}</span>\r\n      </button>\r\n      <arq-submenu (SelectedMenu)=\"clickeventhandler($event)\" #secondsubmenu [SubMenuItems]=\"submenu.subItems\">\r\n      </arq-submenu>\r\n    </span>\r\n    <span *ngIf=\"!submenu.subItems || submenu.subItems.length === 0\">\r\n      <button class=\"btn-marte-menu\" mat-menu-item (click)=\"clickeventhandler(submenu)\">\r\n        <mat-icon *ngIf=\"submenu.icon\">{{ submenu.icon }}</mat-icon>\r\n        <span>{{ submenu.label }}</span>\r\n      </button>\r\n    </span>\r\n  </div>\r\n</mat-menu>\r\n","import { Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslocoService } from '@ngneat/transloco';\r\n\r\n@Component({\r\n  selector: 'arq-toolbar',\r\n  templateUrl: './arq-toolbar.component.html',\r\n  styleUrls: ['./arq-toolbar.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqToolbarComponent {\r\n  @Input() public menuItems!: any[];\r\n\r\n  @Input() public languages: any;\r\n\r\n  @Input() public title!: string;\r\n\r\n  @Input() public titleAlign: 'left' | 'center' | 'right' = 'center';\r\n\r\n  @Input() public user: any;\r\n\r\n  @Input() public reloadOnLangChange: boolean = true;\r\n\r\n  @Output() public selectedEvent: EventEmitter<any> = new EventEmitter();\r\n\r\n  public constructor(private router: Router, private translocoService: TranslocoService) {}\r\n\r\n  public setSelectedItem(item: any): void {\r\n    if (item.routerLink) {\r\n      this.router.navigate([item.routerLink]);\r\n    } else {\r\n      item.event();\r\n    }\r\n  }\r\n\r\n  public changeLang(lang: any): void {\r\n    localStorage.setItem('user-lang', lang.code);\r\n    this.translocoService?.setActiveLang(lang.code || 'es');\r\n\r\n    if (this.reloadOnLangChange) location.reload();\r\n\r\n    this.selectedEvent.emit(lang);\r\n  }\r\n\r\n  public ngLogout(): void {}\r\n}\r\n","<mat-toolbar class=\"menu-bar mat-elevation-z1\">\r\n  <ng-container *ngIf=\"titleAlign == 'left' && title\">\r\n    <span>{{ title }}</span>\r\n    <span class=\"example-spacer\"></span>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"menuItems\">\r\n    <ng-container *ngFor=\"let basemenu of menuItems\">\r\n      <div *ngIf=\"basemenu.subItems && basemenu.subItems.length > 0; else elseMatMenu\">\r\n        <button mat-button class=\"btn-marte-menu\" [matMenuTriggerFor]=\"submenu.Submenuitem\">\r\n          <mat-icon *ngIf=\"basemenu.icon\" class=\"mr-1\">{{ basemenu.icon }}</mat-icon>\r\n          <span>{{ basemenu.label }}</span>\r\n        </button>\r\n        <arq-submenu #submenu (SelectedMenu)=\"setSelectedItem($event)\" [SubMenuItems]=\"basemenu.subItems\"></arq-submenu>\r\n      </div>\r\n      <ng-template #elseMatMenu>\r\n        <button mat-button class=\"btn-marte-menu\" (click)=\"setSelectedItem(basemenu)\">\r\n          <mat-icon class=\"mr-1\" *ngIf=\"basemenu.icon\">{{ basemenu.icon }}</mat-icon>\r\n          <span>{{ basemenu.label }}</span>\r\n        </button>\r\n      </ng-template>\r\n    </ng-container>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"titleAlign == 'center' && title\">\r\n    <span class=\"example-spacer\"></span>\r\n\r\n    <span>{{ title }}</span>\r\n  </ng-container>\r\n\r\n  <span class=\"example-spacer\"></span>\r\n\r\n  <ng-container *ngIf=\"languages\">\r\n    <ng-container *ngFor=\"let language of languages\">\r\n      <a\r\n        class=\"item-lang\"\r\n        [ngClass]=\"{ 'border-lang': language.check, 'p-bottom': !language.check }\"\r\n        (click)=\"changeLang(language)\"\r\n        >{{ language.label }}\r\n      </a>\r\n    </ng-container>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"titleAlign == 'right' && title\">\r\n    <span class=\"example-spacer\"></span>\r\n\r\n    <span>{{ title }}</span>\r\n  </ng-container>\r\n\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"logout\">\r\n    <mat-icon>account_circle</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <ng-template ngFor let-item [ngForOf]=\"user\" let-i=\"index\">\r\n      <button mat-menu-item (click)=\"item.event()\">\r\n        <mat-icon>{{ item.icon }}</mat-icon>\r\n        <span>{{ item.text }}</span>\r\n      </button>\r\n    </ng-template>\r\n  </mat-menu>\r\n</mat-toolbar>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { ArqSubMenuComponent } from './arq-submenu/arq-submenu.component';\r\nimport { ArqToolbarComponent } from './arq-toolbar.component';\r\n\r\n@NgModule({\r\n  declarations: [ArqToolbarComponent, ArqSubMenuComponent],\r\n  exports: [ArqToolbarComponent, ArqSubMenuComponent],\r\n  imports: [ReactiveFormsModule, CommonModule, MatToolbarModule, MatIconModule, MatMenuModule, MatButtonModule]\r\n})\r\nexport class ArqToolbarModule {}\r\n","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'arq-upload-files',\r\n  templateUrl: './arq-upload-files.component.html',\r\n  styleUrls: ['./arq-upload-files.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqUploadFilesComponent implements OnInit {\r\n  @Input()\r\n  config!: any;\r\n\r\n  @Input()\r\n  label!: string;\r\n\r\n  @Input()\r\n  multiple: boolean = true;\r\n\r\n  public selectedFiles: File[] = [];\r\n\r\n  public txtLabel!: string;\r\n  public response: any;\r\n  public showProgress: boolean = false;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  selectFiles(event: any) {\r\n    this.selectedFiles = event.target.files;\r\n    this.txtLabel = this.customLabel(this.selectedFiles?.length);\r\n  }\r\n\r\n  cancelUpload() {\r\n    this.selectedFiles = [];\r\n    this.showProgress = false;\r\n    this.config.cancelUpload();\r\n  }\r\n\r\n  uploadFiles() {\r\n    this.showProgress = true;\r\n\r\n    if (this.selectedFiles) {\r\n      const formData = new FormData();\r\n      for (var i = 0; i < this.selectedFiles.length; i++) {\r\n        formData.append('file', this.selectedFiles[i]);\r\n      }\r\n\r\n      this.upload(formData);\r\n    }\r\n  }\r\n\r\n  upload(files: FormData): void {\r\n    if (files) {\r\n      this.config.uploadFile(files).subscribe((resp: any) => {\r\n        this.response = resp;\r\n        this.selectedFiles = [];\r\n        this.showProgress = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  customLabel(num: any) {\r\n    const str = num > 1 ? ' archivos' : ' archivo';\r\n    const label = num + str;\r\n    return label;\r\n  }\r\n}\r\n","<div class=\"row align-items-center\">\r\n  <div class=\"col-8\">\r\n    <input #file type=\"file\" [multiple]=\"multiple\" (change)=\"selectFiles($event)\" class=\"file-input\" />\r\n\r\n    <div class=\"file-upload\">\r\n      <button mat-mini-fab color=\"primary\" class=\"upload-btn\" (click)=\"file.click()\">\r\n        <mat-icon>attach_file</mat-icon>\r\n      </button>\r\n      <div *ngIf=\"selectedFiles?.length == 0; else elseBlock\">\r\n        <span class=\"d-flex justify-content-center align-items-center name\">{{ label }}</span>\r\n      </div>\r\n      <ng-template #elseBlock>\r\n        <span class=\"d-flex justify-content-center align-items-center\">{{ txtLabel }}</span>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-4\">\r\n    <button\r\n      mat-raised-button\r\n      class=\"btn btn-success btn-sm\"\r\n      [disabled]=\"selectedFiles.length == 0\"\r\n      (click)=\"uploadFiles()\">\r\n      Subir archivos\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"showProgress\" class=\"mt-4\">\r\n  <div *ngFor=\"let item of selectedFiles\" class=\"d-flex align-items-center my-2\">\r\n    <span> {{ item.name }} </span>\r\n  </div>\r\n  <div class=\"progress\">\r\n    <mat-progress-bar class=\"progress-bar\" mode=\"indeterminate\"></mat-progress-bar>\r\n    <mat-icon class=\"cancel-upload\" (click)=\"cancelUpload()\">delete_forever</mat-icon>\r\n  </div>\r\n</div>\r\n","import { Component, HostListener, Inject, Input, Optional, ViewEncapsulation } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'arq-upload-files-dialog',\r\n  templateUrl: './arq-upload-files-dialog.component.html',\r\n  styleUrls: ['./arq-upload-files-dialog.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqUploadFilesDialogComponent {\r\n  @Input() config: any;\r\n\r\n  constructor(\r\n    @Optional()\r\n    @Inject(MAT_DIALOG_DATA)\r\n    public data: {\r\n      cancelBtn: boolean;\r\n      confirmBtn: boolean;\r\n      textConfirm: string;\r\n      textCancel: string;\r\n      config: any;\r\n      label: string;\r\n    },\r\n    @Optional() private mdDialogRef: MatDialogRef<ArqUploadFilesDialogComponent>\r\n  ) {}\r\n\r\n  public cancel() {\r\n    this.close(false);\r\n  }\r\n  public close(value: boolean) {\r\n    this.mdDialogRef.close(value);\r\n  }\r\n  public confirm() {\r\n    this.close(true);\r\n  }\r\n  @HostListener('keydown.esc')\r\n  public onEsc() {\r\n    this.close(false);\r\n  }\r\n}\r\n","<div class=\"custom-class-dialog p-3\">\r\n  <div class=\"my-4\">\r\n    <arq-upload-files [config]=\"data.config\" [label]=\"data.label\"></arq-upload-files>\r\n  </div>\r\n\r\n  <div align=\"end\">\r\n    <button mat-button *ngIf=\"data.cancelBtn\" class=\"btn btn-cancel\" style=\"margin-right: 10px\" (click)=\"cancel()\">\r\n      {{ data.textCancel }}\r\n    </button>\r\n    <button mat-raised-button *ngIf=\"data.confirmBtn\" color=\"primary\" class=\"btn\" (click)=\"confirm()\" cdkFocusInitial>\r\n      {{ data.textConfirm }}\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { ArqUploadFilesComponent } from './arq-upload-files.component';\r\n\r\n@NgModule({\r\n  declarations: [ArqUploadFilesComponent],\r\n  exports: [ArqUploadFilesComponent],\r\n  imports: [FormsModule, CommonModule, MatIconModule, MatButtonModule, MatProgressBarModule]\r\n})\r\nexport class ArqUploadFilesModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { ArqUploadFilesModule } from '../arq-upload-files/arq-upload-files.module';\r\n\r\nimport { ArqUploadFilesDialogComponent } from './arq-upload-files-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [ArqUploadFilesDialogComponent],\r\n  exports: [ArqUploadFilesDialogComponent],\r\n  imports: [FormsModule, CommonModule, MatIconModule, MatButtonModule, MatProgressBarModule, ArqUploadFilesModule]\r\n})\r\nexport class ArqUploadFilesDialogModule {}\r\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport class customValidators {  \r\n\r\n    static arrayMinItems(min: number, type: string): ValidatorFn {  \r\n        return (control: AbstractControl):  { [key: string]: any }  | null => {\r\n            \r\n            if (type == 'array' && control.value !== undefined && (isNaN(control.value) || control.value.length < min)) {\r\n                return { 'minItems': true };\r\n            }\r\n            return null;\r\n        };\r\n    }  \r\n\r\n    static arrayMaxItems(max: number, type: string): ValidatorFn {\r\n        return (control: AbstractControl):  { [key: string]: any }  | null => {\r\n            \r\n            if (type == 'array' && control.value !== undefined && (isNaN(control.value) || control.value.length > max)) {\r\n                return { 'maxItems': true };\r\n            }\r\n            return null;\r\n        };\r\n    }\r\n\r\n    static arrayUniqueItems(unique: boolean, type: string): ValidatorFn {\r\n        return (control: AbstractControl):  { [key: string]: any }  | null => {\r\n            if (control.value !== undefined && unique && (checkIfDuplicateExists(control.value))) {\r\n                return { 'maxItems': true };\r\n            }\r\n            return null;\r\n        };\r\n    }\r\n\r\n    static numberExclusiveMaximum(max: number, type: string): ValidatorFn {    \r\n        return (control: AbstractControl):  { [key: string]: any }  | null => {\r\n            if (type == 'number' && control.value !== undefined && (isNaN(control.value) || control.value >= max)) {\r\n                return { 'exclusiveMaximum': true };\r\n            }\r\n            return null;\r\n        };\r\n    } \r\n\r\n    static numberExclusiveMinimum(min: number, type: string): ValidatorFn {    \r\n        return (control: AbstractControl):  { [key: string]: any }  | null => {\r\n            if (type == 'number' && control.value !== undefined && (isNaN(control.value) || control.value <= min)) {\r\n                return { 'exclusiveMinimum': true };\r\n            }\r\n            return null;\r\n        };\r\n    }\r\n\r\n    static numberMinimum(min: number, type: string): ValidatorFn {    \r\n        return (control: AbstractControl):  { [key: string]: any } | null => {\r\n            console.log(isNaN(control.value) || control.value >= min);\r\n            \r\n            if (type == 'number' && control.value !== undefined && (isNaN(control.value) || control.value < min)) {\r\n                return { 'minimum': true };\r\n            }\r\n            return null;\r\n        };\r\n    } \r\n\r\n    static numberMaximum(max: number, type: string): any {    \r\n        return (control: AbstractControl): { [key: string]: any } | null => {\r\n            if (type == 'number' && control.value !== undefined && (isNaN(control.value) || control.value > max)) {\r\n                return { 'maximum': true };\r\n            }\r\n            return null;\r\n        };\r\n    }\r\n\r\n    static numberMultipleOf(multiplo: number, type: string): ValidatorFn {    \r\n        return (control: AbstractControl): { [key: string]: any } | null => {\r\n            if (type == 'number' && control.value !== undefined && (isNaN(control.value) || control.value % multiplo != 0)) {\r\n                return { 'multipleOf': true };\r\n            }\r\n            return null;\r\n        };\r\n    } \r\n\r\n}\r\n\r\nfunction checkIfDuplicateExists(arr:any) {\r\n    return new Set(arr).size != arr.length;\r\n}","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\nimport { customValidators } from './validator';\r\n\r\n@Injectable()\r\nexport class ArqSchemaService {\r\n  public constructor() {}\r\n\r\n  /**\r\n   * Generate Form Group with schema validations.\r\n   */\r\n  public _parseSchema(schemaObject: any, customValidations: any): any {\r\n    const bindigProperties: any = {};\r\n    if (schemaObject) {\r\n      const propNames = Object.getOwnPropertyNames(schemaObject?.properties);\r\n      for (let i = 0; i < propNames.length; i++) {\r\n        if ('$ref' in schemaObject.properties[propNames[i]]) {\r\n          //Buscamos la referencia\r\n          /*bindigProperties[propNames[i]] = [\r\n              this._parseSchema(this.findRef(schemaObject, propNames[i]), customValidations)\r\n            ];*/\r\n          continue;\r\n        }\r\n\r\n        if (\r\n          schemaObject.properties[propNames[i]].type === 'array' &&\r\n          !('$ref' in schemaObject.properties[propNames[i]].items)\r\n        ) {\r\n          if (schemaObject.properties[propNames[i]].items?.properties) {\r\n            bindigProperties[propNames[i]] = [\r\n              this._parseSchema(schemaObject.properties[propNames[i]].items, customValidations)\r\n            ];\r\n          } else {\r\n            bindigProperties[propNames[i]] = [this._createValidation(propNames[i], [], schemaObject, [])];\r\n          }\r\n          continue;\r\n        }\r\n\r\n        if (\r\n          schemaObject.properties[propNames[i]].type !== 'object' ||\r\n          this._isListAngularDto(schemaObject.properties[propNames[i]])\r\n        ) {\r\n          let AddValidations: any = null;\r\n          if (customValidations && customValidations.hasOwnProperty(propNames[i])) {\r\n            AddValidations = customValidations[propNames[i]];\r\n          }\r\n          bindigProperties[propNames[i]] = this._createValidation(\r\n            propNames[i],\r\n            schemaObject.properties[propNames[i]],\r\n            schemaObject,\r\n            AddValidations\r\n          );\r\n          continue;\r\n        }\r\n        bindigProperties[propNames[i]] = this._collect(\r\n          this._parseSchema(schemaObject.properties[propNames[i]], customValidations)\r\n        );\r\n      }\r\n    }\r\n\r\n    return bindigProperties;\r\n  }\r\n\r\n  _isListAngularDto(property: any): boolean {\r\n    return (\r\n      property.type === 'object' &&\r\n      property.properties.hasOwnProperty('value') &&\r\n      property.properties.hasOwnProperty('description') &&\r\n      property.properties.hasOwnProperty('descriptionV')\r\n    );\r\n  }\r\n\r\n  private _collect(bindingPropertires?: any, schemaObject?: any): any {\r\n    const ret: any = {};\r\n    const len = arguments.length;\r\n    for (let i = 0; i < len; i++) {\r\n      for (const p in arguments[i]) {\r\n        if (arguments[i].hasOwnProperty(p)) {\r\n          ret[p] = arguments[i][p];\r\n        }\r\n      }\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  private _createValidation(property: any, properties: any, schema: any, customValidations: Array<any>): Array<any> {\r\n    let validationRules: Array<any> = [];\r\n\r\n    if (customValidations) {\r\n      validationRules = customValidations;\r\n    }\r\n    if (this._isPropertyRequired(schema, property)) {\r\n      validationRules.push(Validators.required);\r\n    }\r\n    if (properties['minLength'] != null) {\r\n      validationRules.push(Validators.minLength(properties['minLength']));\r\n    }\r\n    if (properties['maxLength']) {\r\n      validationRules.push(Validators.maxLength(properties['maxLength']));\r\n    }\r\n    if (properties['maximum']) {\r\n      validationRules.push(Validators.max(properties['maximum']));\r\n    }\r\n    if (properties['minimum'] != null) {\r\n      validationRules.push(Validators.min(properties['minimum']));\r\n    }\r\n\r\n    if (properties['readOnly']) {\r\n      validationRules.push((control: FormControl) => {\r\n        return control.disable();\r\n      });\r\n    }\r\n\r\n    if (properties['format']) {\r\n      if (properties['format'] === 'email') {\r\n        validationRules.push(Validators.pattern(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,6}$/i));\r\n      }\r\n      // TODO: add date validation\r\n      // validationRules.push(Validators.min(properties[\"minimums\"]));\r\n    }\r\n\r\n    if (properties['pattern']) {\r\n      validationRules.push(Validators.pattern(properties['pattern']));\r\n    }\r\n\r\n    if (properties['minItems']) {\r\n      validationRules.push(customValidators.arrayMinItems(properties['minItems'], properties['type']));\r\n    }\r\n\r\n    if (properties['maxItems']) {\r\n      validationRules.push(customValidators.arrayMaxItems(properties['maxItems'], properties['type']));\r\n    }\r\n\r\n    if (properties['uniqueItems']) {\r\n      validationRules.push(customValidators.arrayUniqueItems(properties['uniqueItems'], properties['type']));\r\n    }\r\n\r\n    if (properties['exclusiveMaximum']) {\r\n      validationRules.push(customValidators.numberExclusiveMaximum(properties['exclusiveMaximum'], properties['type']));\r\n    }\r\n\r\n    if (properties['exclusiveMinimum']) {\r\n      validationRules.push(customValidators.numberExclusiveMinimum(properties['exclusiveMinimum'], properties['type']));\r\n    }\r\n\r\n    if (properties['multipleOf']) {\r\n      validationRules.push(customValidators.numberMultipleOf(properties['multipleOf'], properties['type']));\r\n    }\r\n\r\n    return ['', validationRules];\r\n  }\r\n\r\n  /**\r\n   * @param schema\r\n   * @param property\r\n   */\r\n  private _isPropertyRequired(schema: any, property: any): boolean {\r\n    return schema.required && schema.required.indexOf(property) !== -1;\r\n  }\r\n\r\n  public fillModelWithDefaultValues(model: any, schema: any): any {\r\n    if (schema) {\r\n      model = Object.assign(model, schema.value);\r\n    } else {\r\n      console.log(\"Sin valor 'empty'\");\r\n    }\r\n  }\r\n\r\n  // private findRef(schemaObject:any, propiedad: string): string {\r\n  //   let def = propiedad.split('/');\r\n  //   console.log(def)\r\n  //   console.log(schemaObject.$defs)\r\n  //   console.log(def[def.length - 1])\r\n  //   console.log(schemaObject.$defs[def[def.length - 1]])\r\n  //   console.log(schemaObject.$defs[def[def.length - 1]])\r\n\r\n  //   return \"vaya xD\";\r\n  // }\r\n}\r\n\r\n/*{\r\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\r\n    \"$defs\": {\r\n        \"Date\": {\r\n            \"type\": \"object\"\r\n        }\r\n    },\r\n    \"type\": \"es.gva.core.data.industria.common.EmpresaInstaladoraActividadDTO\",\r\n    \"properties\": {\r\n        \"aeiEeiEaMaquina\": {\r\n            \"type\": \"string\"\r\n        },\r\n        \"fechaAlta\": {\r\n            \"$ref\": \"#/$defs/Date\"\r\n        },\r\n        \"fechaAltaSistema\": {\r\n            \"$ref\": \"#/$defs/Date\"\r\n        },\r\n        \"fechaBaja\": {\r\n            \"$ref\": \"#/$defs/Date\"\r\n        },\r\n        \"fechaCaducidad\": {\r\n            \"$ref\": \"#/$defs/Date\"\r\n        },\r\n        \"fechaUltimaRenov\": {\r\n            \"$ref\": \"#/$defs/Date\"\r\n        },\r\n        \"fechafinSusp\": {\r\n            \"$ref\": \"#/$defs/Date\"\r\n        },\r\n        \"id\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"codigo\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"maquina\": {\r\n                    \"type\": \"string\"\r\n                },\r\n                \"numeroInterno\": {\r\n                    \"type\": \"integer\"\r\n                }\r\n            }\r\n        },\r\n    },\r\n  \"empty\": \"es.gva.core.data.industria.common.EmpresaInstaladoraActividadDTO@6471d2f3\"\r\n}*/\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { ArqUsuario } from '../interfaces/arq-usuario.interface';\r\n\r\n@Injectable()\r\nexport abstract class AuthService {\r\n  protected user$: BehaviorSubject<ArqUsuario | undefined> = new BehaviorSubject<ArqUsuario | undefined>(undefined);\r\n\r\n  public constructor() {}\r\n\r\n  /**\r\n   * Inicia la sesión del usuario\r\n   */\r\n  public abstract login(url: string, nombreApp: string, gvloginUrl: string): void;\r\n\r\n  /** Cierra la sesión del usuario activo */\r\n  public logout(gvLoginUrl: string, urlRedirect: string): void {\r\n    //TODO: se utiliza es en la version 7.2 this.user$.next(undefined);\r\n    this.user$.closed;\r\n  }\r\n\r\n  /**\r\n   * Obtiene un stream que emite el usuario con la sesión activa\r\n   * @returns Observable que emite el usuario activo\r\n   */\r\n  public getUser(): Observable<ArqUsuario | undefined> {\r\n    return this.user$.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Comprueba si el usuario activo posee alguno de los roles indicados\r\n   * @param roles Lista de roles a comprobar\r\n   */\r\n  public hasAnyRole(roles: string[]): boolean {\r\n    const currentUser = this.user$.value;\r\n    return currentUser !== undefined && currentUser.roles.some(userRole => roles.includes(userRole.codigo));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { EMPTY, Observable } from 'rxjs';\r\nimport { catchError, filter, map } from 'rxjs/operators';\r\n\r\nimport { ArqGvloginTokenData } from '../interfaces/arq-gvlogin-token-data';\r\nimport { ArqApiService } from './arq-api.service';\r\nimport { AuthService } from './arq-auth.service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\nconst TOKEN_KEY: string = 'gvlogin-token';\r\nconst TOKEN_MARTE: string = 'peticion-marte';\r\nconst TOKEN_MARTE_FORMULARIO_SELECCION: string = 'peticion-marte-formulario-seleccion';\r\nconst TOKEN_PERSONALIZADO: string = 'token-personalizado';\r\nconst IDPET: string = 'idPet';\r\nconst IDSEL: string = 'idSel';\r\n// const GVLOGIN_DESA: string = 'https://gvlogin-dsa.gva.es/gvlogin';\r\n// const GVLOGIN_PRE: string = 'https://gvlogin-pre.gva.es/gvlogin';\r\n// const GVLOGIN_PROD: string = 'https://gvlogin.gva.es/gvlogin';\r\n\r\n@Injectable()\r\nexport class ArqGvloginService extends AuthService {\r\n  //environment.gvlogin.url\r\n  //environment.gvlogin.aplicacion\r\n\r\n  public constructor(\r\n    private jwtHelper: JwtHelperService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    protected _apiService: ArqApiService,\r\n    private cookieservice: CookieService\r\n  ) {\r\n    super();\r\n    this.cargarToken();\r\n  }\r\n\r\n  public cargarToken(): any {\r\n    this.activatedRoute.queryParams.pipe(filter(params => !!params['token'])).subscribe(params => {\r\n      this.setToken(params['token']);\r\n      this.cleanUrl(params, 'token', this.router.url);\r\n    });\r\n\r\n    const existingToken = localStorage.getItem(TOKEN_KEY);\r\n    if (existingToken) {\r\n      this.setToken(existingToken);\r\n    }\r\n  }\r\n\r\n  public isLogged(): boolean {\r\n    return !!this.user$.value;\r\n  }\r\n\r\n  /**\r\n   * Redirige a la aplicación de gvLogin para iniciar sesión\r\n   */\r\n  public login(url: string, nombreApp: string, gvloginUrl: string, urlRedirect?: string): any {\r\n    //Obtener entorno + Obtener nombre APP\r\n    // let entorno = '';\r\n    // let nombreApp = url\r\n    //   .split('/')[3] //nos quedamos con la segunda parte de la URL\r\n    //   .split(/(?:\\/|-|\\.)+/)[0]\r\n    //   .toUpperCase();\r\n\r\n    // let gvloginUrl = GVLOGIN_DESA;\r\n    // console.log(url);\r\n    // if (url.includes('dsa') || url.includes('localhost')) {\r\n    //   gvloginUrl = GVLOGIN_DESA;\r\n    // } else if (url.includes('pre')) {\r\n    //   gvloginUrl = GVLOGIN_PRE;\r\n    // } else {\r\n    //   gvloginUrl = GVLOGIN_PROD;\r\n    // }\r\n    // console.log(nombreApp);\r\n\r\n    const redirectURI = urlRedirect ? urlRedirect : encodeURIComponent(window.location.href);\r\n\r\n    const gvloginFinalUrl = `${gvloginUrl}/login.xhtml?jwt=true&app=${nombreApp}&url=${redirectURI}`;\r\n    //console.log(gvloginFinalUrl);\r\n    if (nombreApp) {\r\n      localStorage.removeItem(TOKEN_MARTE);\r\n      window.location.href = gvloginFinalUrl;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cierra la sesión del usuario\r\n   */\r\n  public override logout(gvLoginUrl: string, urlRedirect: string): any {\r\n    super.logout(gvLoginUrl, urlRedirect);\r\n\r\n    localStorage.removeItem(TOKEN_KEY);\r\n    localStorage.removeItem(TOKEN_MARTE);\r\n    this.cookieservice.deleteAll('/', '.gva.es');\r\n\r\n    const redirectURI = urlRedirect ? urlRedirect : encodeURIComponent(window.location.href);\r\n    const gvloginUrl = `${gvLoginUrl}/logout?callbackUrl=${redirectURI}`;\r\n\r\n    window.location.href = gvloginUrl;\r\n  }\r\n\r\n  public setToken(token: string): any {\r\n    this.storeToken(token);\r\n    const tokenData = this.extractTokenData(token);\r\n    this.setCurrentUser(tokenData);\r\n  }\r\n\r\n  public cleanUrl(params: Params, param: string, url?: string): any {\r\n    const queryParams = { ...params };\r\n    delete queryParams[param];\r\n\r\n    this.router.navigate([url?.split('?')[0]], { queryParams });\r\n  }\r\n\r\n  private storeToken(token: string): any {\r\n    localStorage.setItem(TOKEN_KEY, token);\r\n  }\r\n\r\n  public getTokenPetMarte(): string {\r\n    let token = localStorage.getItem(TOKEN_MARTE);\r\n    if (!token) {\r\n      token = 'NO TOKEN';\r\n    }\r\n    return token;\r\n  }\r\n\r\n  public getTokenSelMarte(): string {\r\n    let token = localStorage.getItem(TOKEN_MARTE_FORMULARIO_SELECCION);\r\n    if (!token) {\r\n      token = 'NO TOKEN';\r\n    }\r\n    return token;\r\n  }\r\n\r\n  public getTokenPersonalizado(): string {\r\n    let token = localStorage.getItem(TOKEN_PERSONALIZADO);\r\n    if (!token) {\r\n      token = 'NO TOKEN';\r\n    }\r\n    return token;\r\n  }\r\n\r\n  public getToken(): string {\r\n    let token = localStorage.getItem(TOKEN_KEY);\r\n    if (!token) {\r\n      token = 'NO TOKEN';\r\n    }\r\n    return token;\r\n  }\r\n\r\n  public getIdPet(): string {\r\n    let idPet = localStorage.getItem(IDPET);\r\n    if (!idPet) {\r\n      idPet = 'NO ID PET';\r\n    }\r\n    return idPet;\r\n  }\r\n  public getIdSel(): string {\r\n    let idSel = localStorage.getItem(IDSEL);\r\n    if (!idSel) {\r\n      idSel = 'NO ID SEL';\r\n    }\r\n    return idSel;\r\n  }\r\n\r\n  public storeTokenPetMarte(token: string | null): any {\r\n    if (token) {\r\n      localStorage.setItem(TOKEN_MARTE, token);\r\n    }\r\n  }\r\n\r\n  public storeTokenPetMarteFormularioSeleccion(token: string | null): any {\r\n    if (token) {\r\n      localStorage.setItem(TOKEN_MARTE_FORMULARIO_SELECCION, token);\r\n    }\r\n  }\r\n\r\n  public storeIdPetMarte(idpet?: string): any {\r\n    if (idpet) {\r\n      localStorage.setItem(IDPET, idpet);\r\n    }\r\n  }\r\n\r\n  public storeIdSelMarte(idsel?: string): any {\r\n    if (idsel) {\r\n      localStorage.setItem(IDPET, idsel);\r\n    }\r\n  }\r\n\r\n  public storeTokenPersonalizado(token: string | null): any {\r\n    if (token) {\r\n      localStorage.setItem(TOKEN_PERSONALIZADO, token);\r\n    }\r\n  }\r\n\r\n  private extractTokenData(token: string): ArqGvloginTokenData | null {\r\n    return this.jwtHelper.decodeToken(token);\r\n  }\r\n\r\n  private setCurrentUser(data: ArqGvloginTokenData | null): any {\r\n    if (data) {\r\n      const user = {\r\n        nombre: data.given_name,\r\n        apellidos: data.family_name,\r\n        email: data.email,\r\n        roles: data.rol || []\r\n      };\r\n      this.user$.next(user);\r\n    }\r\n  }\r\n\r\n  public mostrarInfoTokenMarte(host: string): Observable<any> {\r\n    return this._apiService.get(host + '/api/marte/v1/peticiontokeninfo');\r\n  }\r\n\r\n  public buscarTokenJWT(nombreApp: string, gvLoginUrl: string): void {\r\n    if (nombreApp && gvLoginUrl) {\r\n      let datos = {\r\n        idAplicacion: nombreApp, //data['nombreApp'],\r\n        tokenSSO: this.cookieservice.get('gvlogin.login.GVLOGIN_COOKIE')\r\n      };\r\n\r\n      this._apiService\r\n        .post(gvLoginUrl + '-ws/rest/restJwt/crearTokenJwtSSO', datos) //data['gvloginUrl']\r\n        .pipe(\r\n          map((token: any) => {\r\n            console.log(token.tokenJwt);\r\n            // sustituir el token de GVLogin por el de esta respuesta\r\n            if (token.tokenJwt) {\r\n              this.setToken(token.tokenJwt);\r\n            }\r\n          }),\r\n          catchError((err, caught) => {\r\n            console.log(err);\r\n            return EMPTY;\r\n          })\r\n        )\r\n        .subscribe();\r\n    }\r\n  }\r\n}\r\n","import { HttpContextToken, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { TranslocoService } from '@ngneat/transloco';\r\nimport { ArqGvloginService } from '../services/arq-gvlogin.service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\nexport const nombreApp = new HttpContextToken(() => '');\r\nexport const gvloginUrl = new HttpContextToken(() => '');\r\nexport const enableJWT = new HttpContextToken(() => true);\r\nexport const urlRedirect = new HttpContextToken(() => '');\r\nexport const tokenPerso = new HttpContextToken(() => '');\r\nexport const enable = new HttpContextToken(() => true);\r\n\r\n@Injectable()\r\nexport class ArqGvloginInterceptorService implements HttpInterceptor {\r\n  public constructor(\r\n    private auth: ArqGvloginService,\r\n    private readonly injector: Injector,\r\n    private jwtHelper: JwtHelperService,\r\n    private _translocoService: TranslocoService,\r\n    private cookieservice: CookieService\r\n  ) {}\r\n\r\n  public intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (this.isRefreshNeeded(request)) {\r\n      if (request.context.get(enable)) {\r\n        if (\r\n          this.cookieservice.check('gvlogin.login.GVLOGIN_COOKIE') &&\r\n          request.context.get(enableJWT) &&\r\n          !this.isTokenExpired()\r\n        ) {\r\n          this.auth.buscarTokenJWT(request.context.get(nombreApp), request.context.get(gvloginUrl));\r\n        } else {\r\n          this.auth.login(\r\n            request.url,\r\n            request.context.get(nombreApp),\r\n            request.context.get(gvloginUrl),\r\n            request.context.get(urlRedirect)\r\n          );\r\n        }\r\n      }\r\n    }\r\n    if (request.url.includes('/api')) {\r\n      //Anyadimos el token de Marte\r\n      const clonedRequest = request.clone({\r\n        headers: request.headers\r\n          .set('x-peticion-marte', this.auth.getTokenPetMarte())\r\n          .set('x-peticion-marte-formulario-seleccion', this.auth.getTokenSelMarte())\r\n          .set('x-token-personalizado', this.auth.getTokenPersonalizado())\r\n          .set('Authorization', 'Bearer ' + this.auth.getToken())\r\n          .set('Content-Language', this._translocoService?.getActiveLang() == 'ca' ? 'ca-ES' : 'es-ES')\r\n      });\r\n      return next.handle(clonedRequest);\r\n    }\r\n    return next.handle(request);\r\n  }\r\n\r\n  private isRefreshNeeded(request: HttpRequest<any>): boolean {\r\n    const isRefreshNeeded = this.auth.getToken() == 'NO TOKEN' || this.isTokenExpired(); //&&\r\n    // environment.gvlogin.whitelistedDomains.some(domain => request.url.includes(domain));\r\n    // &&\r\n    return isRefreshNeeded;\r\n  }\r\n\r\n  private isTokenExpired(): boolean {\r\n    if (this.auth.getToken() === 'NO TOKEN') {\r\n      return false;\r\n    }\r\n    return this.jwtHelper.isTokenExpired(this.auth.getToken());\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n/**\r\n * Base service for every CRUD Service\r\n */\r\n@Injectable()\r\nexport abstract class Service {\r\n  constructor() {}\r\n\r\n  protected getURIEntityBase(host: string, params?: undefined): string {\r\n    return host + '/api/' + this.getURIEntity(params);\r\n  }\r\n\r\n  protected getURIEntityBasePublica(host: string, params?: undefined): string {\r\n    return host + '/apipublica/' + this.getURIEntity(params);\r\n  }\r\n\r\n  public abstract getURIEntity(params?: undefined): string;\r\n}\r\n","const DEBOUNCE_TIME: number = 500; // Tiempo para que no salten mensajes duplicados automáticamente\r\n\r\nexport class ArqSnackbarEmitedMessage {\r\n  _lastTime: number = 0;\r\n\r\n  constructor(private _message: string | undefined, private _title: string | undefined) {}\r\n\r\n  public shouldEmit(message: string | undefined, title: string | undefined): boolean {\r\n    let currentTime = new Date().getTime();\r\n    const emited = this._message === message && this._title === title && currentTime - this._lastTime < DEBOUNCE_TIME;\r\n    if (!emited) {\r\n      this.register(currentTime, message, title);\r\n    }\r\n    return !emited;\r\n  }\r\n\r\n  private register(currentTime: number, message: string | undefined, title: string | undefined) {\r\n    this._lastTime = currentTime;\r\n    this._message = message;\r\n    this._title = title;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ArqSnackBoxOptions } from '../interfaces/arq-snackbar-options.interface';\r\nimport { ArqSnackbarEmitedMessage } from '../utils/arq-snackbar-emited-message';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ArqSnackBarService {\r\n  optionsDefault: ArqSnackBoxOptions = {\r\n    closeButton: true,\r\n    progressBar: true,\r\n    positionClass: 'toast-bottom-right'\r\n  };\r\n\r\n  lastSuccess: ArqSnackbarEmitedMessage = new ArqSnackbarEmitedMessage(undefined, undefined);\r\n  lastError: ArqSnackbarEmitedMessage = new ArqSnackbarEmitedMessage(undefined, undefined);\r\n  lastInfo: ArqSnackbarEmitedMessage = new ArqSnackbarEmitedMessage(undefined, undefined);\r\n  lastWarning: ArqSnackbarEmitedMessage = new ArqSnackbarEmitedMessage(undefined, undefined);\r\n\r\n  constructor(private toastr: ToastrService) {}\r\n\r\n  showSuccess(message: string | undefined, title: string | undefined, options?: ArqSnackBoxOptions | undefined) {\r\n    if (this.lastSuccess.shouldEmit(message, title)) {\r\n      this.toastr.success(message, title, options ? options : this.optionsDefault);\r\n    }\r\n  }\r\n\r\n  showError(message: string | undefined, title: string | undefined, options?: ArqSnackBoxOptions | undefined) {\r\n    if (this.lastError.shouldEmit(message, title)) {\r\n      this.toastr.error(message, title, options ? options : this.optionsDefault);\r\n    }\r\n  }\r\n\r\n  showInfo(message: string | undefined, title: string | undefined, options?: ArqSnackBoxOptions | undefined) {\r\n    if (this.lastInfo.shouldEmit(message, title)) {\r\n      this.toastr.info(message, title, options ? options : this.optionsDefault);\r\n    }\r\n  }\r\n\r\n  showWarning(message: string | undefined, title: string | undefined, options?: ArqSnackBoxOptions | undefined) {\r\n    if (this.lastWarning.shouldEmit(message, title)) {\r\n      this.toastr.warning(message, title, options ? options : this.optionsDefault);\r\n    }\r\n  }\r\n}\r\n","import { HttpClient, HttpContext, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable, InjectionToken, inject } from '@angular/core';\r\nimport { Observable, of, Subscriber } from 'rxjs';\r\n\r\nimport { enable, enableJWT, gvloginUrl, nombreApp, tokenPerso, urlRedirect } from '../interceptors/interceptors';\r\nimport { Service } from './arq-service.service';\r\nimport { ArqSnackBarService } from './arq-snackbar.service';\r\nimport { ArqSpinnerService } from './arq-spinner.service';\r\n\r\nexport const NOM_APP = new InjectionToken<string>('NOM_APP');\r\nexport const GVLOGIN = new InjectionToken<string>('GVLOGIN');\r\n\r\n@Injectable()\r\nexport class ArqApiService extends Service {\r\n  protected nombreApp!: string;\r\n  protected gvloginUrl!: string;\r\n  protected enableJWT!: boolean;\r\n  protected enable!: boolean;\r\n  protected urlRedirect!: string;\r\n  protected tokenPerso!: string;\r\n  protected _spinner: ArqSpinnerService;\r\n  protected _http: HttpClient;\r\n  protected _snackbar: ArqSnackBarService;\r\n\r\n  public getURIEntity(params?: any): string {\r\n    throw new Error('El metodo \"getURIEntity\" debe ser sobreescrito');\r\n  }\r\n\r\n  public schema(idBloque?: string): Observable<any> {\r\n    throw new Error('El metodo \"schema\" debe ser sobreescrito');\r\n  }\r\n\r\n  public validations(controls?: any): Observable<any> {\r\n    throw new Error('El metodo \"validations\" debe ser sobreescrito');\r\n  }\r\n\r\n  public constructor(\r\n    protected _spinnerParam?: ArqSpinnerService,\r\n    protected _httpParam?: HttpClient,\r\n    protected _snackbarParam?: ArqSnackBarService\r\n  ) {\r\n    super();\r\n    this._spinner = _spinnerParam ? _spinnerParam : inject(ArqSpinnerService);\r\n    this._http = _httpParam ? _httpParam : inject(HttpClient);\r\n    this._snackbar = _snackbarParam ? _snackbarParam : inject(ArqSnackBarService);\r\n  }\r\n\r\n  private getUrlParams(params: Record<any, any>): string {\r\n    return Object.entries(params)\r\n      .map(([key, value]) => `${key}=${value}`)\r\n      .join('&');\r\n  }\r\n\r\n  /**\r\n   * @deprecated este metodo no debe usarse para nuevos desarrollos.\r\n   *\r\n   * Ahora hay que utilizar el servicio `ArqHttpClient.get()`\r\n   */\r\n  public get(url: string, params?: Record<any, any>, tipoRespuesta?: any): Observable<any> {\r\n    let data = new Observable();\r\n    const resp = tipoRespuesta ? tipoRespuesta : 'json';\r\n\r\n    if (tipoRespuesta && !['arraybuffer', 'blob', 'json', 'text'].includes(tipoRespuesta)) {\r\n      console.error(\"Tipo de respuesta NO ADMITIDO. Los valores admitidos son 'arraybuffer','blob','json','text' \");\r\n      return of();\r\n    }\r\n\r\n    if (url) {\r\n      if (params) {\r\n        url += '?' + this.getUrlParams(params);\r\n      }\r\n\r\n      this.preRequest();\r\n      data = new Observable(observer => {\r\n        this._http\r\n          .get(url, {\r\n            //observe: 'response',\r\n            responseType: resp,\r\n            context: new HttpContext()\r\n              .set(nombreApp, this.nombreApp)\r\n              .set(gvloginUrl, this.gvloginUrl)\r\n              .set(enableJWT, this.enableJWT)\r\n              .set(enable, this.enable)\r\n              .set(urlRedirect, this.urlRedirect)\r\n              .set(tokenPerso, this.tokenPerso)\r\n          })\r\n          .subscribe({\r\n            next: result => {\r\n              this.handleSuccess(observer, result, false);\r\n            },\r\n            error: error => {\r\n              this.handleError(observer, error);\r\n            }\r\n          });\r\n      });\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @deprecated este metodo no debe usarse para nuevos desarrollos.\r\n   *\r\n   * Ahora hay que utilizar el servicio `ArqHttpClient.get()`\r\n   */\r\n  public getText(url: string, params?: Record<any, any>): Observable<any> {\r\n    let data = new Observable();\r\n    if (url) {\r\n      if (params) {\r\n        url += this.getUrlParams(params);\r\n      }\r\n\r\n      this.preRequest();\r\n      data = new Observable(observer => {\r\n        this._http\r\n          .get(url, {\r\n            observe: 'response',\r\n            responseType: 'text',\r\n            context: new HttpContext()\r\n              .set(nombreApp, this.nombreApp)\r\n              .set(gvloginUrl, this.gvloginUrl)\r\n              .set(enableJWT, this.enableJWT)\r\n              .set(enable, this.enable)\r\n              .set(urlRedirect, this.urlRedirect)\r\n              .set(tokenPerso, this.tokenPerso)\r\n          })\r\n          .subscribe({\r\n            next: result => {\r\n              this.handleSuccess(observer, result, false);\r\n            },\r\n            error: error => {\r\n              this.handleError(observer, error);\r\n            }\r\n          });\r\n      });\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @deprecated este metodo no debe usarse para nuevos desarrollos.\r\n   *\r\n   * Ahora hay que utilizar el servicio `ArqHttpClient.post()`\r\n   */\r\n  public post(url: string, data: any, tipoRespuesta?: any): Observable<any> {\r\n    let obs = new Observable();\r\n    const resp = tipoRespuesta ? tipoRespuesta : 'json';\r\n\r\n    if (tipoRespuesta && !['arraybuffer', 'blob', 'json', 'text'].includes(tipoRespuesta)) {\r\n      console.error(\"Tipo de respuesta NO ADMITID. Los valores admitidos son 'arraybuffer','blob','json','text' \");\r\n      return of();\r\n    }\r\n\r\n    if (url) {\r\n      this.preRequest();\r\n      obs = new Observable(observer => {\r\n        this._http\r\n          .post(url, data, {\r\n            //observe: 'response',\r\n            responseType: resp,\r\n            context: new HttpContext()\r\n              .set(nombreApp, this.nombreApp)\r\n              .set(gvloginUrl, this.gvloginUrl)\r\n              .set(enableJWT, this.enableJWT)\r\n              .set(enable, this.enable)\r\n              .set(urlRedirect, this.urlRedirect)\r\n              .set(tokenPerso, this.tokenPerso)\r\n          })\r\n          .subscribe({\r\n            next: result => {\r\n              this.handleSuccess(observer, result, true);\r\n            },\r\n            error: error => {\r\n              this.handleError(observer, error);\r\n            }\r\n          });\r\n      });\r\n    }\r\n    return obs;\r\n  }\r\n\r\n  /**\r\n   * @deprecated este metodo no debe usarse para nuevos desarrollos.\r\n   *\r\n   * Ahora hay que utilizar el servicio `ArqHttpClient.patch()`\r\n   */\r\n  public patch(url: string, data: any): Observable<any> {\r\n    let obs = new Observable();\r\n    if (url) {\r\n      this.preRequest();\r\n      obs = new Observable(observer => {\r\n        this._http\r\n          .patch(url, data, {\r\n            context: new HttpContext()\r\n              .set(nombreApp, this.nombreApp)\r\n              .set(gvloginUrl, this.gvloginUrl)\r\n              .set(enableJWT, this.enableJWT)\r\n              .set(enable, this.enable)\r\n              .set(urlRedirect, this.urlRedirect)\r\n              .set(tokenPerso, this.tokenPerso)\r\n          })\r\n          .subscribe({\r\n            next: result => {\r\n              this.handleSuccess(observer, result, true);\r\n            },\r\n            error: error => {\r\n              this.handleError(observer, error);\r\n            }\r\n          });\r\n      });\r\n    }\r\n    return obs;\r\n  }\r\n\r\n  /**\r\n   * @deprecated este metodo no debe usarse para nuevos desarrollos.\r\n   *\r\n   * Ahora hay que utilizar el servicio `ArqHttpClient.put()`\r\n   */\r\n  public put(url: string, data: any): Observable<any> {\r\n    let obs = new Observable();\r\n    if (url) {\r\n      this.preRequest();\r\n      obs = new Observable(observer => {\r\n        this._http\r\n          .put(url, data, {\r\n            context: new HttpContext()\r\n              .set(nombreApp, this.nombreApp)\r\n              .set(gvloginUrl, this.gvloginUrl)\r\n              .set(enableJWT, this.enableJWT)\r\n              .set(enable, this.enable)\r\n              .set(urlRedirect, this.urlRedirect)\r\n              .set(tokenPerso, this.tokenPerso)\r\n          })\r\n          .subscribe({\r\n            next: result => {\r\n              this.handleSuccess(observer, result, true);\r\n            },\r\n            error: error => {\r\n              this.handleError(observer, error);\r\n            }\r\n          });\r\n      });\r\n    }\r\n    return obs;\r\n  }\r\n\r\n  /**\r\n   * @deprecated este metodo no debe usarse para nuevos desarrollos.\r\n   *\r\n   * Ahora hay que utilizar el servicio `ArqHttpClient.delete()`\r\n   */\r\n  public delete(url: string, data: any): Observable<any> {\r\n    let obs = new Observable();\r\n    if (url) {\r\n      this.preRequest();\r\n      obs = new Observable(observer => {\r\n        this._http\r\n          .delete(url + `/${data}`, {\r\n            context: new HttpContext()\r\n              .set(nombreApp, this.nombreApp)\r\n              .set(gvloginUrl, this.gvloginUrl)\r\n              .set(enableJWT, this.enableJWT)\r\n              .set(enable, this.enable)\r\n              .set(urlRedirect, this.urlRedirect)\r\n              .set(tokenPerso, this.tokenPerso)\r\n          })\r\n          .subscribe({\r\n            next: result => {\r\n              this.handleSuccess(observer, result, true);\r\n            },\r\n            error: error => {\r\n              this.handleError(observer, error);\r\n            }\r\n          });\r\n      });\r\n    }\r\n    return obs;\r\n  }\r\n\r\n  private preRequest(): void {\r\n    // console.log('preRequest' + this.nombreApp);\r\n    // console.log('preRequest' + this.gvloginUrl);\r\n    this._spinner.show();\r\n  }\r\n\r\n  private handleSuccess(observer: Subscriber<any>, result: any, successMsg: boolean): void {\r\n    this._spinner.hide();\r\n    observer.next(result);\r\n    observer.complete();\r\n    if (successMsg) {\r\n      this._snackbar.showSuccess('Datos guardados correctamente', '');\r\n    }\r\n  }\r\n\r\n  private handleError(observer: Subscriber<any>, error: HttpErrorResponse): void {\r\n    this._spinner.hide();\r\n    observer.error(error);\r\n    if (error?.error) {\r\n      this._snackbar.showError(error?.error?.message + ': ' + error?.error?.errors?.join(','), 'ERROR');\r\n    } else {\r\n      this._snackbar.showError('Error inesperado', 'ERROR');\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, inject } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\n\r\nimport { ArqApiService } from '../services/arq-api.service';\r\nimport { ArqSchemaService } from '../services/arq-schema.service';\r\nimport { Subject } from 'rxjs';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'arq-basic-component-form',\r\n  template: ''\r\n})\r\nexport class ArqBasicComponent implements OnInit {\r\n  public formGroup!: FormGroup;\r\n  public entidad: Object = {};\r\n  public schema: any;\r\n  public idBloque?: string;\r\n  public fillForm$: Subject<void> = new Subject();\r\n  protected _route!: ActivatedRoute;\r\n\r\n  constructor(protected _schemaService: ArqSchemaService, protected _apiService?: ArqApiService) {\r\n    this._route = inject(ActivatedRoute);\r\n    this.preparar();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngAfterViewInit() {\r\n    if (!this._apiService) {\r\n      this.inicializar();\r\n    }\r\n  }\r\n\r\n  public preparar(): void {\r\n    this.schema = this._route.snapshot.data['schema'];\r\n    if (!this.idBloque)\r\n      this.idBloque = this._route.snapshot.paramMap.has('idBloque')\r\n        ? this._route.snapshot.paramMap.get('idBloque')!\r\n        : this.idBloque;\r\n    if (this.schema) {\r\n      this.prepareSchema();\r\n    } else if (this._apiService) {\r\n      this._apiService.schema(this.idBloque).subscribe((schema: any) => {\r\n        this.schema = schema;\r\n        this.prepareSchema();\r\n      });\r\n    }\r\n  }\r\n\r\n  protected prepareSchema(): void {\r\n    const validations = this._schemaService._parseSchema(this.schema, this.addCustomValidationRules());\r\n    this.formGroup = this.prepareFormGroup(validations);\r\n    this._schemaService.fillModelWithDefaultValues(this.entidad, this.formGroup); //schema\r\n    this.formGroup?.updateValueAndValidity();\r\n    this.inicializar();\r\n  }\r\n\r\n  prepareFormGroup(validations: any): FormGroup<any> {\r\n    let _formBuilder = new FormBuilder();\r\n    let fGroup: FormGroup = _formBuilder.group(validations);\r\n    let property: keyof typeof validations;\r\n    for (property in validations) {\r\n      let valor = validations[property];\r\n      if (this.isListAngularDto(valor)) {\r\n        fGroup.setControl(property, new FormControl(null));\r\n      } else if (!Array.isArray(valor)) {\r\n        let anidadoGroup: FormGroup = this.prepareFormGroup(valor);\r\n        fGroup.setControl(property, anidadoGroup);\r\n      }\r\n    }\r\n    return fGroup;\r\n  }\r\n\r\n  isListAngularDto(valor: any): boolean {\r\n    if (!valor) {\r\n      return false;\r\n    }\r\n    return valor.hasOwnProperty('value') && valor.hasOwnProperty('description') && valor.hasOwnProperty('descriptionV');\r\n  }\r\n\r\n  protected inicializar(): void {}\r\n\r\n  /**\r\n   * Add custom validation rules\r\n   * Override if we need to set\r\n   */\r\n  protected addCustomValidationRules(): Object {\r\n    const validators: Object = {};\r\n    return validators;\r\n  }\r\n\r\n  public fillForm(editForm: FormGroup, entity: any, emitFillForm: boolean = true): FormGroup {\r\n    const recursivePatchValue = (form: FormGroup, data: any): void => {\r\n      Object.keys(form.controls).forEach(keycontrol => {\r\n        const control: AbstractControl = form.controls[keycontrol];\r\n        const value = data?.hasOwnProperty(keycontrol) ? data[keycontrol] : undefined;\r\n        if (control instanceof FormGroup) {\r\n          // Si el control es un FormGroup, llama recursivamente a recursivePatchValue\r\n          recursivePatchValue(control as FormGroup, value);\r\n        } else if (value !== undefined && control) {\r\n          let schemaProperty = this.schema?.properties[keycontrol];\r\n          // Aplica patchValue solo si el valor no es undefined y no emite evento\r\n          // Si el estado del control es invalid y es un numero, se trata de una fecha\r\n          if (schemaProperty?.$type && schemaProperty?.$type == 'java.util.Date' && typeof value == 'number') {\r\n            control.patchValue(new Date(value), { emitEvent: false });\r\n          } else {\r\n            control.patchValue(value, { emitEvent: false });\r\n          }\r\n        }\r\n      });\r\n    };\r\n    recursivePatchValue(editForm, entity);\r\n    if (emitFillForm) this.fillForm$.next();\r\n    return editForm;\r\n  }\r\n\r\n  public fillEntity(editForm: FormGroup, onlyDirty?: boolean): any {\r\n    let entity: Object = {};\r\n    Object.keys(editForm.controls).forEach(keycontrol => {\r\n      const control: AbstractControl = editForm.controls[keycontrol];\r\n\r\n      let incluirSoloCambios = true;\r\n      if (onlyDirty) {\r\n        incluirSoloCambios = control.dirty;\r\n      }\r\n\r\n      if (control instanceof FormControl && incluirSoloCambios) {\r\n        let value = control.value;\r\n        let schemaProperty = this.schema?.properties[keycontrol];\r\n        if (schemaProperty?.properties && this.isListAngularDto(schemaProperty.properties)) {\r\n          value = control.value?.value ? control.value : null;\r\n        }\r\n        Object.defineProperty(entity, keycontrol, {\r\n          value: value,\r\n          enumerable: true\r\n        });\r\n      }\r\n\r\n      if (control instanceof FormGroup) {\r\n        Object.defineProperty(entity, keycontrol, {\r\n          value: this.fillEntity(control as FormGroup),\r\n          enumerable: true\r\n        });\r\n      }\r\n    }, this);\r\n    return onlyDirty ? entity : { ...editForm?.value, ...entity };\r\n  }\r\n\r\n  /**\r\n   * Obtiene el formControl, solo dentro del formGroup inicial\r\n   */\r\n  public getBasicFormControl(control: string): AbstractControl {\r\n    return this.formGroup.controls[control];\r\n  }\r\n\r\n  /**\r\n   * Obtiene el formControl busca dentro de todo el objeto\r\n   */\r\n  public getFormControl(controlStr: string): FormControl {\r\n    return this.getFormControlFromForm(this.formGroup, controlStr);\r\n  }\r\n\r\n  /**\r\n   * Obtiene el formControl busca a partir del FormGroup pasado\r\n   */\r\n  public getFormControlFromForm(form: FormGroup, controlStr: string): FormControl {\r\n    let formControl: FormControl = new FormControl();\r\n\r\n    Object.keys(form.controls).forEach(keycontrol => {\r\n      const control: AbstractControl = this.formGroup.controls[keycontrol];\r\n      if (control.constructor.name === 'FormControl' && keycontrol == controlStr) {\r\n        formControl = control as FormControl;\r\n      } else if (control.constructor.name === 'FormGroup') {\r\n        this.getFormControl(controlStr);\r\n      }\r\n    }, this);\r\n\r\n    return formControl;\r\n  }\r\n\r\n  /**\r\n   * Pasando el formGroup y el mapa de errores se pintas los marcos en rojo y se muestran los errores\r\n   */\r\n  protected setErrors(form: FormGroup, errors: string[]): void {\r\n    Object.keys(form.controls).forEach(keycontrol => {\r\n      form.controls[keycontrol].setErrors(null);\r\n    }, this);\r\n    // Ordenamos los errores para agruparlos por formControl por si viniesen desordenados\r\n    errors.sort();\r\n    // declaramos variables auxiliares externas al bucle\r\n    let keyControlActivo: string = '';\r\n    let errorsMap: Record<string, string> = {};\r\n    for (let errCount: number = 0; errCount < errors.length; errCount++) {\r\n      const errorSinPadre: string = errors[errCount].substring(errors[errCount].indexOf('.') + 1);\r\n      const keyControlError: string = errorSinPadre.substring(0, errorSinPadre.indexOf(':'));\r\n      const valueControlError: string = errorSinPadre.substring(errorSinPadre.indexOf(':') + 1).trim();\r\n      if (errCount == 0) {\r\n        keyControlActivo = keyControlError;\r\n      }\r\n      if (keyControlActivo !== keyControlError) {\r\n        // damos por finalizado el actual mapa y se lo pasamos al formControl\r\n        // activo hasta el momento\r\n        form.controls[keyControlActivo].setErrors(errorsMap);\r\n        // cambiamos el keyControlActivo y reiniciamos el mapa de errores\r\n        keyControlActivo = keyControlError;\r\n        errorsMap = {};\r\n      }\r\n      // en cualquier vuelta del bucle anyadimos el error al mapa de errores\r\n      errorsMap['error_validacion_' + errCount] = valueControlError;\r\n      // si es la ultima vuelta anyadimos el ultimo mapa\r\n      if (errCount === errors.length - 1) {\r\n        form.controls[keyControlActivo].setErrors(errorsMap);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Por algun motivo los formControl con errores tienen status valid hasta que se produce un evento onBlur\r\n   * por lo que se da el caso de formGroup invalid que no muestra errores hasta que se interactua con el formControl\r\n   *\r\n   * Pasando el formGroup se fuerza la evaluacion de de la validez de los campos y asi mostramos los errores de cliente\r\n   */\r\n  protected refreshClientValidations(form: FormGroup): void {\r\n    Object.keys(form.controls).forEach(keyControl => {\r\n      // Los select dependientes dan errores con el refresco porque detectan cambios en los padres\r\n      // y eso hace que limpie de valor los hijos. Por lo que solo refrescamos los controles que angular diga\r\n      // que contienen errores.\r\n      if (form.controls[keyControl].status == 'INVALID') {\r\n        form.controls[keyControl].updateValueAndValidity({ onlySelf: true });\r\n      }\r\n    });\r\n  }\r\n\r\n  protected markAllAndRefresh(form: FormGroup): void {\r\n    Object.keys(form.controls).forEach(keyControl => {\r\n      form.controls[keyControl].markAsTouched();\r\n    });\r\n    // Utilizamos el refresco nuestro porque que tiene el control de status para evitar el bug de los\r\n    // select dependientes.\r\n    this.refreshClientValidations(form);\r\n  }\r\n\r\n  /**\r\n   * Similar a refreshClientValidations, pero para casos en los que el formulario dice que es válido.\r\n   * Esto suele sucecer cuando se guarda sin tocar nada o si se quiere mostrar las validaciones según\r\n   * se carga la pantalla.\r\n   */\r\n  protected forceValidation(formGroup: FormGroup): void {\r\n    Object.keys(formGroup.controls).forEach(controlName => {\r\n      const control = formGroup.controls[controlName];\r\n      if (control instanceof FormGroup) {\r\n        this.forceValidation(control);\r\n      } else {\r\n        control.markAsTouched();\r\n        control.markAsDirty();\r\n        control.updateValueAndValidity({ emitEvent: false });\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ArqBasicComponent } from '../../utils/arq-basic.component';\r\nimport { ArqSchemaService } from '../../services/arq-schema.service';\r\nimport { Subject, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'arq-dependent-inputs',\r\n  templateUrl: './arq-dependent-inputs.component.html',\r\n  styleUrls: ['./arq-dependent-inputs.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqDependentInputsComponent extends ArqBasicComponent implements OnInit, OnDestroy {\r\n  @Input() inputs!: any;\r\n\r\n  @Input('form') public _form!: FormGroup;\r\n\r\n  @Input() public sizeInput: string = 'small';\r\n\r\n  @Input() public loadedEvent?: Subject<void>;\r\n\r\n  public inputSelect: any;\r\n\r\n  constructor(public override _schemaService: ArqSchemaService) {\r\n    super(_schemaService);\r\n  }\r\n\r\n  subscriptions: Subscription[] = [];\r\n\r\n  override ngOnInit(): void {\r\n    this.inputs.forEach((i: any) => {\r\n      if (i.fullObject === undefined) {\r\n        i.fullObject = true;\r\n      }\r\n      if (i.filterBack === undefined) {\r\n        i.filterBack = true;\r\n      }\r\n      i.options = i.event();\r\n\r\n      const getVal = this._form.controls[i.control].value;\r\n      if (getVal != '' && getVal != null) {\r\n        this.prepareNextComponentOptions(i);\r\n      }\r\n      if (!i.sizeInput) {\r\n        i.sizeInput = 'small';\r\n      }\r\n    });\r\n\r\n    this.inputs.forEach((i: any) => {\r\n      this.subscriptions.push(\r\n        this._form.controls[i.control].valueChanges.subscribe((value: any) => {\r\n          if (this._form.value[i.control] != value) {\r\n            this.ngChanges(value, i);\r\n          }\r\n        })\r\n      );\r\n      const getVal = this._form.controls[i.control].value;\r\n      if (i.next) {\r\n        this.prepareNextComponentOptions(i);\r\n      }\r\n    });\r\n    if (this.loadedEvent) {\r\n      this.loadedEvent.subscribe(() => {\r\n        this.inputs.forEach((i: any) => {\r\n          if (i.next) {\r\n            this.prepareNextComponentOptions(i);\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  private prepareNextComponentOptions(i: any) {\r\n    this.inputs.forEach((inp: any) => {\r\n      if (i.next == inp.id) {\r\n        let previousValues = this.getPreviousValues(inp.id);\r\n        inp.options = inp.event(previousValues);\r\n        //this._form.controls[inp.control].enable();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngChanges(value: any, item: any) {\r\n    this.inputs.forEach((inp: any) => {\r\n      if (item.next == inp.id) {\r\n        let previousValues = this.getPreviousValues(inp.id);\r\n        inp.options = inp.event(previousValues);\r\n        this.setInputs(item, true);\r\n      }\r\n    });\r\n  }\r\n\r\n  getPreviousValues(id: string) {\r\n    let values: any = {};\r\n    this.inputs.forEach((inp: any) => {\r\n      if (inp.id < id) {\r\n        let value = this._form.controls[inp.control].value;\r\n        values[inp.control] = value?.value ? value.value : value;\r\n      }\r\n    });\r\n    return values;\r\n  }\r\n\r\n  setInputs(item: any, enable: boolean = false) {\r\n    this.inputs.forEach((inp: any) => {\r\n      if (item.next == inp.id) {\r\n        if (enable) this._form.controls[inp.control].enable();\r\n        this._form.controls[inp.control].setValue(null);\r\n        if (inp.next) {\r\n          this.setInputs(inp);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  evtKeyPress(evt: any, item: any) {\r\n    const val = evt.target.value;\r\n\r\n    if (val == '') {\r\n      this.setInputs(item);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscriptions.forEach(s => s.unsubscribe());\r\n  }\r\n}\r\n","<div class=\"d-flex flex-wrap\">\r\n  <ng-template ngFor let-item [ngForOf]=\"inputs\" let-i=\"index\">\r\n    <div class=\"col-md-{{ item.col || 3 }} col-12\">\r\n      <container-element [ngSwitch]=\"item.type\">\r\n        <ng-container *ngSwitchCase=\"'select'\">\r\n          <arq-select\r\n            label=\"{{ item.label }}\"\r\n            placeholder=\"{{ item.label }}\"\r\n            [emptyOption]=\"true\"\r\n            [value]=\"item.control\"\r\n            [fGroup]=\"this._form\"\r\n            [selectOptionsList]=\"item.options\"\r\n            [sizeInput]=\"item.sizeInput\"\r\n            [fullObject]=\"item.fullObject\"\r\n            (changeEvent)=\"ngChanges($event, item)\">\r\n          </arq-select>\r\n        </ng-container>\r\n        <ng-container *ngSwitchCase=\"'autocomplete'\">\r\n          <arq-autocomplete\r\n            label=\"{{ item.label }}\"\r\n            placeholder=\"{{ item.label }}\"\r\n            [sizeInput]=\"item.sizeInput\"\r\n            [options]=\"item.options\"\r\n            [value]=\"item.control\"\r\n            [fGroup]=\"this._form\"\r\n            [filterBack]=\"item.filterBack\"\r\n            [panelWidth]=\"item.panelWidth\"\r\n            (changeEvent)=\"ngChanges($event, item)\"\r\n            (keyup)=\"evtKeyPress($event, item)\">\r\n          </arq-autocomplete>\r\n        </ng-container>\r\n\r\n        <ng-container *ngSwitchDefault>\r\n          <arq-select\r\n            label=\"{{ item.label }}\"\r\n            placeholder=\"{{ item.label }}\"\r\n            [emptyOption]=\"true\"\r\n            [value]=\"item.control\"\r\n            [fGroup]=\"this._form\"\r\n            [selectOptionsList]=\"item.options\"\r\n            [sizeInput]=\"item.sizeInput\"\r\n            [fullObject]=\"item.fullObject\"\r\n            (changeEvent)=\"ngChanges($event, item)\">\r\n          </arq-select>\r\n        </ng-container>\r\n      </container-element>\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { ArqAutocompleteModule, ArqSelectModule } from '../components';\r\nimport { ArqDependentInputsComponent } from './arq-dependent-inputs.component';\r\n\r\n@NgModule({\r\n  declarations: [ArqDependentInputsComponent],\r\n  exports: [ArqDependentInputsComponent],\r\n  imports: [CommonModule, ReactiveFormsModule, ArqSelectModule, ArqAutocompleteModule]\r\n})\r\nexport class ArqDependentInputsModule {}\r\n","import { Component, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'arq-base-component',\r\n  template: ''\r\n})\r\nexport class ArqBaseComponent implements OnDestroy {\r\n  public unsubscribe$ = new Subject<void>();\r\n\r\n  public constructor() {}\r\n\r\n  public ngOnDestroy(): void {\r\n    this.unsubscribe$.next();\r\n    this.unsubscribe$.complete();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { ArqBasicComponent } from './arq-basic.component';\r\nimport { ArqPageableRequest, ArqPageableResponse } from '../interfaces/arq-basic.interface';\r\nimport { Subject, of, Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'arq-basic-componentt-form',\r\n  template: ''\r\n})\r\nexport class ArqBasicComplejoComponent extends ArqBasicComponent implements OnInit {\r\n  private validations: any;\r\n\r\n  protected override prepareSchema(): void {\r\n    this.validations = this._schemaService._parseSchema(this.schema, this.addCustomValidationRules());\r\n    let controles = this.getObjectProperties(this.schema.properties, this.entidad);\r\n    this.formGroup = new FormGroup(controles);\r\n    this.formGroup?.updateValueAndValidity();\r\n    this.inicializar();\r\n  }\r\n\r\n  public fillFormAplanado(editForm: FormGroup, entity: any): FormGroup {\r\n    return this._fillForm(editForm, this.schema.properties, entity);\r\n  }\r\n\r\n  public fillEntityAplanado(editForm: FormGroup, listadosObjetos?: any): any {\r\n    return this.fillEntityInterno(editForm, this.schema.properties, listadosObjetos);\r\n  }\r\n\r\n  private fillEntityInterno(\r\n    editForm: FormGroup,\r\n    properties: any = this.schema.properties,\r\n    listadosObjetos?: any,\r\n    objetoRecompuesto: any = {},\r\n    parent?: string\r\n  ): any {\r\n    Object.keys(properties).forEach(e => {\r\n      const concatenado = parent ? parent.concat('.').concat(e) : e;\r\n      if (properties[e].type === 'object') {\r\n        objetoRecompuesto = {\r\n          ...objetoRecompuesto,\r\n          [e]: {\r\n            ...this.fillEntityInterno(editForm, properties[e].properties, listadosObjetos, {}, concatenado)\r\n          }\r\n        };\r\n      } else if (properties[e].type === 'array') {\r\n        if (listadosObjetos && listadosObjetos[e]) {\r\n          objetoRecompuesto = {\r\n            ...objetoRecompuesto,\r\n            [e]: listadosObjetos[e]\r\n          };\r\n        }\r\n        this.fillEntityInterno(\r\n          editForm,\r\n          properties[e].items.properties,\r\n          listadosObjetos,\r\n          objetoRecompuesto,\r\n          concatenado\r\n        );\r\n      } else {\r\n        Object.keys(editForm.getRawValue()).forEach(keyForm => {\r\n          if (concatenado === keyForm) {\r\n            objetoRecompuesto = { ...objetoRecompuesto, [e]: editForm.getRawValue()[keyForm] };\r\n          }\r\n        });\r\n      }\r\n    });\r\n    return objetoRecompuesto;\r\n  }\r\n\r\n  public getObjectProperties(\r\n    properties: any,\r\n    data: any,\r\n    validations: any = this.validations,\r\n    controles: any = {},\r\n    parent?: string\r\n  ): any {\r\n    Object.keys(properties).forEach((e: string) => {\r\n      const concatenado = parent ? parent.concat('.').concat(e) : e;\r\n      if (properties[e].type === 'object') {\r\n        controles = this.getObjectProperties(\r\n          properties[e].properties,\r\n          data ? data[e] : undefined,\r\n          validations[e],\r\n          controles,\r\n          concatenado\r\n        );\r\n      } else if (properties[e].type !== 'array') {\r\n        controles = {\r\n          ...controles,\r\n          [concatenado]: new FormControl(data ? data[e] : undefined, validations[e] ? validations[e][1] : [])\r\n        };\r\n      }\r\n    });\r\n    return controles;\r\n  }\r\n\r\n  private _fillForm(editForm: FormGroup, properties: any, data: any, parent?: string): any {\r\n    properties &&\r\n      Object.keys(properties).forEach((e: string) => {\r\n        const concatenado = parent ? parent.concat('.').concat(e) : e;\r\n        if (properties[e].type === 'object') {\r\n          data && this._fillForm(editForm, properties[e].properties, data[e], concatenado);\r\n        } else if (properties[e].type !== 'array') {\r\n          Object.keys(editForm.controls).forEach(keyForm => {\r\n            if (concatenado === keyForm) {\r\n              if (properties[e]?.$type == 'java.util.Date' && data && typeof data[e] == 'number') {\r\n                editForm.controls[keyForm].setValue(new Date(data[e]));\r\n              } else {\r\n                editForm.controls[keyForm].setValue(data && data[e] ? data[e] : undefined);\r\n              }\r\n            }\r\n          });\r\n        }\r\n      });\r\n    return editForm;\r\n  }\r\n  public recuperarListados(data: any): any {\r\n    return this._recuperarListados(this.schema.properties, data);\r\n  }\r\n\r\n  private _recuperarListados(\r\n    properties: any,\r\n    data: any,\r\n    listadosObjeto: { [key: string]: Array<any> } = {},\r\n    parent?: string\r\n  ): { [key: string]: Array<any> } {\r\n    properties &&\r\n      Object.keys(properties).forEach((e: string) => {\r\n        const concatenado = parent ? parent.concat('.').concat(e) : e;\r\n        if (properties[e].type === 'object') {\r\n          data && this._recuperarListados(properties[e].properties, data[e], listadosObjeto, concatenado);\r\n        } else if (properties[e].type === 'array') {\r\n          listadosObjeto = { ...listadosObjeto, [e]: data && data[e] ? [...data[e]] : [] };\r\n          this._recuperarListados(\r\n            properties[e].items.properties,\r\n            data ? data[e] : undefined,\r\n            listadosObjeto,\r\n            concatenado\r\n          );\r\n        }\r\n      });\r\n    return listadosObjeto;\r\n  }\r\n  public getSubFormularios(): { [key: string]: FormGroup } {\r\n    return this._getSubFormularios(this.schema.properties, this.validations);\r\n  }\r\n  private _getSubFormularios(\r\n    properties: any,\r\n    validations: any = this.validations,\r\n    subformularios: { [key: string]: FormGroup } = {},\r\n    parent?: string\r\n  ): { [key: string]: FormGroup } {\r\n    Object.keys(properties).forEach((e: string) => {\r\n      const concatenado = parent ? parent.concat('.').concat(e) : e;\r\n      if (properties[e].type === 'object') {\r\n        subformularios = this._getSubFormularios(properties[e].properties, validations[e], subformularios, concatenado);\r\n      } else if (properties[e].type === 'array') {\r\n        let controles = this.getObjectProperties(\r\n          properties[e].items.properties,\r\n          undefined,\r\n          validations[e] ? validations[e][0] : []\r\n        );\r\n        subformularios = { ...subformularios, [e]: new FormGroup(controles) };\r\n        this._getSubFormularios(properties[e].items.properties, validations, subformularios, concatenado);\r\n      }\r\n    });\r\n    return subformularios;\r\n  }\r\n\r\n  public UtilDatatableInMemory = (): {\r\n    requireData: (request: ArqPageableRequest, arrayToPaginate: any[]) => Observable<ArqPageableResponse>;\r\n    editRowInMemory: (row: any, arrayToEdit: any[]) => void;\r\n    deleteRowInMemory: (row: any, arrayToEdit: any[]) => void;\r\n  } => {\r\n    const requireDataInMemory = (\r\n      request: ArqPageableRequest,\r\n      arrayToPaginate: any[] = []\r\n    ): Observable<ArqPageableResponse> => {\r\n      return new Observable(subscriber => {\r\n        of(arrayToPaginate).subscribe({\r\n          next: (value: any) => {\r\n            const startIndex = request.page * request.size;\r\n            const endIndex = startIndex + request.size;\r\n            const paginatedArray = value.slice(startIndex, endIndex);\r\n            const totalPages = Math.ceil(value.length / request.size);\r\n            const totalElements = value.length;\r\n            const numberOfElements = paginatedArray.length;\r\n            const transformedObject: ArqPageableResponse = {\r\n              content: paginatedArray,\r\n              pageable: {\r\n                sort: {\r\n                  sorted: false,\r\n                  unsorted: true,\r\n                  empty: true\r\n                },\r\n                offset: startIndex,\r\n                pageNumber: request.page,\r\n                pageSize: request.size,\r\n                unpaged: false,\r\n                paged: true\r\n              },\r\n              last: request.page === totalPages,\r\n              totalPages: totalPages,\r\n              totalElements: totalElements,\r\n              size: request.size,\r\n              number: request.page - 1,\r\n              sort: {\r\n                sorted: false,\r\n                unsorted: true,\r\n                empty: true\r\n              },\r\n              first: request.page === 1,\r\n              numberOfElements: numberOfElements,\r\n              empty: numberOfElements === 0\r\n            };\r\n            subscriber.next(transformedObject);\r\n            subscriber.complete();\r\n          }\r\n        });\r\n      });\r\n    };\r\n\r\n    const editRow = (row: any, arrayToEdit: any[] = []): void => {\r\n      if (row.newRow) {\r\n        arrayToEdit.push({ ...row, newRow: false, isCreate: false });\r\n      } else {\r\n        const objIndex = arrayToEdit.findIndex(obj => obj.id == row.id);\r\n        arrayToEdit[objIndex] = { ...row, isEdit: false };\r\n      }\r\n    };\r\n    const deleteRow = (row: any, arrayToDelete: any[] = []): void => {\r\n      arrayToDelete.splice(\r\n        arrayToDelete.findIndex(obj => obj.id == row.id),\r\n        1\r\n      );\r\n    };\r\n    return { editRowInMemory: editRow, requireData: requireDataInMemory, deleteRowInMemory: deleteRow };\r\n  };\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ArqBasicComponent } from './arq-basic.component';\r\nimport { ArqBasicComplejoComponent } from './arq-basic-complejo.component';\r\n@NgModule({\r\n  declarations: [ArqBasicComponent,ArqBasicComplejoComponent],\r\n  exports: [ArqBasicComponent,ArqBasicComplejoComponent],\r\n  imports: [ReactiveFormsModule, CommonModule]\r\n})\r\nexport class ArqBasicModule {}\r\n","import { Injectable, inject } from '@angular/core';\r\nimport { ArqFileConfig } from '../interfaces/arq-file-config.interface';\r\nimport { Observable, finalize, forkJoin, tap } from 'rxjs';\r\nimport { ArqSpinnerService } from './arq-spinner.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ArqDownloadFileService {\r\n  constructor() {}\r\n\r\n  private _arqSpinnerService: ArqSpinnerService = inject(ArqSpinnerService);\r\n\r\n  public textFileDownload(config: ArqFileConfig) {\r\n    if (config) {\r\n      config.action().subscribe((res: any) => {\r\n        this.writeContents(res, `${config.name}.${config.type}`, config.contentType);\r\n      });\r\n    }\r\n  }\r\n\r\n  private writeContents(content: BlobPart, fileName: string, contentType: string) {\r\n    const a = document.createElement('a');\r\n    const file = new Blob([content], { type: contentType });\r\n    a.href = URL.createObjectURL(file);\r\n    a.download = fileName;\r\n    a.click();\r\n  }\r\n\r\n  public textFileDownloadMultiple(configs: ArqFileConfig[], showSpinner: boolean = true): Observable<any> {\r\n    if (showSpinner) {\r\n      this._arqSpinnerService.show();\r\n    }\r\n    return forkJoin(\r\n      configs.map((config: ArqFileConfig) =>\r\n        config.action().pipe(\r\n          tap((res: any) => {\r\n            this.writeContents(res, `${config.name}.${config.type}`, config.contentType);\r\n          })\r\n        )\r\n      )\r\n    ).pipe(\r\n      finalize(() => {\r\n        if (showSpinner) {\r\n          this._arqSpinnerService.hide();\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { Observable } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { ArqUploadFilesDialogComponent } from '../components/arq-upload-files-dialog/arq-upload-files-dialog.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ArqUploadFilesDialogService {\r\n  constructor(private dialog: MatDialog) {}\r\n  dialogRef!: MatDialogRef<ArqUploadFilesDialogComponent>;\r\n\r\n  public open(options: {\r\n    cancelBtn: boolean;\r\n    confirmBtn: boolean;\r\n    textCancel: string;\r\n    textConfirm: string;\r\n    config: any;\r\n    label: string;\r\n  }) {\r\n    this.dialogRef = this.dialog.open(ArqUploadFilesDialogComponent, {\r\n      data: {\r\n        cancelBtn: options.cancelBtn,\r\n        confirmBtn: options.confirmBtn,\r\n        textCancel: options.textCancel,\r\n        textConfirm: options.textConfirm,\r\n        config: options.config,\r\n        label: options.label\r\n      }\r\n    });\r\n  }\r\n  public confirmed(): Observable<any> {\r\n    return this.dialogRef.afterClosed().pipe(\r\n      take(1),\r\n      map(res => {\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  public close() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { HttpClient, HttpContext, HttpEvent, HttpHeaders, HttpParams, HttpRequest, HttpResponse } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { enable, gvloginUrl, nombreApp } from '../interceptors/arq-gvlogin-interceptor.service';\r\n\r\ninterface Environment {\r\n  name: string\r\n  production: boolean\r\n  isDebugMode: boolean\r\n  pai: Pai\r\n  gvlogin: Gvlogin\r\n  settings: Settings\r\n  locale: Locale\r\n}\r\n\r\ninterface Pai {\r\n  aplicacion: string\r\n  apiKey: string\r\n}\r\n\r\ninterface Gvlogin {\r\n  enable: boolean\r\n  aplicacion: string\r\n  url: string\r\n  tokenKey: string\r\n  tokenPeticionMarte: string\r\n  whitelistedDomains: string[]\r\n}\r\n\r\ninterface Settings {\r\n  api: Api\r\n  name: string\r\n  host: string\r\n  hostDynamic: string\r\n}\r\n\r\ninterface Api {\r\n  version: string\r\n  url: string\r\n}\r\n\r\ninterface Locale {\r\n  default: string\r\n  cultures: string[]\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ArqHttpClient {\r\n\r\n  constructor(\r\n    protected _httpClient: HttpClient,\r\n    @Inject('env') private _env: Environment\r\n  ) { }\r\n\r\n  private _addGvLoginContext(context: HttpContext | undefined): HttpContext {\r\n    if(!context) {\r\n      context = new HttpContext()\r\n    }\r\n    context.set(nombreApp, this._env.gvlogin.aplicacion)\r\n    context.set(gvloginUrl, this._env.gvlogin.url)\r\n    context.set(enable, this._env.gvlogin.enable)\r\n    return context\r\n  }\r\n\r\n  /**\r\n   * Sends an `HttpRequest` and returns a stream of `HttpEvent`s.\r\n   *\r\n   * @return An `Observable` of the response, with the response body as a stream of `HttpEvent`s.\r\n   */\r\n  public request<R>(req: HttpRequest<any>): Observable<HttpEvent<R>>;\r\n\r\n  /**\r\n   * Constructs a request that interprets the body as an `ArrayBuffer` and returns the response in\r\n   * an `ArrayBuffer`.\r\n   *\r\n   * @param method  The HTTP method.\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   *\r\n   * @return An `Observable` of the response, with the response body as an `ArrayBuffer`.\r\n   */\r\n  public request(method: string, url: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'arraybuffer'; withCredentials?: boolean | undefined; }): Observable<ArrayBuffer>;\r\n\r\n  /**\r\n   * Constructs a request that interprets the body as a blob and returns\r\n   * the response as a blob.\r\n   *\r\n   * @param method  The HTTP method.\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the response, with the response body of type `Blob`.\r\n   */\r\n  public request(method: string, url: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'blob'; withCredentials?: boolean | undefined; }): Observable<Blob>;\r\n\r\n  /**\r\n   * Constructs a request that interprets the body as a text string and\r\n   * returns a string value.\r\n   *\r\n   * @param method  The HTTP method.\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the response, with the response body of type string.\r\n   */\r\n  public request(method: string, url: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'text'; withCredentials?: boolean | undefined; }): Observable<string>;\r\n\r\n  /**\r\n   * Constructs a request that interprets the body as an `ArrayBuffer` and returns the\r\n   * the full event stream.\r\n   *\r\n   * @param method  The HTTP method.\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the response, with the response body as an array of `HttpEvent`s for\r\n   * the request.\r\n   */\r\n  public request(method: string, url: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; observe: 'events'; reportProgress?: boolean | undefined; responseType: 'arraybuffer'; withCredentials?: boolean | undefined; }): Observable<HttpEvent<ArrayBuffer>>;\r\n\r\n  /**\r\n   * Constructs a request that interprets the body as a `Blob` and returns\r\n   * the full event stream.\r\n   *\r\n   * @param method  The HTTP method.\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of all `HttpEvent`s for the request,\r\n   * with the response body of type `Blob`.\r\n   */\r\n  public request(method: string, url: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'blob'; withCredentials?: boolean | undefined; }): Observable<HttpEvent<Blob>>;\r\n\r\n  /**\r\n   * Constructs a request which interprets the body as a text string and returns the full event\r\n   * stream.\r\n   *\r\n   * @param method  The HTTP method.\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of all `HttpEvent`s for the request,\r\n   * with the response body of type string.\r\n   */\r\n  public request(method: string, url: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'text'; withCredentials?: boolean | undefined; }): Observable<HttpEvent<string>>;\r\n\r\n  /**\r\n   * Constructs a request which interprets the body as a JavaScript object and returns the full\r\n   * event stream.\r\n   *\r\n   * @param method  The HTTP method.\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the  public request.\r\n   *\r\n   * @return An `Observable` of all `HttpEvent`s for the request,\r\n   * with the response body of type `Object`.\r\n   */\r\n  public request(method: string, url: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; reportProgress?: boolean | undefined; observe: 'events'; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; }): Observable<HttpEvent<any>>;\r\n\r\n  /**\r\n   * Constructs a request which interprets the body as a JavaScript object and returns the full\r\n   * event stream.\r\n   *\r\n   * @param method  The HTTP method.\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of all `HttpEvent`s for the request,\r\n   * with the response body of type `R`.\r\n   */\r\n  public request<R>(method: string, url: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; reportProgress?: boolean | undefined; observe: 'events'; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; }): Observable<HttpEvent<R>>;\r\n\r\n  /**\r\n   * Constructs a request which interprets the body as an `ArrayBuffer`\r\n   * and returns the full `HttpResponse`.\r\n   *\r\n   * @param method  The HTTP method.\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the `HttpResponse`, with the response body as an `ArrayBuffer`.\r\n   */\r\n  public request(method: string, url: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'arraybuffer'; withCredentials?: boolean | undefined; }): Observable<HttpResponse<ArrayBuffer>>;\r\n\r\n  /**\r\n   * Constructs a request which interprets the body as a `Blob` and returns the full `HttpResponse`.\r\n   *\r\n   * @param method  The HTTP method.\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the `HttpResponse`, with the response body of type `Blob`.\r\n   */\r\n  public request(method: string, url: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'blob'; withCredentials?: boolean | undefined; }): Observable<HttpResponse<Blob>>;\r\n\r\n  /**\r\n   * Constructs a request which interprets the body as a text stream and returns the full\r\n   * `HttpResponse`.\r\n   *\r\n   * @param method  The HTTP method.\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the HTTP response, with the response body of type string.\r\n   */\r\n  public request(method: string, url: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'text'; withCredentials?: boolean | undefined; }): Observable<HttpResponse<string>>;\r\n\r\n  /**\r\n   * Constructs a request which interprets the body as a JavaScript object and returns the full\r\n   * `HttpResponse`.\r\n   *\r\n   * @param method  The HTTP method.\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the full `HttpResponse`,\r\n   * with the response body of type `Object`.\r\n   */\r\n  public request(method: string, url: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; reportProgress?: boolean | undefined; observe: 'response'; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; }): Observable<HttpResponse<Object>>;\r\n\r\n  /**\r\n   * Constructs a request which interprets the body as a JavaScript object and returns\r\n   * the full `HttpResponse` with the response body in the requested type.\r\n   *\r\n   * @param method  The HTTP method.\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return  An `Observable` of the full `HttpResponse`, with the response body of type `R`.\r\n   */\r\n  public request<R>(method: string, url: string, options: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; reportProgress?: boolean | undefined; observe: 'response'; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; }): Observable<HttpResponse<R>>;\r\n\r\n  /**\r\n   * Constructs a request which interprets the body as a JavaScript object and returns the full\r\n   * `HttpResponse` as a JavaScript object.\r\n   *\r\n   * @param method  The HTTP method.\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the `HttpResponse`, with the response body of type `Object`.\r\n   */\r\n  public request(method: string, url: string, options?: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; responseType?: 'json' | undefined; reportProgress?: boolean | undefined; withCredentials?: boolean | undefined; } | undefined): Observable<Object>;\r\n\r\n  /**\r\n   * Constructs a request which interprets the body as a JavaScript object\r\n   * with the response body of the requested type.\r\n   *\r\n   * @param method  The HTTP method.\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the `HttpResponse`, with the response body of type `R`.\r\n   */\r\n  public request<R>(method: string, url: string, options?: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; responseType?: 'json' | undefined; reportProgress?: boolean | undefined; withCredentials?: boolean | undefined; } | undefined): Observable<R>;\r\n\r\n  /**\r\n   * Constructs a request where response type and requested observable are not known statically.\r\n   *\r\n   * @param method  The HTTP method.\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the requested response, with body of type `any`.\r\n   */\r\n  public request(method: string, url: string, options?: { body?: any; headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; observe?: 'body' | 'events' | 'response' | undefined; reportProgress?: boolean | undefined; responseType?: 'arraybuffer' | 'blob' | 'text' | 'json' | undefined; withCredentials?: boolean | undefined; } | undefined): Observable<any>;\r\n\r\n  public request<R>(method: any, url?: any, options: any = {}): Observable<any> | Observable<HttpEvent<R>> | Observable<ArrayBuffer> | Observable<Blob> | Observable<string> | Observable<HttpEvent<ArrayBuffer>> | Observable<HttpEvent<Blob>> | Observable<HttpEvent<string>> | Observable<HttpEvent<any>> | Observable<HttpEvent<R>> | Observable<HttpResponse<ArrayBuffer>> | Observable<HttpResponse<Blob>> | Observable<HttpResponse<string>> | Observable<HttpResponse<Object>> | Observable<HttpResponse<R>> | Observable<Object> | Observable<R> {\r\n    // implementation\r\n    options = {\r\n      ...options,\r\n      context: this._addGvLoginContext(options.context)\r\n    }\r\n    return this._httpClient.request<R>(method, url, options)\r\n  }\r\n\r\n  /**\r\n   * Constructs a `DELETE` request that interprets the body as an `ArrayBuffer`\r\n   *  and returns the response as an `ArrayBuffer`.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return  An `Observable` of the response body as an `ArrayBuffer`.\r\n   */\r\n  public delete(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'arraybuffer'; withCredentials?: boolean | undefined; body?: any; }): Observable<ArrayBuffer>;\r\n\r\n  /**\r\n   * Constructs a `DELETE` request that interprets the body as a `Blob` and returns\r\n   * the response as a `Blob`.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the response body as a `Blob`.\r\n   */\r\n  public delete(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'blob'; withCredentials?: boolean | undefined; body?: any; }): Observable<Blob>;\r\n\r\n  /**\r\n   * Constructs a `DELETE` request that interprets the body as a text string and returns\r\n   * a string.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the response, with the response body of type string.\r\n   */\r\n  public delete(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'text'; withCredentials?: boolean | undefined; body?: any; }): Observable<string>;\r\n\r\n  /**\r\n   * Constructs a `DELETE` request that interprets the body as an `ArrayBuffer`\r\n   *  and returns the full event stream.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of all `HttpEvent`s for the request,\r\n   * with response body as an `ArrayBuffer`.\r\n   */\r\n  public delete(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'arraybuffer'; withCredentials?: boolean | undefined; body?: any; }): Observable<HttpEvent<ArrayBuffer>>;\r\n\r\n  /**\r\n   * Constructs a `DELETE` request that interprets the body as a `Blob`\r\n   *  and returns the full event stream.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of all the `HttpEvent`s for the request, with the response body as a\r\n   * `Blob`.\r\n   */\r\n  public delete(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'blob'; withCredentials?: boolean | undefined; body?: any; }): Observable<HttpEvent<Blob>>;\r\n\r\n  /**\r\n   * Constructs a `DELETE` request that interprets the body as a text string\r\n   * and returns the full event stream.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of all `HttpEvent`s for the request, with the response\r\n   * body of type string.\r\n   */\r\n  public delete(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'text'; withCredentials?: boolean | undefined; body?: any; }): Observable<HttpEvent<string>>;\r\n\r\n  /**\r\n   * Constructs a `DELETE` request that interprets the body as JSON\r\n   * and returns the full event stream.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of all `HttpEvent`s for the request, with response body of\r\n   * type `Object`.\r\n   */\r\n  public delete(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; body?: any; }): Observable<HttpEvent<Object>>;\r\n\r\n  /**\r\n   * Constructs a `DELETE`request that interprets the body as JSON\r\n   * and returns the full event stream.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of all the `HttpEvent`s for the request, with a response\r\n   * body in the requested type.\r\n   */\r\n  public delete<T>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; body?: any; }): Observable<HttpEvent<T>>;\r\n\r\n  /**\r\n   * Constructs a `DELETE` request that interprets the body as an `ArrayBuffer` and returns\r\n   *  the full `HttpResponse`.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the full `HttpResponse`, with the response body as an `ArrayBuffer`.\r\n   */\r\n  public delete(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'arraybuffer'; withCredentials?: boolean | undefined; body?: any; }): Observable<HttpResponse<ArrayBuffer>>;\r\n\r\n  /**\r\n   * Constructs a `DELETE` request that interprets the body as a `Blob` and returns the full\r\n   * `HttpResponse`.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the `HttpResponse`, with the response body of type `Blob`.\r\n   */\r\n  public delete(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'blob'; withCredentials?: boolean | undefined; body?: any; }): Observable<HttpResponse<Blob>>;\r\n\r\n  /**\r\n   * Constructs a `DELETE` request that interprets the body as a text stream and\r\n   *  returns the full `HttpResponse`.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the full `HttpResponse`, with the response body of type string.\r\n   */\r\n  public delete(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'text'; withCredentials?: boolean | undefined; body?: any; }): Observable<HttpResponse<string>>;\r\n\r\n  /**\r\n   * Constructs a `DELETE` request the interprets the body as a JavaScript object and returns\r\n   * the full `HttpResponse`.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the `HttpResponse`, with the response body of type `Object`.\r\n   *\r\n   */\r\n  public delete(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; body?: any; }): Observable<HttpResponse<Object>>;\r\n\r\n  /**\r\n   * Constructs a `DELETE` request that interprets the body as JSON\r\n   * and returns the full `HttpResponse`.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the `HttpResponse`, with the response body of the requested type.\r\n   */\r\n  public delete<T>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; body?: any; }): Observable<HttpResponse<T>>;\r\n\r\n  /**\r\n   * Constructs a `DELETE` request that interprets the body as JSON and\r\n   * returns the response body as an object parsed from JSON.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the response, with the response body of type `Object`.\r\n   */\r\n  public delete(url: string, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; body?: any; } | undefined): Observable<Object>;\r\n\r\n  /**\r\n   * Constructs a DELETE request that interprets the body as JSON and returns\r\n   * the response in a given type.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the `HttpResponse`, with response body in the requested type.\r\n   */\r\n  public delete<T>(url: string, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; body?: any; } | undefined): Observable<T>;\r\n\r\n  public delete<T>(url: any, options: any = {}): Observable<ArrayBuffer> | Observable<Blob> | Observable<string> | Observable<HttpEvent<ArrayBuffer>> | Observable<HttpEvent<Blob>> | Observable<HttpEvent<string>> | Observable<HttpResponse<ArrayBuffer>> | Observable<HttpResponse<Blob>> | Observable<HttpResponse<string>> | Observable<HttpResponse<Object>> | Observable<Object> | Observable<HttpEvent<Object>> | Observable<HttpEvent<T>> | Observable<HttpResponse<T>> | Observable<T> {\r\n    // implementation\r\n    options = {\r\n      ...options,\r\n      context: this._addGvLoginContext(options.context)\r\n    }\r\n    return this._httpClient.delete<T>(url, options)\r\n  }\r\n\r\n  /**\r\n   * Constructs a `GET` request that interprets the body as an `ArrayBuffer` and returns the\r\n   * response in an `ArrayBuffer`.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the response, with the response body as an `ArrayBuffer`.\r\n   */\r\n  public get(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'arraybuffer'; withCredentials?: boolean | undefined; }): Observable<ArrayBuffer>;\r\n\r\n  /**\r\n   * Constructs a `GET` request that interprets the body as a `Blob`\r\n   * and returns the response as a `Blob`.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the response, with the response body as a `Blob`.\r\n   */\r\n  public get(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'blob'; withCredentials?: boolean | undefined; }): Observable<Blob>;\r\n\r\n  /**\r\n   * Constructs a `GET` request that interprets the body as a text string\r\n   * and returns the response as a string value.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the response, with the response body of type string.\r\n   */\r\n  public get(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'text'; withCredentials?: boolean | undefined; }): Observable<string>;\r\n\r\n  /**\r\n   * Constructs a `GET` request that interprets the body as an `ArrayBuffer` and returns\r\n   *  the full event stream.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of all `HttpEvent`s for the request, with the response\r\n   * body as an `ArrayBuffer`.\r\n   */\r\n  public get(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'arraybuffer'; withCredentials?: boolean | undefined; }): Observable<HttpEvent<ArrayBuffer>>;\r\n\r\n  /**\r\n   * Constructs a `GET` request that interprets the body as a `Blob` and\r\n   * returns the full event stream.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the response, with the response body as a `Blob`.\r\n   */\r\n  public get(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'blob'; withCredentials?: boolean | undefined; }): Observable<HttpEvent<Blob>>;\r\n\r\n  /**\r\n   * Constructs a `GET` request that interprets the body as a text string and returns\r\n   * the full event stream.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the response, with the response body of type string.\r\n   */\r\n  public get(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'text'; withCredentials?: boolean | undefined; }): Observable<HttpEvent<string>>;\r\n\r\n  /**\r\n   * Constructs a `GET` request that interprets the body as JSON\r\n   * and returns the full event stream.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the response, with the response body of type `Object`.\r\n   */\r\n  public get(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; }): Observable<HttpEvent<Object>>;\r\n\r\n  /**\r\n   * Constructs a `GET` request that interprets the body as JSON and returns the full\r\n   * event stream.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the response, with a response body in the requested type.\r\n   */\r\n  public get<T>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; }): Observable<HttpEvent<T>>;\r\n\r\n  /**\r\n   * Constructs a `GET` request that interprets the body as an `ArrayBuffer` and\r\n   * returns the full `HttpResponse`.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the `HttpResponse` for the request,\r\n   * with the response body as an `ArrayBuffer`.\r\n   */\r\n  public get(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'arraybuffer'; withCredentials?: boolean | undefined; }): Observable<HttpResponse<ArrayBuffer>>;\r\n\r\n  /**\r\n   * Constructs a `GET` request that interprets the body as a `Blob` and\r\n   * returns the full `HttpResponse`.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the `HttpResponse` for the request,\r\n   * with the response body as a `Blob`.\r\n   */\r\n  public get(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'blob'; withCredentials?: boolean | undefined; }): Observable<HttpResponse<Blob>>;\r\n\r\n  /**\r\n   * Constructs a `GET` request that interprets the body as a text stream and\r\n   * returns the full `HttpResponse`.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the `HttpResponse` for the request,\r\n   * with the response body of type string.\r\n   */\r\n  public get(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'text'; withCredentials?: boolean | undefined; }): Observable<HttpResponse<string>>;\r\n\r\n  /**\r\n   * Constructs a `GET` request that interprets the body as JSON and\r\n   * returns the full `HttpResponse`.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the full `HttpResponse`,\r\n   * with the response body of type `Object`.\r\n   */\r\n  public get(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; }): Observable<HttpResponse<Object>>;\r\n\r\n  /**\r\n   * Constructs a `GET` request that interprets the body as JSON and\r\n   * returns the full `HttpResponse`.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the full `HttpResponse` for the request,\r\n   * with a response body in the requested type.\r\n   */\r\n  public get<T>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; }): Observable<HttpResponse<T>>;\r\n\r\n  /**\r\n   * Constructs a `GET` request that interprets the body as JSON and\r\n   * returns the response body as an object parsed from JSON.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   *\r\n   * @return An `Observable` of the response body as a JavaScript object.\r\n   */\r\n  public get(url: string, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; } | undefined): Observable<Object>;\r\n\r\n  /**\r\n   * Constructs a `GET` request that interprets the body as JSON and returns\r\n   * the response body in a given type.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the `HttpResponse`, with a response body in the requested type.\r\n   */\r\n  public get<T>(url: string, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; } | undefined): Observable<T>;\r\n\r\n  public get<T>(url: any, options: any = {}): Observable<ArrayBuffer> | Observable<Blob> | Observable<string> | Observable<HttpEvent<ArrayBuffer>> | Observable<HttpEvent<Blob>> | Observable<HttpEvent<string>> | Observable<HttpResponse<ArrayBuffer>> | Observable<HttpResponse<Blob>> | Observable<HttpResponse<string>> | Observable<HttpResponse<Object>> | Observable<Object> | Observable<HttpEvent<Object>> | Observable<HttpEvent<T>> | Observable<HttpResponse<T>> | Observable<T> {\r\n    // implementation\r\n    options = {\r\n      ...options,\r\n      context: this._addGvLoginContext(options.context)\r\n    }\r\n    return this._httpClient.get<T>(url, options)\r\n  }\r\n\r\n  /**\r\n   * Constructs a `HEAD` request that interprets the body as an `ArrayBuffer` and\r\n   * returns the response as an `ArrayBuffer`.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the response, with the response body as an `ArrayBuffer`.\r\n   */\r\n  public head(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'arraybuffer'; withCredentials?: boolean | undefined; }): Observable<ArrayBuffer>;\r\n\r\n  /**\r\n   * Constructs a `HEAD` request that interprets the body as a `Blob` and returns\r\n   * the response as a `Blob`.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return  An `Observable` of the response, with the response body as a `Blob`.\r\n   */\r\n  public head(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'blob'; withCredentials?: boolean | undefined; }): Observable<Blob>;\r\n\r\n  /**\r\n   * Constructs a `HEAD` request that interprets the body as a text string and returns the response\r\n   * as a string value.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the response, with the response body of type string.\r\n   */\r\n  public head(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'text'; withCredentials?: boolean | undefined; }): Observable<string>;\r\n\r\n  /**\r\n   * Constructs a `HEAD` request that interprets the body as an  `ArrayBuffer`\r\n   *  and returns the full event stream.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of all `HttpEvent`s for the request,\r\n   * with the response body as an `ArrayBuffer`.\r\n   */\r\n  public head(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'arraybuffer'; withCredentials?: boolean | undefined; }): Observable<HttpEvent<ArrayBuffer>>;\r\n\r\n  /**\r\n   * Constructs a `HEAD` request that interprets the body as a `Blob` and\r\n   * returns the full event stream.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of all `HttpEvent`s for the request,\r\n   * with the response body as a `Blob`.\r\n   */\r\n  public head(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'blob'; withCredentials?: boolean | undefined; }): Observable<HttpEvent<Blob>>;\r\n\r\n  /**\r\n   * Constructs a `HEAD` request that interprets the body as a text string\r\n   * and returns the full event stream.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of all `HttpEvent`s for the request, with the response body of type\r\n   * string.\r\n   */\r\n  public head(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'text'; withCredentials?: boolean | undefined; }): Observable<HttpEvent<string>>;\r\n\r\n  /**\r\n   * Constructs a `HEAD` request that interprets the body as JSON\r\n   * and returns the full HTTP event stream.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of all `HttpEvent`s for the request, with a response body of\r\n   * type `Object`.\r\n   */\r\n  public head(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; }): Observable<HttpEvent<Object>>;\r\n\r\n  /**\r\n   * Constructs a `HEAD` request that interprets the body as JSON and\r\n   * returns the full event stream.\r\n   *\r\n   * @return An `Observable` of all the `HttpEvent`s for the request,\r\n   * with a response body in the requested type.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   */\r\n  public head<T>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; }): Observable<HttpEvent<T>>;\r\n\r\n  /**\r\n   * Constructs a `HEAD` request that interprets the body as an `ArrayBuffer`\r\n   *  and returns the full HTTP response.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the `HttpResponse` for the request,\r\n   * with the response body as an `ArrayBuffer`.\r\n   */\r\n  public head(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'arraybuffer'; withCredentials?: boolean | undefined; }): Observable<HttpResponse<ArrayBuffer>>;\r\n\r\n  /**\r\n   * Constructs a `HEAD` request that interprets the body as a `Blob` and returns\r\n   * the full `HttpResponse`.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the `HttpResponse` for the request,\r\n   * with the response body as a blob.\r\n   */\r\n  public head(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'blob'; withCredentials?: boolean | undefined; }): Observable<HttpResponse<Blob>>;\r\n\r\n  /**\r\n   * Constructs a `HEAD` request that interprets the body as text stream\r\n   * and returns the full `HttpResponse`.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the `HttpResponse` for the request,\r\n   * with the response body of type string.\r\n   */\r\n  public head(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'text'; withCredentials?: boolean | undefined; }): Observable<HttpResponse<string>>;\r\n\r\n  /**\r\n   * Constructs a `HEAD` request that interprets the body as JSON and\r\n   * returns the full `HttpResponse`.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the `HttpResponse` for the request,\r\n   * with the response body of type `Object`.\r\n   */\r\n  public head(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; }): Observable<HttpResponse<Object>>;\r\n\r\n  /**\r\n   * Constructs a `HEAD` request that interprets the body as JSON\r\n   * and returns the full `HttpResponse`.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the `HttpResponse` for the request,\r\n   * with a response body of the requested type.\r\n   */\r\n  public head<T>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; }): Observable<HttpResponse<T>>;\r\n\r\n  /**\r\n    * Constructs a `HEAD` request that interprets the body as JSON and\r\n    * returns the response body as an object parsed from JSON.\r\n    *\r\n    * @param url     The endpoint URL.\r\n    * @param options The HTTP options to send with the request.\r\n    *\r\n    * @return An `Observable` of the response, with the response body as an object parsed from JSON.\r\n    */\r\n  public head(url: string, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; } | undefined): Observable<Object>;\r\n\r\n  /**\r\n   * Constructs a `HEAD` request that interprets the body as JSON and returns\r\n   * the response in a given type.\r\n   *\r\n   * @param url     The endpoint URL.\r\n   * @param options The HTTP options to send with the request.\r\n   *\r\n   * @return An `Observable` of the `HttpResponse` for the request,\r\n   * with a response body of the given type.\r\n   */\r\n  public head<T>(url: string, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; } | undefined): Observable<T>;\r\n\r\n  public head<T>(url: any, options: any = {}): Observable<ArrayBuffer> | Observable<Blob> | Observable<string> | Observable<HttpEvent<ArrayBuffer>> | Observable<HttpEvent<Blob>> | Observable<HttpEvent<string>> | Observable<HttpResponse<ArrayBuffer>> | Observable<HttpResponse<Blob>> | Observable<HttpResponse<string>> | Observable<HttpResponse<Object>> | Observable<Object> | Observable<HttpEvent<Object>> | Observable<HttpEvent<T>> | Observable<HttpResponse<T>> | Observable<T> {\r\n    // implementation\r\n    options = {\r\n      ...options,\r\n      context: this._addGvLoginContext(options.context)\r\n    }\r\n    return this._httpClient.head<T>(url, options)\r\n  }\r\n\r\n  /**\r\n   * Constructs a `JSONP` request for the given URL and name of the callback parameter.\r\n   *\r\n   * @param url The resource URL.\r\n   * @param callbackParam The callback function name.\r\n   *\r\n   * @return An `Observable` of the response object, with response body as an object.\r\n   */\r\n  public jsonp(url: string, callbackParam: string): Observable<Object>;\r\n\r\n  /**\r\n   * Constructs a `JSONP` request for the given URL and name of the callback parameter.\r\n   *\r\n   * @param url The resource URL.\r\n   * @param callbackParam The callback function name.\r\n   *\r\n   * You must install a suitable interceptor, such as one provided by `HttpClientJsonpModule`.\r\n   * If no such interceptor is reached,\r\n   * then the `JSONP` request can be rejected by the configured backend.\r\n   *\r\n   * @return An `Observable` of the response object, with response body in the requested type.\r\n   */\r\n  public jsonp<T>(url: string, callbackParam: string): Observable<T>;\r\n\r\n  public jsonp<T>(url: any, callbackParam: any): Observable<Object> | Observable<T> {\r\n    // implementation\r\n    return this._httpClient.jsonp<T>(url, callbackParam)\r\n  }\r\n\r\n  /**\r\n   * Constructs an `OPTIONS` request that interprets the body as an\r\n   * `ArrayBuffer` and returns the response as an `ArrayBuffer`.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return An `Observable` of the response, with the response body as an `ArrayBuffer`.\r\n   */\r\n  options(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'arraybuffer'; withCredentials?: boolean | undefined; }): Observable<ArrayBuffer>;\r\n\r\n  /**\r\n   * Constructs an `OPTIONS` request that interprets the body as a `Blob` and returns\r\n   * the response as a `Blob`.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return An `Observable` of the response, with the response body as a `Blob`.\r\n   */\r\n  public options(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'blob'; withCredentials?: boolean | undefined; }): Observable<Blob>;\r\n\r\n  /**\r\n   * Constructs an `OPTIONS` request that interprets the body as a text string and\r\n   * returns a string value.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return An `Observable` of the response, with the response body of type string.\r\n   */\r\n  public options(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'text'; withCredentials?: boolean | undefined; }): Observable<string>;\r\n\r\n  /**\r\n   * Constructs an `OPTIONS` request that interprets the body as an `ArrayBuffer`\r\n   *  and returns the full event stream.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return  An `Observable` of all `HttpEvent`s for the request,\r\n   * with the response body as an `ArrayBuffer`.\r\n   */\r\n  public options(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'arraybuffer'; withCredentials?: boolean | undefined; }): Observable<HttpEvent<ArrayBuffer>>;\r\n\r\n  /**\r\n   * Constructs an `OPTIONS` request that interprets the body as a `Blob` and\r\n   * returns the full event stream.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return An `Observable` of all `HttpEvent`s for the request,\r\n   * with the response body as a `Blob`.\r\n   */\r\n  public options(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'blob'; withCredentials?: boolean | undefined; }): Observable<HttpEvent<Blob>>;\r\n\r\n  /**\r\n   * Constructs an `OPTIONS` request that interprets the body as a text string\r\n   * and returns the full event stream.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return An `Observable` of all the `HttpEvent`s for the request,\r\n   * with the response body of type string.\r\n   */\r\n  public options(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'text'; withCredentials?: boolean | undefined; }): Observable<HttpEvent<string>>;\r\n\r\n  /**\r\n   * Constructs an `OPTIONS` request that interprets the body as JSON\r\n   * and returns the full event stream.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return An `Observable` of all the `HttpEvent`s for the request with the response\r\n   * body of type `Object`.\r\n   */\r\n  public options(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; }): Observable<HttpEvent<Object>>;\r\n\r\n  /**\r\n   * Constructs an `OPTIONS` request that interprets the body as JSON and\r\n   * returns the full event stream.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return An `Observable` of all the `HttpEvent`s for the request,\r\n   * with a response body in the requested type.\r\n   */\r\n  public options<T>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; }): Observable<HttpEvent<T>>;\r\n\r\n  /**\r\n   * Constructs an `OPTIONS` request that interprets the body as an `ArrayBuffer`\r\n   *  and returns the full HTTP response.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return An `Observable` of the `HttpResponse` for the request,\r\n   * with the response body as an `ArrayBuffer`.\r\n   */\r\n  public options(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'arraybuffer'; withCredentials?: boolean | undefined; }): Observable<HttpResponse<ArrayBuffer>>;\r\n\r\n  /**\r\n   * Constructs an `OPTIONS` request that interprets the body as a `Blob`\r\n   *  and returns the full `HttpResponse`.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return An `Observable` of the `HttpResponse` for the request,\r\n   * with the response body as a `Blob`.\r\n   */\r\n  public options(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'blob'; withCredentials?: boolean | undefined; }): Observable<HttpResponse<Blob>>;\r\n\r\n  /**\r\n   * Constructs an `OPTIONS` request that interprets the body as text stream\r\n   * and returns the full `HttpResponse`.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return An `Observable` of the `HttpResponse` for the request,\r\n   * with the response body of type string.\r\n   */\r\n  public options(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'text'; withCredentials?: boolean | undefined; }): Observable<HttpResponse<string>>;\r\n\r\n  /**\r\n   * Constructs an `OPTIONS` request that interprets the body as JSON\r\n   * and returns the full `HttpResponse`.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return An `Observable` of the `HttpResponse` for the request,\r\n   * with the response body of type `Object`.\r\n   */\r\n  public options(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; }): Observable<HttpResponse<Object>>;\r\n\r\n  /**\r\n   * Constructs an `OPTIONS` request that interprets the body as JSON and\r\n   * returns the full `HttpResponse`.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return An `Observable` of the `HttpResponse` for the request,\r\n   * with a response body in the requested type.\r\n   */\r\n  public options<T>(url: string, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; }): Observable<HttpResponse<T>>;\r\n\r\n  /**\r\n    * Constructs an `OPTIONS` request that interprets the body as JSON and returns the\r\n    * response body as an object parsed from JSON.\r\n    *\r\n    * @param url The endpoint URL.\r\n    * @param options HTTP options.\r\n    *\r\n    * @return An `Observable` of the response, with the response body as an object parsed from JSON.\r\n    */\r\n  public options(url: string, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; } | undefined): Observable<Object>;\r\n\r\n  /**\r\n   * Constructs an `OPTIONS` request that interprets the body as JSON and returns the\r\n   * response in a given type.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return An `Observable` of the `HttpResponse`, with a response body of the given type.\r\n   */\r\n  public options<T>(url: string, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; } | undefined): Observable<T>;\r\n\r\n  public options<T>(url: any, options: any = {}): Observable<ArrayBuffer> | Observable<Blob> | Observable<string> | Observable<HttpEvent<ArrayBuffer>> | Observable<HttpEvent<Blob>> | Observable<HttpEvent<string>> | Observable<HttpResponse<ArrayBuffer>> | Observable<HttpResponse<Blob>> | Observable<HttpResponse<string>> | Observable<HttpResponse<Object>> | Observable<Object> | Observable<HttpEvent<Object>> | Observable<HttpEvent<T>> | Observable<HttpResponse<T>> | Observable<T> {\r\n     // implementation\r\n     options = {\r\n      ...options,\r\n      context: this._addGvLoginContext(options.context)\r\n    }\r\n     return this._httpClient.options<T>(url, options)\r\n  }\r\n\r\n  /**\r\n   * Constructs a `PATCH` request that interprets the body as an `ArrayBuffer` and returns\r\n   * the response as an `ArrayBuffer`.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to edit.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return An `Observable` of the response, with the response body as an `ArrayBuffer`.\r\n   */\r\n  public patch(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'arraybuffer'; withCredentials?: boolean | undefined; }): Observable<ArrayBuffer>;\r\n\r\n  /**\r\n   * Constructs a `PATCH` request that interprets the body as a `Blob` and returns the response\r\n   * as a `Blob`.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to edit.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return An `Observable` of the response, with the response body as a `Blob`.\r\n   */\r\n  public patch(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'blob'; withCredentials?: boolean | undefined; }): Observable<Blob>;\r\n\r\n  /**\r\n   * Constructs a `PATCH` request that interprets the body as a text string and\r\n   * returns the response as a string value.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to edit.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return An `Observable` of the response, with a response body of type string.\r\n   */\r\n  public patch(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'text'; withCredentials?: boolean | undefined; }): Observable<string>;\r\n\r\n  /**\r\n   * Constructs a `PATCH` request that interprets the body as an `ArrayBuffer` and\r\n   *  returns the full event stream.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to edit.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return An `Observable` of all the `HttpEvent`s for the request,\r\n   * with the response body as an `ArrayBuffer`.\r\n   */\r\n  public patch(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'arraybuffer'; withCredentials?: boolean | undefined; }): Observable<HttpEvent<ArrayBuffer>>;\r\n\r\n  /**\r\n   * Constructs a `PATCH` request that interprets the body as a `Blob`\r\n   *  and returns the full event stream.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to edit.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return An `Observable` of all the `HttpEvent`s for the request, with the\r\n   * response body as `Blob`.\r\n   */\r\n  public patch(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'blob'; withCredentials?: boolean | undefined; }): Observable<HttpEvent<Blob>>;\r\n\r\n  /**\r\n   * Constructs a `PATCH` request that interprets the body as a text string and\r\n   * returns the full event stream.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to edit.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return An `Observable` of all the `HttpEvent`s for the request, with a\r\n   * response body of type string.\r\n   */\r\n  public patch(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'text'; withCredentials?: boolean | undefined; }): Observable<HttpEvent<string>>;\r\n\r\n  /**\r\n   * Constructs a `PATCH` request that interprets the body as JSON\r\n   * and returns the full event stream.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to edit.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return An `Observable` of all the `HttpEvent`s for the request,\r\n   * with a response body of type `Object`.\r\n   */\r\n  public patch(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; }): Observable<HttpEvent<Object>>;\r\n\r\n  /**\r\n   * Constructs a `PATCH` request that interprets the body as JSON\r\n   * and returns the full event stream.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to edit.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return An `Observable` of all the `HttpEvent`s for the request,\r\n   * with a response body in the requested type.\r\n   */\r\n  public patch<T>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; }): Observable<HttpEvent<T>>;\r\n\r\n  /**\r\n   * Constructs a `PATCH` request that interprets the body as an `ArrayBuffer`\r\n   *  and returns the full `HttpResponse`.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to edit.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return  An `Observable` of the `HttpResponse` for the request,\r\n   * with the response body as an `ArrayBuffer`.\r\n   */\r\n  public patch(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'arraybuffer'; withCredentials?: boolean | undefined; }): Observable<HttpResponse<ArrayBuffer>>;\r\n\r\n  /**\r\n   * Constructs a `PATCH` request that interprets the body as a `Blob` and returns the full\r\n   * `HttpResponse`.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to edit.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return  An `Observable` of the `HttpResponse` for the request,\r\n   * with the response body as a `Blob`.\r\n   */\r\n  public patch(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'blob'; withCredentials?: boolean | undefined; }): Observable<HttpResponse<Blob>>;\r\n\r\n  /**\r\n   * Constructs a `PATCH` request that interprets the body as a text stream and returns the\r\n   * full `HttpResponse`.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to edit.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return  An `Observable` of the `HttpResponse` for the request,\r\n   * with a response body of type string.\r\n   */\r\n  public patch(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'text'; withCredentials?: boolean | undefined; }): Observable<HttpResponse<string>>;\r\n\r\n  /**\r\n   * Constructs a `PATCH` request that interprets the body as JSON\r\n   * and returns the full `HttpResponse`.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to edit.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return An `Observable` of the `HttpResponse` for the request,\r\n   * with a response body in the requested type.\r\n   */\r\n  public patch(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; }): Observable<HttpResponse<Object>>;\r\n\r\n  /**\r\n   * Constructs a `PATCH` request that interprets the body as JSON\r\n   * and returns the full `HttpResponse`.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to edit.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return An `Observable` of the `HttpResponse` for the request,\r\n   * with a response body in the given type.\r\n   */\r\n  public patch<T>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; }): Observable<HttpResponse<T>>;\r\n\r\n  /**\r\n    * Constructs a `PATCH` request that interprets the body as JSON and\r\n    * returns the response body as an object parsed from JSON.\r\n    *\r\n    * @param url The endpoint URL.\r\n    * @param body The resources to edit.\r\n    * @param options HTTP options.\r\n    *\r\n    * @return An `Observable` of the response, with the response body as an object parsed from JSON.\r\n    */\r\n  public patch(url: string, body: any, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; } | undefined): Observable<Object>;\r\n\r\n  /**\r\n   * Constructs a `PATCH` request that interprets the body as JSON\r\n   * and returns the response in a given type.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to edit.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return  An `Observable` of the `HttpResponse` for the request,\r\n   * with a response body in the given type.\r\n   */\r\n  public patch<T>(url: string, body: any, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; } | undefined): Observable<T>;\r\n\r\n  public patch<T>(url: any, body: any, options: any = {}): Observable<ArrayBuffer> | Observable<Blob> | Observable<string> | Observable<HttpEvent<ArrayBuffer>> | Observable<HttpEvent<Blob>> | Observable<HttpEvent<string>> | Observable<HttpResponse<ArrayBuffer>> | Observable<HttpResponse<Blob>> | Observable<HttpResponse<string>> | Observable<HttpResponse<Object>> | Observable<Object> | Observable<HttpEvent<Object>> | Observable<HttpEvent<T>> | Observable<HttpResponse<T>> | Observable<T> {\r\n    // implementation\r\n    options = {\r\n      ...options,\r\n      context: this._addGvLoginContext(options.context)\r\n    }\r\n    return this._httpClient.patch<T>(url, body, options)\r\n  }\r\n\r\n  /**\r\n   * Constructs a `POST` request that interprets the body as an `ArrayBuffer` and returns\r\n   * an `ArrayBuffer`.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The content to replace with.\r\n   * @param options HTTP options.\r\n   *\r\n   * @return An `Observable` of the response, with the response body as an `ArrayBuffer`.\r\n   */\r\n  public post(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'arraybuffer'; withCredentials?: boolean | undefined; }): Observable<ArrayBuffer>;\r\n\r\n  /**\r\n   * Constructs a `POST` request that interprets the body as a `Blob` and returns the\r\n   * response as a `Blob`.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The content to replace with.\r\n   * @param options HTTP options\r\n   *\r\n   * @return An `Observable` of the response, with the response body as a `Blob`.\r\n   */\r\n  public post(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'blob'; withCredentials?: boolean | undefined; }): Observable<Blob>;\r\n\r\n  /**\r\n   * Constructs a `POST` request that interprets the body as a text string and\r\n   * returns the response as a string value.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The content to replace with.\r\n   * @param options HTTP options\r\n   *\r\n   * @return An `Observable` of the response, with a response body of type string.\r\n   */\r\n  public post(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'text'; withCredentials?: boolean | undefined; }): Observable<string>;\r\n\r\n  /**\r\n   * Constructs a `POST` request that interprets the body as an `ArrayBuffer` and\r\n   * returns the full event stream.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The content to replace with.\r\n   * @param options HTTP options\r\n   *\r\n   * @return An `Observable` of all `HttpEvent`s for the request,\r\n   * with the response body as an `ArrayBuffer`.\r\n   */\r\n  public post(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'arraybuffer'; withCredentials?: boolean | undefined; }): Observable<HttpEvent<ArrayBuffer>>;\r\n\r\n  /**\r\n   * Constructs a `POST` request that interprets the body as a `Blob`\r\n   * and returns the response in an observable of the full event stream.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The content to replace with.\r\n   * @param options HTTP options\r\n   *\r\n   * @return An `Observable` of all `HttpEvent`s for the request, with the response body as `Blob`.\r\n   */\r\n  public post(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'blob'; withCredentials?: boolean | undefined; }): Observable<HttpEvent<Blob>>;\r\n\r\n  /**\r\n   * Constructs a `POST` request that interprets the body as a text string and returns the full\r\n   * event stream.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The content to replace with.\r\n   * @param options HTTP options\r\n   *\r\n   * @return  An `Observable` of all `HttpEvent`s for the request,\r\n   * with a response body of type string.\r\n   */\r\n  public post(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'text'; withCredentials?: boolean | undefined; }): Observable<HttpEvent<string>>;\r\n\r\n  /**\r\n   * Constructs a POST request that interprets the body as JSON and returns the full\r\n   * event stream.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The content to replace with.\r\n   * @param options HTTP options\r\n   *\r\n   * @return  An `Observable` of all `HttpEvent`s for the request,\r\n   * with a response body of type `Object`.\r\n   */\r\n  public post(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; }): Observable<HttpEvent<Object>>;\r\n\r\n  /**\r\n   * Constructs a POST request that interprets the body as JSON and returns the full\r\n   * event stream.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The content to replace with.\r\n   * @param options HTTP options\r\n   *\r\n   * @return An `Observable` of all `HttpEvent`s for the request,\r\n   * with a response body in the requested type.\r\n   */\r\n  public post<T>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; }): Observable<HttpEvent<T>>;\r\n\r\n  /**\r\n   * Constructs a POST request that interprets the body as an `ArrayBuffer`\r\n   *  and returns the full `HttpResponse`.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The content to replace with.\r\n   * @param options HTTP options\r\n   *\r\n   * @return  An `Observable` of the `HttpResponse` for the request, with the response body as an\r\n   * `ArrayBuffer`.\r\n   */\r\n  public post(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'arraybuffer'; withCredentials?: boolean | undefined; }): Observable<HttpResponse<ArrayBuffer>>;\r\n\r\n  /**\r\n   * Constructs a `POST` request that interprets the body as a `Blob` and returns the full\r\n   * `HttpResponse`.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The content to replace with.\r\n   * @param options HTTP options\r\n   *\r\n   * @return An `Observable` of the `HttpResponse` for the request,\r\n   * with the response body as a `Blob`.\r\n   */\r\n  public post(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'blob'; withCredentials?: boolean | undefined; }): Observable<HttpResponse<Blob>>;\r\n\r\n  /**\r\n   * Constructs a `POST` request that interprets the body as a text stream and returns\r\n   * the full `HttpResponse`.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The content to replace with.\r\n   * @param options HTTP options\r\n   *\r\n   * @return  An `Observable` of the `HttpResponse` for the request,\r\n   * with a response body of type string.\r\n   */\r\n  public post(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'text'; withCredentials?: boolean | undefined; }): Observable<HttpResponse<string>>;\r\n\r\n  /**\r\n   * Constructs a `POST` request that interprets the body as JSON\r\n   * and returns the full `HttpResponse`.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The content to replace with.\r\n   * @param options HTTP options\r\n   *\r\n   * @return An `Observable` of the `HttpResponse` for the request, with a response body of type\r\n   * `Object`.\r\n   */\r\n  public post(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; }): Observable<HttpResponse<Object>>;\r\n\r\n  /**\r\n   * Constructs a `POST` request that interprets the body as JSON and returns the\r\n   * full `HttpResponse`.\r\n   *\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The content to replace with.\r\n   * @param options HTTP options\r\n   *\r\n   * @return An `Observable` of the `HttpResponse` for the request, with a response body in the\r\n   * requested type.\r\n   */\r\n  public post<T>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; }): Observable<HttpResponse<T>>;\r\n\r\n  /**\r\n   * Constructs a `POST` request that interprets the body as JSON\r\n   * and returns the response body as an object parsed from JSON.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The content to replace with.\r\n   * @param options HTTP options\r\n   *\r\n   * @return An `Observable` of the response, with the response body as an object parsed from JSON.\r\n   */\r\n  public post(url: string, body: any, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; } | undefined): Observable<Object>;\r\n\r\n  /**\r\n   * Constructs a `POST` request that interprets the body as JSON\r\n   * and returns an observable of the response.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The content to replace with.\r\n   * @param options HTTP options\r\n   *\r\n   * @return  An `Observable` of the `HttpResponse` for the request, with a response body in the\r\n   * requested type.\r\n   */\r\n  public post<T>(url: string, body: any, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; } | undefined): Observable<T>;\r\n\r\n  public post<T>(url: any, body: any, options: any = {}): Observable<ArrayBuffer> | Observable<Blob> | Observable<string> | Observable<HttpEvent<ArrayBuffer>> | Observable<HttpEvent<Blob>> | Observable<HttpEvent<string>> | Observable<HttpResponse<ArrayBuffer>> | Observable<HttpResponse<Blob>> | Observable<HttpResponse<string>> | Observable<HttpResponse<Object>> | Observable<Object> | Observable<HttpEvent<Object>> | Observable<HttpEvent<T>> | Observable<HttpResponse<T>> | Observable<T> {\r\n    // implementation\r\n    options = {\r\n      ...options,\r\n      context: this._addGvLoginContext(options.context)\r\n    }\r\n    return this._httpClient.post<T>(url, body, options)\r\n  }\r\n\r\n  /**\r\n   * Constructs a `PUT` request that interprets the body as an `ArrayBuffer` and returns the\r\n   * response as an `ArrayBuffer`.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to add/update.\r\n   * @param options HTTP options\r\n   *\r\n   * @return An `Observable` of the response, with the response body as an `ArrayBuffer`.\r\n   */\r\n  public put(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'arraybuffer'; withCredentials?: boolean | undefined; }): Observable<ArrayBuffer>;\r\n\r\n  /**\r\n   * Constructs a `PUT` request that interprets the body as a `Blob` and returns\r\n   * the response as a `Blob`.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to add/update.\r\n   * @param options HTTP options\r\n   *\r\n   * @return An `Observable` of the response, with the response body as a `Blob`.\r\n   */\r\n  public put(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'blob'; withCredentials?: boolean | undefined; }): Observable<Blob>;\r\n\r\n  /**\r\n   * Constructs a `PUT` request that interprets the body as a text string and\r\n   * returns the response as a string value.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to add/update.\r\n   * @param options HTTP options\r\n   *\r\n   * @return An `Observable` of the response, with a response body of type string.\r\n   */\r\n  public put(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'text'; withCredentials?: boolean | undefined; }): Observable<string>;\r\n\r\n  /**\r\n   * Constructs a `PUT` request that interprets the body as an `ArrayBuffer` and\r\n   * returns the full event stream.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to add/update.\r\n   * @param options HTTP options\r\n   *\r\n   * @return An `Observable` of all `HttpEvent`s for the request,\r\n   * with the response body as an `ArrayBuffer`.\r\n   */\r\n  public put(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'arraybuffer'; withCredentials?: boolean | undefined; }): Observable<HttpEvent<ArrayBuffer>>;\r\n\r\n  /**\r\n   * Constructs a `PUT` request that interprets the body as a `Blob` and returns the full event\r\n   * stream.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to add/update.\r\n   * @param options HTTP options\r\n   *\r\n   * @return An `Observable` of all `HttpEvent`s for the request,\r\n   * with the response body as a `Blob`.\r\n   */\r\n  public put(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'blob'; withCredentials?: boolean | undefined; }): Observable<HttpEvent<Blob>>;\r\n\r\n  /**\r\n   * Constructs a `PUT` request that interprets the body as a text string and returns the full event\r\n   * stream.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to add/update.\r\n   * @param options HTTP options\r\n   *\r\n   * @return An `Observable` of all `HttpEvent`s for the request, with a response body\r\n   * of type string.\r\n   */\r\n  public put(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'text'; withCredentials?: boolean | undefined; }): Observable<HttpEvent<string>>;\r\n\r\n  /**\r\n   * Constructs a `PUT` request that interprets the body as JSON and returns the full\r\n   * event stream.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to add/update.\r\n   * @param options HTTP options\r\n   *\r\n   * @return An `Observable` of all `HttpEvent`s for the request, with a response body of\r\n   * type `Object`.\r\n   */\r\n  public put(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; }): Observable<HttpEvent<Object>>;\r\n\r\n  /**\r\n   * Constructs a `PUT` request that interprets the body as JSON and returns the\r\n   * full event stream.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to add/update.\r\n   * @param options HTTP options\r\n   *\r\n   * @return An `Observable` of all `HttpEvent`s for the request,\r\n   * with a response body in the requested type.\r\n   */\r\n  public put<T>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'events'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; }): Observable<HttpEvent<T>>;\r\n\r\n  /**\r\n   * Constructs a `PUT` request that interprets the body as an\r\n   * `ArrayBuffer` and returns an observable of the full HTTP response.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to add/update.\r\n   * @param options HTTP options\r\n   *\r\n   * @return An `Observable` of the `HttpResponse` for the request, with the response body as an\r\n   * `ArrayBuffer`.\r\n   */\r\n  public put(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'arraybuffer'; withCredentials?: boolean | undefined; }): Observable<HttpResponse<ArrayBuffer>>;\r\n\r\n  /**\r\n   * Constructs a `PUT` request that interprets the body as a `Blob` and returns the\r\n   * full HTTP response.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to add/update.\r\n   * @param options HTTP options\r\n   *\r\n   * @return An `Observable` of the `HttpResponse` for the request,\r\n   * with the response body as a `Blob`.\r\n   */\r\n  public put(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'blob'; withCredentials?: boolean | undefined; }): Observable<HttpResponse<Blob>>;\r\n\r\n  /**\r\n   * Constructs a `PUT` request that interprets the body as a text stream and returns the\r\n   * full HTTP response.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to add/update.\r\n   * @param options HTTP options\r\n   *\r\n   * @return An `Observable` of the `HttpResponse` for the request, with a response body of type\r\n   * string.\r\n   */\r\n  public put(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType: 'text'; withCredentials?: boolean | undefined; }): Observable<HttpResponse<string>>;\r\n\r\n  /**\r\n   * Constructs a `PUT` request that interprets the body as JSON and returns the full\r\n   * HTTP response.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to add/update.\r\n   * @param options HTTP options\r\n   *\r\n   * @return An `Observable` of the `HttpResponse` for the request, with a response body\r\n   * of type 'Object`.\r\n   */\r\n  public put(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; }): Observable<HttpResponse<Object>>;\r\n\r\n  /**\r\n   * Constructs a `PUT` request that interprets the body as an instance of the requested type and\r\n   * returns the full HTTP response.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to add/update.\r\n   * @param options HTTP options\r\n   *\r\n   * @return An `Observable` of the `HttpResponse` for the request,\r\n   * with a response body in the requested type.\r\n   */\r\n  public put<T>(url: string, body: any, options: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; observe: 'response'; context?: HttpContext | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; }): Observable<HttpResponse<T>>;\r\n\r\n  /**\r\n   * Constructs a `PUT` request that interprets the body as JSON\r\n   * and returns an observable of JavaScript object.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to add/update.\r\n   * @param options HTTP options\r\n   *\r\n   * @return An `Observable` of the response as a JavaScript object.\r\n   */\r\n  public put(url: string, body: any, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; } | undefined): Observable<Object>;\r\n\r\n  /**\r\n   * Constructs a `PUT` request that interprets the body as an instance of the requested type\r\n   * and returns an observable of the requested type.\r\n   *\r\n   * @param url The endpoint URL.\r\n   * @param body The resources to add/update.\r\n   * @param options HTTP options\r\n   *\r\n   * @return An `Observable` of the requested type.\r\n   */\r\n  public put<T>(url: string, body: any, options?: { headers?: HttpHeaders | { [header: string]: string | string[]; } | undefined; context?: HttpContext | undefined; observe?: 'body' | undefined; params?: HttpParams | { [param: string]: string | number | boolean | readonly (string | number | boolean)[]; } | undefined; reportProgress?: boolean | undefined; responseType?: 'json' | undefined; withCredentials?: boolean | undefined; } | undefined): Observable<T>;\r\n\r\n  public put<T>(url: any, body: any, options: any = {}): Observable<ArrayBuffer> | Observable<Blob> | Observable<string> | Observable<HttpEvent<ArrayBuffer>> | Observable<HttpEvent<Blob>> | Observable<HttpEvent<string>> | Observable<HttpResponse<ArrayBuffer>> | Observable<HttpResponse<Blob>> | Observable<HttpResponse<string>> | Observable<HttpResponse<Object>> | Observable<Object> | Observable<HttpEvent<Object>> | Observable<HttpEvent<T>> | Observable<HttpResponse<T>> | Observable<T> {\r\n    // implementation\r\n    options = {\r\n      ...options,\r\n      context: this._addGvLoginContext(options.context)\r\n    }\r\n    return this._httpClient.put<T>(url, body, options)\r\n  }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { JwtModule, JWT_OPTIONS } from '@auth0/angular-jwt';\r\nimport { ArqGvloginInterceptorService } from '../interceptors/interceptors';\r\nimport { ArqGvloginService } from '../services/services';\r\n\r\nconst securityProviders = [\r\n  // Servicios de gvLogin\r\n  { provide: ArqGvloginService, useClass: ArqGvloginService },\r\n  //{ provide: AuthService, useClass: GvloginService, multi: true },\r\n\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: ArqGvloginInterceptorService,\r\n    multi: true\r\n  }\r\n];\r\n\r\nexport function jwtOptionsFactory() {\r\n  return {\r\n    //whitelistedDomains: environment.gvlogin.whitelistedDomains,\r\n    tokenGetter: tokenGetter\r\n  };\r\n}\r\n\r\nexport function tokenGetter(): string {\r\n  return localStorage.getItem('gvlogin-token')!;\r\n}\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  exports: [],\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    JwtModule.forRoot({\r\n      jwtOptionsProvider: {\r\n        provide: JWT_OPTIONS,\r\n        useFactory: jwtOptionsFactory\r\n      }\r\n    })\r\n  ]\r\n})\r\nexport class ArqGvLoginModule {\r\n  static forRoot(): ModuleWithProviders<any> {\r\n    return {\r\n      ngModule: ArqGvLoginModule,\r\n      providers: securityProviders\r\n    };\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  EventEmitter,\r\n  HostListener,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { finalize, of, take, takeUntil } from 'rxjs';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\n\r\nimport { checkRequiredFields } from '../../../core/utils/basic.util';\r\nimport { ArqDialogService } from '../../../lib/services/arq-dialog.service';\r\nimport { ArqBaseComponent } from '../../../lib/utils/utils';\r\nimport { ArqPageableRequest, ArqPageableResponse } from '../../interfaces/arq-basic.interface';\r\nimport {\r\n  ArqDatatableActions,\r\n  ArqDatatableColumnsSchema,\r\n  ArqDatatableConfig,\r\n  ArqDatatableSelectEvent\r\n} from './arq-datatable.interface';\r\nimport { ArqSpinnerService } from '../../services/arq-spinner.service';\r\n\r\nconst DEFAULT_CONFIG: ArqDatatableConfig = {\r\n  filterType: 'hide',\r\n  filterPlaceholder: 'Filtrar...',\r\n  filterLabel: 'Filtrar',\r\n  noDataString: 'No hay datos',\r\n\r\n  actions: [],\r\n  actionsInContextMenu: false,\r\n  actionColLabel: '',\r\n  newRowInActionsTH: false,\r\n  newRowInModal: false,\r\n\r\n  disabled: false,\r\n  disablePagination: false,\r\n  pageSize: 5,\r\n\r\n  selectColumn: false,\r\n\r\n  editCallback: row => {},\r\n  eventRow: row => {},\r\n  eventNewRow: row => {},\r\n  prepareFormGroup: formGroup => {}\r\n};\r\n\r\n@Component({\r\n  selector: 'arq-datatable',\r\n  templateUrl: './arq-datatable.component.html',\r\n  styleUrls: ['./arq-datatable.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqDatatableComponent extends ArqBaseComponent implements OnInit, OnDestroy, AfterViewInit, OnChanges {\r\n  // Component inputs\r\n  @Input('columnsSchema') public _columnsSchema: ArqDatatableColumnsSchema[] = [];\r\n  @Input('tableConfig') public _tableConfig!: ArqDatatableConfig;\r\n\r\n  @Input('loadedData') public loadedData$!: Observable<ArqPageableResponse>;\r\n  @Input('loadDataFn') public _loadDataFn!: (request: ArqPageableRequest) => Observable<ArqPageableResponse>;\r\n  @Input('refreshData') public refreshData$!: Observable<any>;\r\n  @Output('loadDataEvent') public loadDataEvent$ = new EventEmitter<ArqPageableRequest>();\r\n  @Output('selectEvent') public selectEvent$ = new EventEmitter<ArqDatatableSelectEvent>();\r\n\r\n  @Input('form') public _form?: FormGroup;\r\n  @Input('isEditing') public _isEditing: boolean = false;\r\n  @Input('itemsPerPageLabel') public itemsPerPageLabel: string = 'Items por página';\r\n  @Input('nextPageLabel') public nextPageLabel: string = 'Siguiente';\r\n  @Input('firstPageLabel') public firstPageLabel: string = 'Primera';\r\n  @Input('lastPageLabel') public lastPageLabel: string = 'Última';\r\n  @Input('previousPageLabel') public previousPageLabel: string = 'Anterior';\r\n  @Input('range') public range: string = 'de';\r\n\r\n  @Input('loadDataMantFn') public _loadDataMantFn!: (\r\n    request: ArqPageableRequest,\r\n    table?: string\r\n  ) => Observable<ArqPageableResponse>;\r\n\r\n  // Component properties\r\n  @ViewChild(MatPaginator) public paginator!: MatPaginator;\r\n\r\n  public dataSource = new MatTableDataSource<any>();\r\n  public displayedColumns: string[] = [];\r\n  public tableConfig: ArqDatatableConfig = DEFAULT_CONFIG;\r\n\r\n  public dataRequest: ArqPageableRequest = { page: 0, size: 5 };\r\n  public totalElements: number = 0;\r\n  public isLoading = false;\r\n\r\n  // ??\r\n  public valid: any = {};\r\n  public activeQueryFilter: string = '';\r\n  public activeFilter: any = {};\r\n  public displayedColumnsStatic: string[] = ['codigo', 'descripcion'];\r\n\r\n  // Context Menu\r\n  public isDisplayContextMenu: boolean = false;\r\n  public rightClickMenuPositions!: { x: number; y: number };\r\n  public rightClickMenuItems: any = [];\r\n\r\n  // Select funcionality\r\n  public selectedRows: any[] = [];\r\n  public checkSelectedRow = (row: any): boolean => !!this.selectedRows.filter(_ => row.id === _.id).length;\r\n\r\n  // Template Functions\r\n  public iterateAndF = (_: any): any => _.map((a: any) => a + 'f'); // Añade el sufijo 'f' a cada elemento del array\r\n  public toOf = (_: any): any => of(_);\r\n  public findValue = (value: any, data: any, lang: any, type: any): any => {\r\n    const description = lang == 'ca' ? 'descriptionV' : 'description';\r\n    let dataNew;\r\n\r\n    // Si tenemos objeto en select o autocomplete no necesitamos buscar en el filtro\r\n    if ((type == 'select' || type == 'autocomplete') && value?.value) {\r\n      return value[description];\r\n    }\r\n\r\n    if (type == 'select' && data && !Array.isArray(data)) {\r\n      data.subscribe((e: any) => (dataNew = e));\r\n    } else {\r\n      dataNew = data;\r\n    }\r\n\r\n    // prettier-ignore\r\n    return (\r\n      dataNew?.find((_: any) => {\r\n        if (!value) return false;\r\n        else return (typeof value !== 'string') ? (_.value === value.value) : (_.value === value)\r\n      })?.[description] || value\r\n    );\r\n  };\r\n  public findSrc = (value: any, data: any): any => {\r\n    // prettier-ignore\r\n    return (\r\n      data.find((_: any) => {\r\n        if (!value) return false;\r\n        else return _.value === value\r\n      })?.src || value\r\n    );\r\n  };\r\n\r\n  public hideIcon = false;\r\n  public showFilters!: boolean;\r\n  public formGroup?: FormGroup<any>;\r\n  public readonly!: boolean;\r\n  public fg: any;\r\n  public rowClicked: any;\r\n  public originalFilterType!: false | 'hide' | 'global' | 'column' | 'both' | null | undefined;\r\n  public fgCopy: any;\r\n\r\n  public constructor(\r\n    private formBuilder: FormBuilder,\r\n    private serviceDialog: ArqDialogService,\r\n    private arqSpinnerService: ArqSpinnerService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  public ngAfterViewInit(): void {\r\n    this.customPaginator();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.fg = { ...this._form };\r\n    this.fgCopy = { ...this._form };\r\n\r\n    this._columnsSchema.forEach(col => {\r\n      if (col.fullObject === undefined) {\r\n        col.fullObject = true;\r\n      }\r\n      if (col.isEditable === undefined) {\r\n        col.isEditable = true;\r\n      }\r\n      if (!col.defaultValue) {\r\n        col.defaultValue = null;\r\n      }\r\n      if (col.dataFnReq) {\r\n        col.dataFnReq({ page: 0, size: 10 }).subscribe(res => (col.data = res.content));\r\n      }\r\n\r\n      if (col.dataFn) {\r\n        col.dataFn.subscribe((e: any) => (col.data = e));\r\n      }\r\n\r\n      if (col.type == 'calc') {\r\n        col.isEditable = false;\r\n        col.isCreable = false;\r\n        col.isSortable = false;\r\n        if (!col.calculate) {\r\n          console.error('calculate function is required for calc type');\r\n        }\r\n      }\r\n    });\r\n\r\n    if (!this.loadedData$ && !this.loadDataEvent$)\r\n      checkRequiredFields(this._loadDataFn || this._loadDataMantFn, 'loadDataFn');\r\n    if (!this._loadDataFn && !this._loadDataMantFn) {\r\n      checkRequiredFields(this.loadedData$, 'loadedData');\r\n      checkRequiredFields(this.loadDataEvent$, 'loadDataEvent');\r\n    }\r\n    checkRequiredFields(this._columnsSchema, 'columnsSchema');\r\n\r\n    this.initializeDatatable();\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes) {\r\n      this.displayedColumns = this._columnsSchema\r\n        ?.filter((col: any) => col.isHidden != true)\r\n        .map((col: any) => col.key);\r\n      if (this.tableConfig?.actions?.length && !this.tableConfig?.actionsInContextMenu) this.showActionsCol();\r\n      if (\r\n        changes['_tableConfig'] &&\r\n        changes['_tableConfig']['currentValue'] &&\r\n        changes['_tableConfig']['currentValue']['selectColumn']\r\n      ) {\r\n        this._tableConfig.selectColumn = changes['_tableConfig']['currentValue']['selectColumn'];\r\n        this.tableConfig.selectColumn = changes['_tableConfig']['currentValue']['selectColumn'];\r\n        this.showSelectCol(changes['_tableConfig']['currentValue']['selectColumn']);\r\n      }\r\n    }\r\n  }\r\n\r\n  public enable(): void {\r\n    this.readonly = false;\r\n  }\r\n\r\n  public disable(): void {\r\n    this.readonly = true;\r\n    this.stopEditing();\r\n  }\r\n\r\n  public action() {\r\n    return (row: any): any => {\r\n      row.isEdit = !row.isEdit;\r\n      for (const key in row) {\r\n        if (Object.prototype.hasOwnProperty.call(row, key)) {\r\n          this._form?.controls[key]?.setValue(row[key], { emitEvent: false });\r\n        }\r\n      }\r\n      if (this.tableConfig.prepareFormGroup && this._form) {\r\n        this.tableConfig.prepareFormGroup(this._form);\r\n        this._form.updateValueAndValidity({ emitEvent: false });\r\n      }\r\n      this._isEditing = true;\r\n      row.newRow = false;\r\n    };\r\n  }\r\n\r\n  private initializeDatatable(): void {\r\n    this.setTableConfig();\r\n\r\n    this.showFilters = this.tableConfig.filterType == 'both' || this.tableConfig.filterType == 'column';\r\n\r\n    this.displayedColumns = this._columnsSchema?.filter((col: any) => col.isHidden != true).map((col: any) => col.key);\r\n\r\n    if (this.tableConfig.actions?.length && !this.tableConfig.actionsInContextMenu) this.showActionsCol();\r\n    this.showSelectCol(!!this.tableConfig.selectColumn);\r\n\r\n    if (this.loadedData$) {\r\n      this.loadedData$.pipe(takeUntil(this.unsubscribe$)).subscribe({\r\n        next: (res: any) => {\r\n          res = this.addIdsIfNecesary(res);\r\n          this.dataSource.data = res.content;\r\n          this.totalElements = res.totalElements;\r\n          this.stopLoading();\r\n        },\r\n        error: () => this.stopLoading()\r\n      });\r\n    }\r\n\r\n    if (this.refreshData$) this.refreshData$.pipe(takeUntil(this.unsubscribe$)).subscribe(_ => this.refreshData());\r\n\r\n    this.originalFilterType = this.tableConfig?.filterType;\r\n\r\n    this.tableConfig?.actions?.forEach((element: ArqDatatableActions) => {\r\n      if (element.inline) {\r\n        element.action = this.action();\r\n      }\r\n    });\r\n\r\n    this.refreshData();\r\n  }\r\n\r\n  public refreshData(): void {\r\n    this.startLoading();\r\n    this.stopEditingAllRows();\r\n    if (this.loadDataEvent$.observers.length) {\r\n      this.loadDataEvent$.emit(this.dataRequest);\r\n    } else {\r\n      if (this._loadDataFn) {\r\n        this._isEditing = true;\r\n        this._loadDataFn(this.dataRequest)\r\n          .pipe(\r\n            finalize(() => {\r\n              this._isEditing = false;\r\n              this.stopLoading();\r\n            })\r\n          )\r\n          .subscribe(res => {\r\n            res = this.addIdsIfNecesary(res);\r\n            this.dataSource.data = res.content;\r\n            this.totalElements = res.totalElements;\r\n          });\r\n      } else {\r\n        this._loadDataMantFn(this.dataRequest)\r\n          .pipe(\r\n            finalize(() => {\r\n              this._isEditing = false;\r\n              this.stopLoading();\r\n            })\r\n          )\r\n          .subscribe(res => {\r\n            res = this.addIdsIfNecesary(res);\r\n            this.dataSource.data = res.content;\r\n            this.totalElements = res.totalElements;\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  private startLoading(): void {\r\n    this.isLoading = true;\r\n    this.arqSpinnerService.show();\r\n  }\r\n\r\n  private stopLoading(): void {\r\n    this.isLoading = false;\r\n    this.arqSpinnerService.hide();\r\n  }\r\n\r\n  private addIdsIfNecesary(res: ArqPageableResponse): ArqPageableResponse {\r\n    res.content = res.content.map((column, index) => {\r\n      if (!Object.keys(column).includes('id')) column.id = index;\r\n      return column;\r\n    });\r\n\r\n    return res;\r\n  }\r\n\r\n  private setTableConfig(): void {\r\n    this.tableConfig = {\r\n      filterType: this._tableConfig?.filterType ? this._tableConfig?.filterType : DEFAULT_CONFIG.filterType,\r\n      filterPlaceholder: this._tableConfig?.filterPlaceholder\r\n        ? this._tableConfig.filterPlaceholder\r\n        : DEFAULT_CONFIG.filterPlaceholder,\r\n      filterLabel: this._tableConfig?.filterLabel ? this._tableConfig?.filterLabel : DEFAULT_CONFIG.filterLabel,\r\n      noDataString: this._tableConfig?.noDataString ? this._tableConfig?.noDataString : DEFAULT_CONFIG.noDataString,\r\n      footerTable: this._tableConfig?.footerTable ? this._tableConfig?.footerTable : DEFAULT_CONFIG.footerTable,\r\n      footerTableString: this._tableConfig?.footerTableString\r\n        ? this._tableConfig?.footerTableString\r\n        : DEFAULT_CONFIG.footerTableString,\r\n      headerTable: this._tableConfig?.headerTable ? this._tableConfig?.headerTable : DEFAULT_CONFIG.headerTable,\r\n      headerTableString: this._tableConfig?.headerTableString\r\n        ? this._tableConfig?.headerTableString\r\n        : DEFAULT_CONFIG.headerTableString,\r\n      actions: this._tableConfig?.actions ? this._tableConfig?.actions : DEFAULT_CONFIG.actions,\r\n      actionsInContextMenu: this._tableConfig?.actionsInContextMenu\r\n        ? this._tableConfig?.actionsInContextMenu\r\n        : DEFAULT_CONFIG.actionsInContextMenu,\r\n      actionColLabel: this._tableConfig?.actionColLabel\r\n        ? this._tableConfig?.actionColLabel\r\n        : DEFAULT_CONFIG.actionColLabel,\r\n      newRowInActionsTH: this._tableConfig?.newRowInActionsTH\r\n        ? this._tableConfig?.newRowInActionsTH\r\n        : DEFAULT_CONFIG.newRowInActionsTH,\r\n      newRowInModal: this._tableConfig?.newRowInModal ? this._tableConfig?.newRowInModal : DEFAULT_CONFIG.newRowInModal,\r\n      disablePagination: this._tableConfig?.disablePagination\r\n        ? this._tableConfig?.disablePagination\r\n        : DEFAULT_CONFIG.disablePagination,\r\n      disableSorting: this._tableConfig?.disableSorting\r\n        ? this._tableConfig?.disableSorting\r\n        : DEFAULT_CONFIG.disableSorting,\r\n      pageSize: this._tableConfig?.pageSize ? this._tableConfig?.pageSize : DEFAULT_CONFIG.pageSize,\r\n      editCallback: this._tableConfig?.editCallback ? this._tableConfig?.editCallback : DEFAULT_CONFIG.editCallback,\r\n      eventRow: this._tableConfig?.eventRow ? this._tableConfig?.eventRow : DEFAULT_CONFIG.eventRow,\r\n      eventNewRow: this._tableConfig?.eventNewRow ? this._tableConfig?.eventNewRow : DEFAULT_CONFIG.eventNewRow,\r\n      selectColumn: this._tableConfig.selectColumn ? this._tableConfig.selectColumn : DEFAULT_CONFIG.selectColumn,\r\n      prepareFormGroup: this._tableConfig?.prepareFormGroup\r\n        ? this._tableConfig?.prepareFormGroup\r\n        : DEFAULT_CONFIG.prepareFormGroup\r\n    };\r\n\r\n    if (this._tableConfig?.disabled) {\r\n      this.readonly = this._tableConfig?.disabled;\r\n      this._isEditing = false;\r\n      this._columnsSchema.forEach((col: ArqDatatableColumnsSchema) => {\r\n        col.isEditable = false;\r\n        col.isCreable = false;\r\n      });\r\n    }\r\n\r\n    this.dataRequest.size = this.tableConfig?.pageSize || 5;\r\n  }\r\n\r\n  private customPaginator(): void {\r\n    this.paginator._intl.itemsPerPageLabel = this.itemsPerPageLabel;\r\n    this.paginator._intl.firstPageLabel = this.firstPageLabel;\r\n    this.paginator._intl.lastPageLabel = this.lastPageLabel;\r\n    this.paginator._intl.nextPageLabel = this.nextPageLabel;\r\n    this.paginator._intl.previousPageLabel = this.previousPageLabel;\r\n    this.paginator._intl.getRangeLabel = (page: number, pageSize: number, length: number): any => {\r\n      const start = page * pageSize + 1;\r\n      const end = (page + 1) * pageSize;\r\n      return `${start} - ${end} ${this.range} ${length}`;\r\n    };\r\n  }\r\n\r\n  public nextPage(event: PageEvent): void {\r\n    this.dataRequest.page = +event.pageIndex.toString();\r\n    this.dataRequest.size = +event.pageSize.toString();\r\n\r\n    this.refreshData();\r\n  }\r\n\r\n  public autocFilter(data: any, value: any): any {\r\n    let dataNew;\r\n    if (data) {\r\n      if (typeof data == 'function') {\r\n        return data;\r\n      } else {\r\n        if (Array.isArray(data)) {\r\n          dataNew = data;\r\n        } else {\r\n          data.subscribe((e: any) => (dataNew = e));\r\n        }\r\n      }\r\n\r\n      return dataNew?.filter((_: any) =>\r\n        _.description.toLowerCase().includes((typeof value == 'string' ? value : value.description).toLowerCase())\r\n      );\r\n    }\r\n  }\r\n\r\n  public editCol(col: any, row: any): any {\r\n    if (typeof col.isEditable == 'boolean') {\r\n      return col.isEditable;\r\n    }\r\n\r\n    return col.isEditable(row);\r\n  }\r\n\r\n  public editRow(row: any): void {\r\n    let form = row.newRow ? this.fg : this._form;\r\n    form.updateValueAndValidity();\r\n    if (this.tableConfig.editCallback) {\r\n      const editCallback = this.tableConfig.editCallback({ ...row, ...form.value }, form);\r\n      if (editCallback instanceof Observable) {\r\n        editCallback?.subscribe({\r\n          next: () => {\r\n            this.readonly = false;\r\n            this._isEditing = false;\r\n            row.isEdit = false;\r\n            row.isCreate = false;\r\n            this.refreshData();\r\n          }\r\n        });\r\n      } else {\r\n        this.readonly = false;\r\n        this._isEditing = false;\r\n        row.isEdit = false;\r\n        row.isCreate = false;\r\n        this.refreshData();\r\n      }\r\n    } else {\r\n      console.error('Not edit callback defined');\r\n    }\r\n  }\r\n\r\n  public showActionsCol(show: boolean = true): void {\r\n    if (show) {\r\n      if (!this.displayedColumns.includes('actions')) this.displayedColumns.push('actions');\r\n    } else {\r\n      if (this.tableConfig.actionsInContextMenu)\r\n        this.displayedColumns = this.displayedColumns.filter((col: string) => col !== 'actions');\r\n    }\r\n  }\r\n\r\n  public hideFilter(b: boolean): void {\r\n    this.hideIcon = !b;\r\n\r\n    this.tableConfig.filterType = this.originalFilterType;\r\n    if (this.hideIcon) {\r\n      this.tableConfig.filterType = 'hide';\r\n    }\r\n  }\r\n\r\n  public inputHandler(e: any, id: number, key: string): void {\r\n    if (!this.valid[id]) this.valid[id] = {};\r\n    this.valid[id][key] = e;\r\n  }\r\n\r\n  public addNewRow(): void {\r\n    this.readonly = true;\r\n    this.fg = this.cloneFormGroup();\r\n\r\n    if (this.tableConfig.prepareFormGroup) {\r\n      this.tableConfig.prepareFormGroup(this.fg);\r\n    }\r\n\r\n    let el: any = {};\r\n    el = this.fg.value;\r\n    el.newRow = true;\r\n    el.isCreate = true;\r\n    el.isEdit = false;\r\n\r\n    if (this.tableConfig.newRowInModal) {\r\n      this.openDialog(el);\r\n    } else {\r\n      this._isEditing = true;\r\n      this.dataSource.data.unshift(el);\r\n      this.dataSource.data = this.dataSource.data;\r\n    }\r\n  }\r\n\r\n  public openDialog(el: any): void {\r\n    const resp: any = this.tableConfig.eventNewRow ? this.tableConfig.eventNewRow(el) : null;\r\n\r\n    if (resp) {\r\n      this.serviceDialog.open(resp.data, resp.component).subscribe((res: any) => {\r\n        if (res) {\r\n          this.dataSource.data.unshift(res);\r\n          this.dataSource.data = this.dataSource.data;\r\n        }\r\n      });\r\n    }\r\n    this.readonly = false;\r\n  }\r\n\r\n  public showSelectCol(show: boolean = true): void {\r\n    if (show) {\r\n      if (!this.displayedColumns.includes('selectColumn')) this.displayedColumns.unshift('selectColumn');\r\n    } else {\r\n      this.displayedColumns = this.displayedColumns.filter((col: string) => col !== 'selectColumn');\r\n    }\r\n  }\r\n\r\n  // Context Menu\r\n  public displayContextMenu(event: { clientX: number; clientY: number }, row: any): void {\r\n    if (this.tableConfig.actionsInContextMenu) {\r\n      this.rightClickMenuItems = [];\r\n      this.tableConfig.actions?.forEach((action: any) => {\r\n        this.rightClickMenuItems.push({ menuText: action.tooltip, action: action.action, row: row });\r\n      });\r\n\r\n      this.isDisplayContextMenu = true;\r\n      this.rightClickMenuPositions = {\r\n        x: event.clientX,\r\n        y: event.clientY\r\n      };\r\n    }\r\n  }\r\n\r\n  @HostListener('document:click')\r\n  @HostListener('document:scroll', ['$event'])\r\n  public event(): void {\r\n    this.isDisplayContextMenu = false;\r\n  }\r\n\r\n  // Sorting\r\n  public sortHandler(ev: { active: string; direction: 'asc' | 'desc' | '' }): void {\r\n    if (this._isEditing) return;\r\n    if (ev.direction !== '') {\r\n      this.dataRequest.sort = ev.active + ',' + ev.direction;\r\n    } else {\r\n      delete this.dataRequest.sort;\r\n    }\r\n\r\n    this.refreshData();\r\n  }\r\n\r\n  // Filtering\r\n  public filterHandler(ev: any, col: string): void {\r\n    if (ev.keyCode !== 13) return;\r\n\r\n    if (ev.target.value !== '') {\r\n      this.dataRequest.filter = ev.target.value;\r\n      this.dataRequest.filterCol = col;\r\n    } else {\r\n      delete this.dataRequest.filter;\r\n      delete this.dataRequest.filterCol;\r\n    }\r\n\r\n    this.refreshData();\r\n  }\r\n\r\n  public obtenerElemento(obj: any, prop: any): any {\r\n    if (typeof obj !== 'object') throw 'getProp: obj is not an object';\r\n    if (typeof prop !== 'string') throw 'getProp: prop is not a string';\r\n\r\n    // Replace [] notation with dot notation\r\n    prop = prop.replace(/\\[[\"'`](.*)[\"'`]\\]/g, '.$1');\r\n\r\n    return prop.split('.').reduce(function (prev: { [x: string]: any }, curr: string | number) {\r\n      return prev ? prev[curr] : undefined;\r\n    }, obj || self);\r\n  }\r\n\r\n  public cloneFormGroup(): FormGroup {\r\n    let el: any = {};\r\n    this._columnsSchema.forEach((col: ArqDatatableColumnsSchema) => {\r\n      el[col.key] = col.defaultValue;\r\n    });\r\n    return this.formBuilder.group(el);\r\n  }\r\n\r\n  public eventRow(row: any): void {\r\n    if (this.rowClicked === row.id) this.rowClicked = -1;\r\n    else this.rowClicked = row.id;\r\n\r\n    this.tableConfig.eventRow && !row.isEdit\r\n      ? this.tableConfig.eventRow(row)\r\n      : console.error('Not edit callback defined');\r\n  }\r\n\r\n  // Select funcionality\r\n  public toggleSelectRow(row: any): void {\r\n    if (this.checkSelectedRow(row)) this.selectedRows = this.selectedRows.filter(_ => _.id !== row.id);\r\n    else this.selectedRows.push(row);\r\n\r\n    this.selectEvent$.emit({ selected: this.selectedRows, lastSelection: row });\r\n  }\r\n\r\n  public cleanSelectionRows(): void {\r\n    this.selectedRows = [];\r\n    this.selectEvent$.emit({ selected: this.selectedRows, lastSelection: [] });\r\n  }\r\n\r\n  public stopEditing(row?: any): void {\r\n    this._isEditing = false;\r\n    if (row) {\r\n      this.stopEditingRow(row);\r\n    } else {\r\n      this.stopEditingAllRows();\r\n    }\r\n  }\r\n\r\n  private stopEditingAllRows(): void {\r\n    this.dataSource.data.forEach((row: any) => {\r\n      this.stopEditingRow(row);\r\n    });\r\n  }\r\n\r\n  private stopEditingRow(row: any): void {\r\n    row.isEdit = false;\r\n    row.isCreate = false;\r\n    if (row.newRow) {\r\n      this.dataSource.data.shift();\r\n    }\r\n    row.newRow = false;\r\n  }\r\n\r\n  public desactivarItems(action: ArqDatatableActions): void {\r\n    if (action.inline) {\r\n      this._isEditing = true;\r\n    }\r\n  }\r\n\r\n  public actionHandler(action: ArqDatatableActions, element: any): void {\r\n    this.stopEditingAllRows();\r\n    const result = action.action(element);\r\n    if (result instanceof Observable) {\r\n      result?.subscribe({\r\n        next: () => this.refreshData()\r\n      });\r\n    }\r\n    this.desactivarItems(action);\r\n  }\r\n}\r\n","<div class=\"mat-elevation-z8\">\r\n  <!-- TABLE HEADER  -->\r\n  <div *ngIf=\"tableConfig.headerTableString\" [innerHTML]=\"tableConfig.headerTableString\"></div>\r\n  <div *ngIf=\"tableConfig.headerTable\" style=\"margin: 1em; display: flex; justify-content: flex-end\">\r\n    <ng-container>\r\n      <button\r\n        style=\"margin-left: 1em; margin-top: 1em\"\r\n        mat-raised-button\r\n        type=\"button\"\r\n        *ngFor=\"let btn of tableConfig.headerTable\"\r\n        [color]=\"btn.color ? btn.color : 'primary'\"\r\n        [matTooltip]=\"btn.tooltip ? btn.tooltip : ''\"\r\n        (click)=\"btn.action(this)\">\r\n        <mat-icon *ngIf=\"btn.icon\">{{ btn.icon }}</mat-icon>\r\n        {{ btn.label }}\r\n      </button>\r\n    </ng-container>\r\n  </div>\r\n\r\n  <!-- FILTER -->\r\n  <mat-form-field\r\n    appearance=\"outline\"\r\n    subscriptSizing=\"dynamic\"\r\n    class=\"table-filter\"\r\n    *ngIf=\"tableConfig.filterType === 'global' || tableConfig.filterType === 'both'\">\r\n    <mat-label>{{ tableConfig.filterLabel }}</mat-label>\r\n    <input\r\n      matInput\r\n      (keyup)=\"filterHandler($event, 'global')\"\r\n      placeholder=\"{{ tableConfig.filterPlaceholder }}\"\r\n      #input />\r\n  </mat-form-field>\r\n\r\n  <!-- TABLE -->\r\n  <table\r\n    #table\r\n    mat-table\r\n    [dataSource]=\"dataSource\"\r\n    class=\"mat-elevation-z8\"\r\n    matSort\r\n    (matSortChange)=\"sortHandler($event)\">\r\n    <!-- Select column -->\r\n    <ng-container matColumnDef=\"selectColumn\" *ngIf=\"tableConfig.selectColumn\">\r\n      <th\r\n        mat-header-cell\r\n        class=\"header-datatable\"\r\n        *matHeaderCellDef\r\n        style=\"cursor: pointer !important\"\r\n        (click)=\"cleanSelectionRows()\">\r\n        <!-- <mat-checkbox [checked]=\"false\" [disabled]=\"true\"></mat-checkbox> -->\r\n        ({{ selectedRows.length }})\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"toggleSelectRow(element)\">\r\n        <mat-checkbox [checked]=\"checkSelectedRow(element)\" [disabled]=\"true\"></mat-checkbox>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- Dynamic Columns -->\r\n    <ng-container [matColumnDef]=\"col.key\" *ngFor=\"let col of _columnsSchema\">\r\n      <ng-container *ngIf=\"tableConfig.disableSorting || col.isSortable === false\">\r\n        <th mat-header-cell class=\"header-datatable\" *matHeaderCellDef>{{ col.label }}</th>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"!tableConfig.disableSorting && col.isSortable !== false\">\r\n        <th mat-header-cell class=\"header-datatable\" *matHeaderCellDef mat-sort-header>\r\n          {{ col.label }}\r\n        </th>\r\n      </ng-container>\r\n      <!-- Data rows -->\r\n      <td mat-cell *matCellDef=\"let element\" (click)=\"eventRow(element)\">\r\n        <!-- Normal rows -->\r\n        <div\r\n          [ngSwitch]=\"col.type\"\r\n          *ngIf=\"!element.isEdit && !element.isCreate\"\r\n          (contextmenu)=\"displayContextMenu($event, element); (false)\">\r\n          <span *ngSwitchCase=\"'date'\">\r\n            {{ element[col.key] | date : 'dd/MM/yyyy' }}\r\n          </span>\r\n          <span *ngSwitchCase=\"'datetimepicker'\">\r\n            {{ element[col.key] | date : 'dd/MM/yyyy HH:mm' }}\r\n          </span>\r\n          <span *ngSwitchCase=\"'boolean'\">\r\n            {{ element[col.key] ? '&#10003;' : '&#10005;' }}\r\n          </span>\r\n          <span *ngSwitchCase=\"'select'\">\r\n            {{ findValue(element[col.key], col.data, col.lang, col.type) }}\r\n          </span>\r\n          <span *ngSwitchCase=\"'autocomplete'\">\r\n            {{ findValue(element[col.key], col.data, col.lang, col.type) }}\r\n          </span>\r\n          <span *ngSwitchCase=\"'image'\">\r\n            <img [src]=\"findSrc(element[col.key], col.data)\" />\r\n          </span>\r\n          <span *ngSwitchCase=\"'calc'\">\r\n            {{ col?.calculate(element) }}\r\n          </span>\r\n          <span *ngSwitchDefault>\r\n            {{ col.subkey ? this.obtenerElemento(element, col.key) : element[col.key] }}\r\n          </span>\r\n        </div>\r\n\r\n        <!-- Editing rows -->\r\n\r\n        <div [ngSwitch]=\"col.type\" *ngIf=\"element.isEdit && _form\" class=\"inputs-edit\">\r\n          <div *ngSwitchCase=\"'date'\" [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"editCol(col, element) && !col.subkey; else elseBlockNoEditable\">\r\n              <arq-datepicker [fGroup]=\"_form\" [value]=\"col.key\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'datetimepicker'\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"editCol(col, element) && !col.subkey; else elseBlockNoEditable\">\r\n              <arq-datetimepicker [value]=\"col.key\" [fGroup]=\"_form\"></arq-datetimepicker>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'boolean'\"\r\n            appearance=\"outline\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"editCol(col, element) && !col.subkey; else elseBlockNoEditable\">\r\n              <arq-checkbox-basic [value]=\"col.key\" [fGroup]=\"this._form\"></arq-checkbox-basic>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'select'\"\r\n            appearance=\"outline\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"editCol(col, element) && !col.subkey; else elseBlockNoEditable\">\r\n              <arq-select\r\n                [emptyOption]=\"true\"\r\n                [value]=\"col.key\"\r\n                [fGroup]=\"this._form\"\r\n                [selectOptionsList]=\"col.data || col.dataFn\"\r\n                (change)=\"inputHandler($event, element.id, col.key)\"\r\n                [fullObject]=\"col.fullObject\"\r\n                [lang]=\"col.lang\">\r\n              </arq-select>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'autocomplete'\"\r\n            appearance=\"outline\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"editCol(col, element) && !col.subkey; else elseBlockNoEditable\">\r\n              <arq-autocomplete\r\n                [options]=\"autocFilter(col.dataFnReq, element[col.key])\"\r\n                [panelWidth]=\"col.panelWidth || 'auto'\"\r\n                [dependsOn]=\"col.dependsOn\"\r\n                [value]=\"col.key\"\r\n                [fGroup]=\"this._form\"\r\n                (change)=\"inputHandler($event, element.id, col.key)\"\r\n                [lang]=\"col.lang\"\r\n                [defaultSize]=\"col.defaultSize || 10\">\r\n              </arq-autocomplete>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'number'\"\r\n            appearance=\"outline\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"editCol(col, element) && !col.subkey; else elseBlockNoEditable\">\r\n              <arq-input-number\r\n                [value]=\"col.key\"\r\n                [fGroup]=\"this._form\"\r\n                (change)=\"inputHandler($event, element.id, col.key)\">\r\n              </arq-input-number>\r\n            </div>\r\n          </div>\r\n\r\n          <div *ngSwitchDefault [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"editCol(col, element) && !col.subkey; else elseBlockNoEditable\">\r\n              <arq-text-input\r\n                [value]=\"col.key\"\r\n                [fGroup]=\"this._form\"\r\n                [maxLength]=\"col.maxLength ? col.maxLength : 100\"\r\n                (change)=\"inputHandler($event, element.id, col.key)\">\r\n              </arq-text-input>\r\n            </div>\r\n          </div>\r\n\r\n          <ng-template #elseBlockNoEditable>\r\n            <div [ngSwitch]=\"col.type\">\r\n              <span *ngSwitchCase=\"'date'\">\r\n                {{ element[col.key] | date : 'dd/MM/yyyy' }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'datetimepicker'\">\r\n                {{ element[col.key] | date : 'dd/MM/yyyy' }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'boolean'\">\r\n                {{ element[col.key] ? '&#10003;' : '&#10005;' }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'select'\">\r\n                {{ findValue(element[col.key], col.data || col.dataFn, col.lang, col.type) }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'autocomplete'\">\r\n                {{ findValue(element[col.key], col.data || col.dataFnReq, col.lang, col.type) }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'image'\">\r\n                <img [src]=\"findSrc(element[col.key], col.data)\" />\r\n              </span>\r\n              <span *ngSwitchDefault>\r\n                {{ col.subkey ? this.obtenerElemento(element, col.key) : element[col.key] }}\r\n              </span>\r\n            </div>\r\n          </ng-template>\r\n        </div>\r\n\r\n        <div [ngSwitch]=\"col.type\" *ngIf=\"element.isCreate && fg\" class=\"inputs-edit\">\r\n          <div *ngSwitchCase=\"'date'\" [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"col.isCreable !== false && !col.subkey; else elseBlockShow\">\r\n              <arq-datepicker [fGroup]=\"fg\" [value]=\"col.key\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'datetimepicker'\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"col.isCreable !== false && !col.subkey; else elseBlockShow\">\r\n              <arq-datetimepicker [value]=\"col.key\" [fGroup]=\"fg\"></arq-datetimepicker>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'boolean'\"\r\n            appearance=\"outline\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"col.isCreable !== false && !col.subkey; else elseBlockShow\">\r\n              <arq-checkbox-basic [value]=\"col.key\" [fGroup]=\"fg\"></arq-checkbox-basic>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'select'\"\r\n            appearance=\"outline\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"col.isCreable !== false && !col.subkey; else elseBlockShow\">\r\n              <arq-select\r\n                [fullObject]=\"col.fullObject\"\r\n                [emptyOption]=\"true\"\r\n                [value]=\"col.key\"\r\n                [fGroup]=\"fg\"\r\n                [selectOptionsList]=\"col.data || col.dataFn\"\r\n                (change)=\"inputHandler($event, element.id, col.key)\"\r\n                [lang]=\"col.lang\">\r\n              </arq-select>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'autocomplete'\"\r\n            appearance=\"outline\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"col.isCreable !== false && !col.subkey; else elseBlockShow\">\r\n              <arq-autocomplete\r\n                [options]=\"autocFilter(col.dataFnReq, element[col.key])\"\r\n                [panelWidth]=\"col.panelWidth || 'auto'\"\r\n                [dependsOn]=\"col.dependsOn\"\r\n                [value]=\"col.key\"\r\n                [fGroup]=\"fg\"\r\n                (change)=\"inputHandler($event, element.id, col.key)\"\r\n                [lang]=\"col.lang\"\r\n                [defaultSize]=\"col.defaultSize || 10\">\r\n              </arq-autocomplete>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            *ngSwitchCase=\"'number'\"\r\n            appearance=\"outline\"\r\n            [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"col.isCreable !== false && !col.subkey; else elseBlockShow\">\r\n              <arq-input-number [value]=\"col.key\" [fGroup]=\"fg\" (change)=\"inputHandler($event, element.id, col.key)\">\r\n              </arq-input-number>\r\n            </div>\r\n          </div>\r\n\r\n          <div *ngSwitchDefault [style]=\"col.editInputSize ? 'width: ' + col.editInputSize + ' !important' : ''\">\r\n            <div *ngIf=\"col.isCreable !== false && !col.subkey; else elseBlockShow\">\r\n              <arq-text-input\r\n                [value]=\"col.key\"\r\n                [fGroup]=\"fg\"\r\n                [maxLength]=\"col.maxLength ? col.maxLength : 100\"\r\n                (change)=\"inputHandler($event, element.id, col.key)\">\r\n              </arq-text-input>\r\n            </div>\r\n          </div>\r\n\r\n          <ng-template #elseBlockShow>\r\n            <div [ngSwitch]=\"col.type\">\r\n              <span *ngSwitchCase=\"'date'\">\r\n                {{ element[col.key] | date : 'dd/MM/yyyy' }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'datetimepicker'\">\r\n                {{ element[col.key] | date : 'dd/MM/yyyy' }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'boolean'\">\r\n                {{ element[col.key] ? '&#10003;' : '&#10005;' }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'select'\">\r\n                {{ findValue(element[col.key], col.data || col.dataFn, col.lang, col.type) }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'autocomplete'\">\r\n                {{ findValue(element[col.key], col.data || col.dataFnReq, col.lang, col.type) }}\r\n              </span>\r\n              <span *ngSwitchCase=\"'image'\">\r\n                <img [src]=\"findSrc(element[col.key], col.data)\" />\r\n              </span>\r\n              <span *ngSwitchDefault>\r\n                {{ col.subkey ? this.obtenerElemento(element, col.key) : element[col.key] }}\r\n              </span>\r\n            </div>\r\n          </ng-template>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- Actions Columns -->\r\n    <ng-container matColumnDef=\"actions\" *ngIf=\"tableConfig.actions?.length\">\r\n      <th mat-header-cell class=\"header-datatable\" *matHeaderCellDef>\r\n        {{ tableConfig.actionColLabel }}\r\n        <arq-button\r\n          *ngIf=\"tableConfig.newRowInActionsTH\"\r\n          class=\"material-icons arq-toolbar-menu add-button\"\r\n          [ngClass]=\"{ disabled: readonly || _isEditing }\"\r\n          (click)=\"addNewRow()\"\r\n          [matTooltip]=\"readonly ? '' : 'Crear'\"\r\n          color=\"primary\"\r\n          [icon]=\"'add_box'\"\r\n          [tipoButton]=\"'icon'\"\r\n          [readonly]=\"readonly || _isEditing\">\r\n        </arq-button>\r\n\r\n        <ng-template [ngIf]=\"tableConfig.newRowInActionsTH && showFilters\">\r\n          <arq-button\r\n            *ngIf=\"hideIcon\"\r\n            class=\"material-icons arq-toolbar-menu add-button\"\r\n            (click)=\"hideFilter(true)\"\r\n            matTooltip=\"ocultar filtros\"\r\n            color=\"primary\"\r\n            [icon]=\"'visibility'\"\r\n            [tipoButton]=\"'icon'\">\r\n          </arq-button>\r\n          <arq-button\r\n            *ngIf=\"!hideIcon\"\r\n            class=\"material-icons arq-toolbar-menu add-button\"\r\n            (click)=\"hideFilter(false)\"\r\n            matTooltip=\"ocultar filtros\"\r\n            color=\"primary\"\r\n            [icon]=\"'visibility_off'\"\r\n            [tipoButton]=\"'icon'\">\r\n          </arq-button>\r\n        </ng-template>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element\" class=\"noCursor\">\r\n        <div class=\"action-buttons\" style=\"display: flex\">\r\n          <ng-container *ngIf=\"!element.isEdit && !element.isCreate\">\r\n            <ng-container *ngFor=\"let action of tableConfig.actions\">\r\n              <ng-container *ngIf=\"action.displayWhenDisabled || (!action.displayWhenDisabled && !readonly)\">\r\n                <button\r\n                  mat-button\r\n                  *ngIf=\"!(action.displayCondition && !action.displayCondition(element)); else hiddenButton\"\r\n                  class=\"btn-strech\"\r\n                  (click)=\"this.actionHandler(action, element)\"\r\n                  [matTooltip]=\"action.tooltip\"\r\n                  [color]=\"action.color || 'primary'\"\r\n                  [disabled]=\"!(element.isCreate || element.isEdit) && _isEditing\">\r\n                  <mat-icon *ngIf=\"!action.label\">{{ action.icon }}</mat-icon>\r\n                  <span *ngIf=\"action.label\">{{ action.label }}</span>\r\n                </button>\r\n              </ng-container>\r\n              <ng-template #hiddenButton>\r\n                <button mat-button mat-button class=\"hidden\" class=\"hidden\"></button>\r\n              </ng-template>\r\n            </ng-container>\r\n          </ng-container>\r\n          <ng-container *ngIf=\"(element.isEdit || element.isCreate) && _isEditing\">\r\n            <div class=\"btn-edit\">\r\n              <arq-button\r\n                class=\"material-icons arq-toolbar-menu save-button\"\r\n                (click)=\"editRow(element); showActionsCol(false)\"\r\n                matTooltip=\"Guardar Cambios\"\r\n                color=\"primary\"\r\n                [icon]=\"'check_circle'\"\r\n                [tipoButton]=\"'icon'\"></arq-button>\r\n              <arq-button\r\n                class=\"material-icons arq-toolbar-menu cancel-button\"\r\n                (click)=\"showActionsCol(false); stopEditing(element)\"\r\n                matTooltip=\"Cancelar\"\r\n                color=\"warn\"\r\n                [icon]=\"'cancel'\"\r\n                [tipoButton]=\"'icon'\"></arq-button>\r\n            </div>\r\n          </ng-container>\r\n        </div>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- Filter Rows -->\r\n    <ng-container [matColumnDef]=\"'selectColumnf'\">\r\n      <th mat-header-cell *matHeaderCellDef></th>\r\n    </ng-container>\r\n    <ng-container [matColumnDef]=\"col.key + 'f'\" *ngFor=\"let col of _columnsSchema\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        <ng-container\r\n          *ngIf=\"\r\n            col.isFilterable !== false &&\r\n            (tableConfig.filterType === 'column' || tableConfig.filterType === 'both') &&\r\n            col.key !== 'selectColumn' &&\r\n            col.key !== 'actions'\r\n          \">\r\n          <mat-form-field\r\n            class=\"filter-toolbar\"\r\n            subscriptSizing=\"dynamic\"\r\n            [ngClass]=\"{ small: true }\"\r\n            appearance=\"outline\">\r\n            <input\r\n              matInput\r\n              [disabled]=\"this._isEditing\"\r\n              (keyup)=\"filterHandler($event, col.key)\"\r\n              placeholder=\"{{ tableConfig.filterLabel }}\" />\r\n          </mat-form-field>\r\n        </ng-container>\r\n      </th>\r\n    </ng-container>\r\n    <ng-container [matColumnDef]=\"'actionsf'\">\r\n      <th mat-header-cell *matHeaderCellDef></th>\r\n    </ng-container>\r\n\r\n    <!-- HEADERS AND FILTERS -->\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr\r\n      mat-header-row\r\n      *matHeaderRowDef=\"iterateAndF(displayedColumns)\"\r\n      [ngClass]=\"{ hidden_row: tableConfig.filterType === 'hide' }\"></tr>\r\n    <tr\r\n      mat-row\r\n      *matRowDef=\"let row; columns: displayedColumns\"\r\n      [style.background-color]=\"rowClicked === row.id ? '#f2f2f2' : ''\"></tr>\r\n\r\n    <!-- Row shown when there is no matching data. -->\r\n    <tr class=\"mat-row\" *matNoDataRow>\r\n      <td *ngIf=\"!isLoading\" class=\"mat-cell\" colspan=\"4\">{{ tableConfig.noDataString }}</td>\r\n    </tr>\r\n  </table>\r\n\r\n  <!-- PAGINATOR -->\r\n  <mat-paginator\r\n    [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n    showFirstLastButtons\r\n    [pageSize]=\"tableConfig.pageSize\"\r\n    [length]=\"totalElements\"\r\n    (page)=\"nextPage($event)\">\r\n  </mat-paginator>\r\n\r\n  <!-- TABLE FOOTER  -->\r\n  <div *ngIf=\"tableConfig.footerTableString\" [innerHTML]=\"tableConfig.footerTableString\"></div>\r\n  <div *ngIf=\"tableConfig.footerTable\" style=\"margin: 1em; display: flex; justify-content: flex-end\">\r\n    <ng-container>\r\n      <button\r\n        mat-stroked-button\r\n        *ngFor=\"let btn of tableConfig.footerTable\"\r\n        [color]=\"btn.color ? btn.color : 'primary'\"\r\n        [matTooltip]=\"btn.tooltip ? btn.tooltip : ''\"\r\n        (click)=\"btn.action()\">\r\n        <mat-icon *ngIf=\"btn.icon\">{{ btn.icon }}</mat-icon>\r\n        {{ btn.label }}\r\n      </button>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n\r\n<!-- CONTEXT-MENU -->\r\n<arq-context-menu\r\n  *ngIf=\"rightClickMenuItems.length > 0 && isDisplayContextMenu\"\r\n  [contextMenuItems]=\"rightClickMenuItems\"\r\n  (onContextMenuItemClick)=\"$event.data.action($event.data.row); showActionsCol()\"\r\n  [menuPositions]=\"rightClickMenuPositions\">\r\n</arq-context-menu>\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { Observable, takeUntil } from 'rxjs';\r\n\r\nimport {\r\n  ArqPageableRequest,\r\n  ArqPageableResponse,\r\n  ArqDatatableConfig,\r\n  ArqDatatableMantenimientoTable,\r\n  ArqBaseComponent,\r\n  ArqDatatableActions,\r\n  ArqDatatableComponent\r\n} from '../../../../public-api';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'arq-datatable-mantenimiento',\r\n  templateUrl: './arq-datatable-mantenimiento.component.html',\r\n  styleUrls: ['./arq-datatable-mantenimiento.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqDatatableMantenimientoComponent extends ArqBaseComponent implements OnInit {\r\n  @Input('tableList') public $tableList!: Observable<ArqDatatableMantenimientoTable[]>;\r\n  @Input() public tableConfig: ArqDatatableConfig = {};\r\n  @Input('selectedTableChange') public _selectedTableChange!: (_table: string) => any;\r\n\r\n  @Input('loadDataMantFn') public _loadDataMantFn!: (\r\n    request: ArqPageableRequest,\r\n    table?: string\r\n  ) => Observable<ArqPageableResponse>;\r\n\r\n  @Output('loadDataEvent') public loadDataEvent$ = new EventEmitter<{ request: ArqPageableRequest; table: string }>();\r\n\r\n  @ViewChild(ArqDatatableComponent) public datatable!: ArqDatatableComponent;\r\n\r\n  public dataRequest: ArqPageableRequest = { page: 0, size: this.tableConfig.pageSize || 5 };\r\n\r\n  public selectedTable!: ArqDatatableMantenimientoTable | undefined;\r\n  public tableList!: ArqDatatableMantenimientoTable[];\r\n  public tableLoaded = false;\r\n\r\n  public fGroup!: FormGroup;\r\n  public editing!: boolean;\r\n\r\n  public constructor(private _changeDetector: ChangeDetectorRef, private fb: FormBuilder) {\r\n    super();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.$tableList.pipe(takeUntil(this.unsubscribe$)).subscribe(res => {\r\n      this.tableList = res;\r\n      this.selectedTable = res[0];\r\n      this.generateForm();\r\n\r\n      this.tableLoaded = true;\r\n    });\r\n\r\n    this.tableConfig?.actions?.forEach((element: ArqDatatableActions) => {\r\n      if (element.inline) {\r\n        element.action = this.action();\r\n      }\r\n    });\r\n  }\r\n\r\n  public changeTable(_table: string) {\r\n    this.tableLoaded = false;\r\n    this.editing = false;\r\n    this.selectedTable = this.tableList.find(_ => _.value === _table);\r\n    this.generateForm();\r\n    setTimeout(() => {\r\n      this.tableLoaded = true;\r\n      // Al ejecutar el change detector se provoca el loadData en el datatable\r\n      this._changeDetector.detectChanges();\r\n      if (this._selectedTableChange) {\r\n        this._selectedTableChange(_table);\r\n      }\r\n    }, 1);\r\n  }\r\n\r\n  public requireData(request: ArqPageableRequest): void {\r\n    this.loadDataEvent$.emit({ request, table: this.selectedTable?.value || '' });\r\n  }\r\n\r\n  public action() {\r\n    return (row: any): any => {\r\n      row.isEdit = !row.isEdit;\r\n      for (const key in row) {\r\n        if (Object.prototype.hasOwnProperty.call(row, key)) {\r\n          this.fGroup?.controls[key]?.setValue(row[key]);\r\n        }\r\n      }\r\n      this.editing = true;\r\n      row.newRow = false;\r\n    };\r\n  }\r\n\r\n  public generateForm() {\r\n    this.fGroup = new FormGroup({});\r\n    this.selectedTable?.columnsSchema.forEach(fg => {\r\n      this.fGroup.addControl(fg.key, new FormControl(''));\r\n    });\r\n\r\n    if (this.datatable) {\r\n      //TODO: Si cambian fg y fgCopy a privado se produce un error.\r\n      this.datatable.fg = this.fGroup;\r\n      this.datatable.fgCopy = this.fGroup;\r\n    }\r\n  }\r\n\r\n  public loadDataMantFn() {\r\n    let loadDataMantFnInherited = this._loadDataMantFn;\r\n    let table = this.selectedTable?.value;\r\n    return (request: ArqPageableRequest): Observable<ArqPageableResponse> => {\r\n      return loadDataMantFnInherited(request, table);\r\n    };\r\n  }\r\n}\r\n","<div *ngIf=\"tableList\">\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Select table</mat-label>\r\n    <mat-select placeholder=\"Select table\" (selectionChange)=\"changeTable($event.value)\" [value]=\"selectedTable?.value\">\r\n      <mat-option *ngFor=\"let table of tableList\" [value]=\"table.value\">\r\n        {{ table.description }}\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\r\n  <arq-datatable\r\n    *ngIf=\"selectedTable && tableLoaded\"\r\n    [loadDataMantFn]=\"loadDataMantFn()\"\r\n    [columnsSchema]=\"selectedTable.columnsSchema\"\r\n    [tableConfig]=\"tableConfig\"\r\n    [isEditing]=\"editing\"\r\n    [form]=\"fGroup\">\r\n  </arq-datatable>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\r\n\r\nimport {\r\n  ArqAutocompleteModule,\r\n  ArqButtonModule,\r\n  ArqCheckboxBasicModule,\r\n  ArqContextMenuModule,\r\n  ArqDateTimepickerModule,\r\n  ArqDatepickerModule,\r\n  ArqInputNumberModule,\r\n  ArqSelectModule,\r\n  ArqTextInputModule\r\n} from '../components';\r\nimport { ArqDatatableComponent } from './arq-datatable.component';\r\n\r\n@NgModule({\r\n  declarations: [ArqDatatableComponent],\r\n  exports: [ArqDatatableComponent],\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    FormsModule,\r\n\r\n    ArqButtonModule,\r\n    ArqContextMenuModule,\r\n    ArqDatepickerModule,\r\n    ArqTextInputModule,\r\n    ArqCheckboxBasicModule,\r\n    ArqSelectModule,\r\n    ArqAutocompleteModule,\r\n    ArqDateTimepickerModule,\r\n    ArqInputNumberModule,\r\n\r\n    MatTableModule,\r\n    MatCheckboxModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatDatepickerModule,\r\n    MatCardModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule,\r\n    MatPaginatorModule,\r\n    MatInputModule,\r\n    MatNativeDateModule,\r\n    MatTooltipModule,\r\n    MatAutocompleteModule,\r\n    MatSortModule,\r\n    MatButtonModule\r\n  ],\r\n  providers: [MatDialogModule, { provide: MAT_DIALOG_DATA, useValue: {} }, { provide: MatDialogRef, useValue: {} }]\r\n  // entryComponents: [DialogContent]\r\n})\r\nexport class ArqDatatableModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { ArqDatatableModule } from '../arq-datatable/arq-datatable.module';\r\nimport { ArqSelectModule } from '../arq-select/arq-select.module';\r\nimport { ArqDatatableMantenimientoComponent } from './arq-datatable-mantenimiento.component';\r\n\r\n@NgModule({\r\n  declarations: [ArqDatatableMantenimientoComponent],\r\n  exports: [ArqDatatableMantenimientoComponent],\r\n  imports: [ReactiveFormsModule, CommonModule, ArqDatatableModule, ArqSelectModule, MatSelectModule]\r\n})\r\nexport class ArqDatatableMantenimientoModule {}\r\n","import { ArqList } from '../../interfaces/interfaces';\r\nimport { ArqDatatableConfig } from '../components';\r\n\r\nexport interface ArqDTBusquedaAvanzadaColumns {\r\n  idColumn: string;\r\n  idDatatable: string;\r\n  type: 'text' | 'number' | 'date' | 'datetimepicker' | 'boolean' | 'select' | 'autocomplete' | 'image';\r\n  format?: string;\r\n  order: number;\r\n  label: string;\r\n  sizeCol?: string;\r\n\r\n  comboStatic?: any;\r\n  comboDynamic?: any;\r\n  comboItemList?: ArqList[];\r\n\r\n  pkColumn?: any; // De momento, solo define si la columna es usable/visible (tambien, en teoria es la pk de la tabla)\r\n  showDefault?: boolean; // Define si la columna esta mostrada\r\n  showHeader?: boolean; // Define si la columna es filtrable\r\n\r\n  declaredColumn?: boolean;\r\n\r\n  defaultFilter?: DefaultFilterType;\r\n  isOnlyFilter?: boolean;\r\n  dependsOn?: string;\r\n}\r\n\r\nexport interface ArqDTBusquedaAvanzadaFilters {\r\n  idDatatable: string;\r\n  idColumn: string;\r\n  type: string;\r\n  option: string;\r\n  formatColumn?: string | null;\r\n\r\n  baseFilterText?: string;\r\n  baseFilterNumber?: number;\r\n  baseFilterDate?: Date;\r\n  baseFilterCombo?: Array<any>;\r\n  fromNumber?: number;\r\n  untilNumber?: number;\r\n  fromDate?: Date;\r\n  untilDate?: Date;\r\n\r\n  hidden?: boolean;\r\n  dependsOn?: string[];\r\n}\r\n\r\nexport interface ArqDTBusquedaAvanzadaConfig {\r\n  datatable: ArqDatatableConfig; // Configuraciones relativas al datatable, revisar interfaz ArqDatatableConfig\r\n  headerButtons?: Array<ArqDTBusquedaAvanzadaHeaderBtn>; // Array con botones para header\r\n  headerToolbarsPos?: 'inverted' | 'hidden' | 'onlyFilters' | 'onlyButtons' | 'normal';\r\n  cleanFiltersButton?: boolean; // Si false, se oculta el btn clean filters\r\n}\r\n\r\nexport interface ArqDTBusquedaAvanzadaHeaderBtn {\r\n  id: string;\r\n  label: string;\r\n  value?: any;\r\n  color?: string;\r\n  tooltip?: string;\r\n}\r\n\r\nexport interface ArqDTBusquedaAvanzadaSavedFilter {\r\n  idDatatableFilter?: number;\r\n  idDatatable: string;\r\n  nombre: string;\r\n  isPublico?: boolean;\r\n  propietario?: string;\r\n  isPredeterminado?: boolean;\r\n  columns: [{ idColumn: string; idDatatableFilter: number; isShowDefault: boolean }] | any;\r\n  filters: ArqDTBusquedaAvanzadaFilters[];\r\n}\r\n\r\nexport interface ArqDTBusquedaAvanzadaComboDynam {\r\n  idColumn: string;\r\n  idDatatable: string;\r\n  queryParams?: { [key: string]: string };\r\n}\r\n\r\nexport enum DefaultFilterType {\r\n  NO = 0,\r\n  NO_REQUERIDO = 1,\r\n  REQUERIDO = 2\r\n}\r\n","import { Component, ElementRef, Inject, ViewChild } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { map, of } from 'rxjs';\r\n\r\nimport { ArqDatatableColumnsSchema } from '../../../arq-datatable/arq-datatable.interface';\r\nimport { ArqList } from './../../../../interfaces/arq-list.interface';\r\n\r\n@Component({\r\n  selector: 'arq-adv-filter-dialog',\r\n  templateUrl: 'adv-filter-dialog.component.html',\r\n  styleUrls: ['adv-filter-dialog.component.scss']\r\n})\r\nexport class ArqAdvFilterDialogComponent {\r\n  public filter: { type: any; data: Array<string | ArqList> } = { type: null, data: [] };\r\n  public filterData?: string | ArqList;\r\n\r\n  public filterTypes: any = FILTER_TYPES['text'];\r\n\r\n  public readonly separatorKeysCodes = [ENTER, COMMA] as const;\r\n\r\n  @ViewChild('chipInput') public chipInput?: ElementRef<HTMLInputElement>;\r\n\r\n  public constructor(\r\n    public dialogRef: MatDialogRef<ArqAdvFilterDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    if (data.selectedCol) this.colChanged(data.selectedCol);\r\n  }\r\n\r\n  public colChanged(col: any): void {\r\n    this.filterTypes = FILTER_TYPES[col.type];\r\n    if (col.type === 'autocomplete') {\r\n      col.dataFn = of(col.data);\r\n    }\r\n  }\r\n\r\n  public generateFilter(): {\r\n    column: ArqDatatableColumnsSchema | null;\r\n    data: Array<string>;\r\n    type: string;\r\n  } {\r\n    let _type: string = this.filter.type;\r\n    let _data: any[] = this.filter.data;\r\n\r\n    if (['null', 'notnull'].includes(this.filter.type)) {\r\n      _type = 'informed';\r\n      _data = this.filter.type === 'null' ? ['false'] : ['true'];\r\n    }\r\n\r\n    if (this.filter.type === 'autocompletemultiple') {\r\n      _data = this.filter.data.map(data => (data as any).value);\r\n    }\r\n\r\n    return {\r\n      column: this.data.selectedCol,\r\n      type: _type,\r\n      data: _data\r\n    };\r\n  }\r\n\r\n  public addTx(event: any): void {\r\n    if (event.value) this.filter.data.push(event.value.trim());\r\n    event.chipInput!.clear();\r\n  }\r\n\r\n  public removeTx(tx: any): void {\r\n    const index = this.filter.data.indexOf(tx);\r\n    if (index >= 0) this.filter.data.splice(index, 1);\r\n  }\r\n\r\n  public doFilter(): void {\r\n    if (!this.filterData) return;\r\n    if (this.filterData.hasOwnProperty('value')) {\r\n      this.filter.data.push(this.filterData);\r\n      this.filterData = '';\r\n      this.chipInput!.nativeElement.value = '';\r\n    }\r\n    this.data.selectedCol.dataFn = this.data.selectedCol.dataFn!.pipe(\r\n      map((val: ArqList[]) => this.filterVal(val, this.filterData!))\r\n    );\r\n  }\r\n\r\n  private filterVal(val: ArqList[], data: string | ArqList): ArqList[] {\r\n    if (!val) return [];\r\n    return val.filter(\r\n      item =>\r\n        item.description.toLowerCase().includes(this.getValue(data).toLowerCase()) && !this.filter.data.includes(item)\r\n    );\r\n  }\r\n\r\n  private getValue(data: string | ArqList): string {\r\n    return typeof data === 'string' ? data : data.value;\r\n  }\r\n}\r\n\r\nconst FILTER_TYPES: any = {\r\n  text: [\r\n    ['notnull', 'Informado'],\r\n    ['null', 'No informado'],\r\n    ['textmultiple', 'Multiple']\r\n  ],\r\n  number: [\r\n    ['notnull', 'Informado'],\r\n    ['null', 'No informado'],\r\n    ['numberrange', 'Rango']\r\n  ],\r\n  date: [\r\n    ['notnull', 'Informado'],\r\n    ['null', 'No informado'],\r\n    ['daterange', 'Rango']\r\n  ],\r\n  datetimepicker: [\r\n    ['notnull', 'Informado'],\r\n    ['null', 'No informado']\r\n  ],\r\n  boolean: [\r\n    ['notnull', 'Informado'],\r\n    ['null', 'No informado']\r\n  ],\r\n  select: [\r\n    ['notnull', 'Informado'],\r\n    ['null', 'No informado'],\r\n    ['selectmultiple', 'Multiple']\r\n  ],\r\n  autocomplete: [\r\n    ['notnull', 'Informado'],\r\n    ['null', 'No informado'],\r\n    ['autocompletemultiple', 'Multiple']\r\n  ],\r\n  image: [\r\n    ['notnull', 'Informado'],\r\n    ['null', 'No informado']\r\n  ]\r\n};\r\n","<h2 mat-dialog-title>{{ 'DT-BA.ADV-FILTER.TITLE' | transloco }}</h2>\r\n\r\n<mat-dialog-content>\r\n  <h4>{{ 'DT-BA.COLUMN' | transloco }}</h4>\r\n  <mat-form-field>\r\n    <mat-select\r\n      [placeholder]=\"'DT-BA.COLUMN' | transloco\"\r\n      [(value)]=\"data.selectedCol\"\r\n      (selectionChange)=\"colChanged($event.value)\">\r\n      <mat-option *ngFor=\"let col of data.filterCols(data.allColumnsSchema)\" [value]=\"col\">{{ col.label }}</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n  <h4>{{ 'DT-BA.FILTERS' | transloco }}</h4>\r\n  <i *ngIf=\"!data.selectedCol\">{{ 'DT-BA.ADV-FILTER.NO-COL-SEL' | transloco }}</i>\r\n  <ng-container *ngIf=\"data.selectedCol\">\r\n    <mat-form-field>\r\n      <mat-select [placeholder]=\"'DT-BA.TYPE' | transloco\" [(value)]=\"filter.type\">\r\n        <mat-option *ngFor=\"let type of filterTypes\" [value]=\"type[0]\">{{ type[1] }}</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <ng-container *ngIf=\"filter.type\" [ngSwitch]=\"data.selectedCol.type\">\r\n      <br />\r\n      <ng-container *ngSwitchCase=\"'date'\">\r\n        <ng-container *ngTemplateOutlet=\"date\"></ng-container>\r\n      </ng-container>\r\n      <ng-container *ngSwitchCase=\"'number'\">\r\n        <ng-container *ngTemplateOutlet=\"number\"></ng-container>\r\n      </ng-container>\r\n      <ng-container *ngSwitchCase=\"'select'\">\r\n        <ng-container *ngTemplateOutlet=\"select\"></ng-container>\r\n      </ng-container>\r\n      <ng-container *ngSwitchCase=\"'autocomplete'\">\r\n        <ng-container *ngTemplateOutlet=\"autocomplete\"></ng-container>\r\n      </ng-container>\r\n      <ng-container *ngSwitchCase=\"'text'\">\r\n        <ng-container *ngTemplateOutlet=\"text\"></ng-container>\r\n      </ng-container>\r\n    </ng-container>\r\n  </ng-container>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-raised-button color=\"warn\" mat-dialog-close>{{ 'GENERIC.CANCEL' | transloco }}</button>\r\n  <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"generateFilter()\" cdkFocusInitial>\r\n    {{ 'DT-BA.FILTERV' | transloco }}\r\n  </button>\r\n</mat-dialog-actions>\r\n\r\n<ng-template #date>\r\n  <ng-container [ngSwitch]=\"filter.type\">\r\n    <ng-container *ngSwitchDefault></ng-container>\r\n    <ng-container *ngSwitchCase=\"'daterange'\">\r\n      <mat-form-field>\r\n        <mat-date-range-input [rangePicker]=\"picker\" (click)=\"picker.open()\">\r\n          <input\r\n            matStartDate\r\n            placeholder=\"{{ 'GENERIC.SINCE' | transloco }}\"\r\n            (dateChange)=\"filter.data[0] = $event.value.toDate()\" />\r\n          <input\r\n            matEndDate\r\n            placeholder=\"{{ 'GENERIC.TO' | transloco }}\"\r\n            (dateChange)=\"filter.data[1] = $event.value.toDate()\" />\r\n        </mat-date-range-input>\r\n        <mat-date-range-picker #picker></mat-date-range-picker>\r\n      </mat-form-field>\r\n    </ng-container>\r\n  </ng-container>\r\n</ng-template>\r\n\r\n<ng-template #number>\r\n  <ng-container [ngSwitch]=\"filter.type\">\r\n    <ng-container *ngSwitchDefault></ng-container>\r\n    <ng-container *ngSwitchCase=\"'numberrange'\">\r\n      <mat-form-field>\r\n        <mat-label>{{ 'GENERIC.SINCE' | transloco }}</mat-label>\r\n        <input matInput type=\"number\" [(ngModel)]=\"filter.data[0]\" />\r\n      </mat-form-field>\r\n      <mat-form-field class=\"ml-1\">\r\n        <mat-label>{{ 'GENERIC.TO' | transloco }}</mat-label>\r\n        <input matInput type=\"number\" [(ngModel)]=\"filter.data[1]\" />\r\n      </mat-form-field>\r\n    </ng-container>\r\n  </ng-container>\r\n</ng-template>\r\n\r\n<ng-template #select>\r\n  <ng-container [ngSwitch]=\"filter.type\">\r\n    <ng-container *ngSwitchDefault></ng-container>\r\n    <ng-container *ngSwitchCase=\"'selectmultiple'\">\r\n      <mat-form-field>\r\n        <mat-select [(ngModel)]=\"filter.data\" multiple>\r\n          <mat-option *ngFor=\"let col of data.selectedCol.data\" [value]=\"col.value\">\r\n            {{ col.description }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </ng-container>\r\n  </ng-container>\r\n</ng-template>\r\n\r\n<ng-template #autocomplete>\r\n  <ng-container [ngSwitch]=\"filter.type\">\r\n    <ng-container *ngSwitchDefault></ng-container>\r\n    <ng-container *ngSwitchCase=\"'autocompletemultiple'\">\r\n      <mat-form-field>\r\n        <mat-chip-grid #chipGrid aria-label=\"selection\">\r\n          <mat-chip-row *ngFor=\"let chip of filter.data\" [value]=\"$any(chip).value\" (removed)=\"removeTx(chip)\">\r\n            {{ $any(chip).description }}\r\n            <button matChipRemove [attr.aria-label]=\"'remove ' + data\">\r\n              <mat-icon>cancel</mat-icon>\r\n            </button>\r\n          </mat-chip-row>\r\n        </mat-chip-grid>\r\n        <input\r\n          #chipInput\r\n          [type]=\"'text'\"\r\n          [matChipInputFor]=\"chipGrid\"\r\n          [matAutocomplete]=\"auto\"\r\n          [(ngModel)]=\"filterData\"\r\n          (ngModelChange)=\"doFilter()\" />\r\n        <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" class=\"arq-autocomplete\">\r\n          <mat-option *ngFor=\"let col of data.selectedCol.dataFn | async\" [value]=\"col\">\r\n            {{ col.description }}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n      </mat-form-field>\r\n    </ng-container>\r\n  </ng-container>\r\n</ng-template>\r\n\r\n<ng-template #text>\r\n  <ng-container [ngSwitch]=\"filter.type\">\r\n    <ng-container *ngSwitchDefault></ng-container>\r\n    <ng-container *ngSwitchCase=\"'textmultiple'\">\r\n      <mat-form-field>\r\n        <mat-chip-grid #chipGrid>\r\n          <mat-chip-row *ngFor=\"let tx of filter.data\" (removed)=\"removeTx(tx)\">\r\n            {{ tx }}\r\n            <button matChipRemove><mat-icon>cancel</mat-icon></button>\r\n          </mat-chip-row>\r\n          <input\r\n            [placeholder]=\"'DT-BA.ADV-FILTER.ADD-TEXTS' | transloco\"\r\n            [matChipInputFor]=\"chipGrid\"\r\n            [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n            [matChipInputAddOnBlur]=\"true\"\r\n            (matChipInputTokenEnd)=\"addTx($event)\" />\r\n        </mat-chip-grid>\r\n      </mat-form-field>\r\n    </ng-container>\r\n  </ng-container>\r\n</ng-template>\r\n","import { Component, Inject, ViewChild } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { map, of, Subscriber } from 'rxjs';\r\n\r\nimport { ArqDatatableColumnsSchema } from '../../../arq-datatable/arq-datatable.interface';\r\nimport { ArqDTBusquedaAvanzadaComboDynam } from '../../arq-dt-busqueda-avanzada.interface';\r\nimport { ArqList } from '../../../../interfaces/arq-list.interface';\r\nimport { AbstractControl, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'arq-prefilters-dialog',\r\n  templateUrl: 'prefilters-dialog.component.html',\r\n  styleUrls: ['prefilters-dialog.component.scss']\r\n})\r\nexport class ArqPrefiltersDialogComponent {\r\n  public idDatatable: string = this.data.idDatatable || '';\r\n  public prefilters: ArqDatatableColumnsSchema[] = this.data.prefilters || [];\r\n  public formGroup!: FormGroup;\r\n  public refreshComboFn: Function = this.data.refreshComboFn || function (): void {};\r\n\r\n  public constructor(\r\n    public dialogRef: MatDialogRef<ArqPrefiltersDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA)\r\n    public data: {\r\n      idDatatable: string;\r\n      prefilters: ArqDatatableColumnsSchema[];\r\n      refreshComboFn: Function;\r\n    }\r\n  ) {\r\n    const controls: any = {};\r\n    this.prefilters.forEach(\r\n      (prefilter: ArqDatatableColumnsSchema) =>\r\n        (controls[prefilter.key] = ['', prefilter.isRequired ? [Validators.required] : []])\r\n    );\r\n    this.formGroup = new FormBuilder().group(controls);\r\n  }\r\n\r\n  public fixedCol = (colId: string): ArqDatatableColumnsSchema[] =>\r\n    this.prefilters.filter((prefilter: ArqDatatableColumnsSchema) => prefilter.key === colId) || this.prefilters[0];\r\n\r\n  public displayFn(option: any): string {\r\n    return option?.description || '';\r\n  }\r\n\r\n  public doFilter(evt: any, column: ArqDatatableColumnsSchema): void {\r\n    if (evt.keyCode === 13) {\r\n      return;\r\n    }\r\n    column.dataFn = column.dataFn!.pipe(map(val => this.filter(val, this.formGroup.controls[column.key].value)));\r\n  }\r\n\r\n  public optionSelected(column: ArqDatatableColumnsSchema): void {\r\n    this.checkDependent(column);\r\n  }\r\n\r\n  private filter(val: ArqList[], data: any): ArqList[] {\r\n    if (!val) return [];\r\n    return val.filter(item => item.description.toLowerCase().includes(this.getValue(data).toLowerCase()));\r\n  }\r\n\r\n  private checkDependent(column: ArqDatatableColumnsSchema): void {\r\n    const dependentCols: ArqDatatableColumnsSchema[] = this.prefilters.filter(\r\n      prefilter => prefilter.dependsOn && prefilter.dependsOn[0] === column.key\r\n    );\r\n    dependentCols.forEach(col => {\r\n      const columnSchema = this.prefilters.find(colSchema => colSchema.key === col.key);\r\n      if (!columnSchema) return;\r\n      const dependentFilter: ArqDatatableColumnsSchema | undefined = this.prefilters.find(\r\n        prefilter => prefilter.key === columnSchema.key\r\n      );\r\n      if (dependentFilter) this.formGroup.controls[dependentFilter.key].reset();\r\n      this.refrescarCombo(\r\n        {\r\n          idColumn: col.key,\r\n          idDatatable: this.idDatatable,\r\n          queryParams: { [column.key]: this.getValue(this.formGroup.controls[column.key].value) }\r\n        },\r\n        columnSchema\r\n      );\r\n    });\r\n  }\r\n\r\n  private refrescarCombo(\r\n    filterComboDynam: ArqDTBusquedaAvanzadaComboDynam,\r\n    columnSchema: ArqDatatableColumnsSchema\r\n  ): void {\r\n    this.refreshComboFn(filterComboDynam).subscribe((data: ArqList[]) => {\r\n      switch (columnSchema?.type?.toLowerCase()) {\r\n        case 'select':\r\n        case 'image':\r\n          columnSchema!.data = data;\r\n          break;\r\n        case 'autocomplete':\r\n          columnSchema!.data = data;\r\n          columnSchema!.dataFn = of(data);\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  private getValue(data: any): string {\r\n    return data.value || data;\r\n  }\r\n\r\n  public onSubmit(): void {\r\n    // Si hay un autocomplete, tiene que tener un objeto como value, si no lo reseteamos\r\n    this.checkAutocompleteValue();\r\n    // comprobamos el estado del formgroup\r\n    if (this.formGroup.invalid) {\r\n      this.refreshClientValidations(this.formGroup);\r\n      return;\r\n    }\r\n\r\n    const addFilterForm: { data: Array<string>; column: ArqDatatableColumnsSchema | null }[] = [];\r\n    this.prefilters.forEach(prefilter => {\r\n      if (this.formGroup.controls[prefilter.key]?.value) {\r\n        if (prefilter.type === 'autocomplete') {\r\n          // en el autocomplete pasamos el objeto\r\n          addFilterForm.push({ data: [this.formGroup.controls[prefilter.key]?.value], column: prefilter });\r\n        } else {\r\n          addFilterForm.push({\r\n            data: [this.getValue(this.formGroup.controls[prefilter.key]?.value)],\r\n            column: prefilter\r\n          });\r\n        }\r\n      }\r\n    });\r\n    this.dialogRef.close(addFilterForm);\r\n  }\r\n\r\n  private checkAutocompleteValue(): void {\r\n    this.prefilters\r\n      .filter(prefilter => prefilter.type === 'autocomplete')\r\n      .forEach(prefilter => {\r\n        if (!this.formGroup.controls[prefilter.key].value?.value) {\r\n          this.formGroup.controls[prefilter.key].reset();\r\n          prefilter.dataFn = of(prefilter.data!);\r\n        }\r\n      });\r\n  }\r\n\r\n  private refreshClientValidations(form: FormGroup): void {\r\n    Object.keys(form.controls).forEach(keyControl => {\r\n      if (form.controls[keyControl].status == 'INVALID') {\r\n        form.controls[keyControl].updateValueAndValidity({ onlySelf: true });\r\n        form.controls[keyControl].markAsTouched();\r\n      }\r\n    });\r\n  }\r\n}\r\n","<h2 mat-dialog-title>{{ 'DT-BA.PREFILTERS.TITLE' | transloco }}</h2>\r\n<form [formGroup]=\"this.formGroup\" (ngSubmit)=\"onSubmit()\">\r\n  <mat-dialog-content>\r\n    <ng-container *ngFor=\"let prefilter of data.prefilters; let i = index\">\r\n      <mat-toolbar class=\"dt-filter-toolbar\">\r\n        <mat-form-field subscriptSizing=\"dynamic\">\r\n          <mat-select placeholder=\"{{ 'DT-BA.COLUMN' | transloco }}\" [(value)]=\"data.prefilters[i]\">\r\n            <mat-option *ngFor=\"let col of fixedCol(prefilter.key)\" [value]=\"col\">{{ col.label }}</mat-option>\r\n          </mat-select>\r\n          <mat-hint\r\n            class=\"mat-warn\"\r\n            *ngIf=\"formGroup.controls[prefilter.key].touched && formGroup.controls[prefilter.key].errors\"></mat-hint>\r\n        </mat-form-field>\r\n\r\n        <ng-container *ngIf=\"prefilter\" [ngSwitch]=\"prefilter.type\">\r\n          <mat-form-field subscriptSizing=\"dynamic\">\r\n            <input\r\n              *ngSwitchDefault\r\n              formControlName=\"{{ prefilter.key }}\"\r\n              matInput\r\n              type=\"text\"\r\n              [required]=\"true\"\r\n              placeholder=\"{{ 'DT-BA.FILTER' | transloco }}\" />\r\n            <input\r\n              *ngSwitchCase=\"'number'\"\r\n              formControlName=\"{{ prefilter.key }}\"\r\n              matInput\r\n              type=\"number\"\r\n              placeholder=\"{{ 'DT-BA.FILTER' | transloco }}\" />\r\n            <mat-select *ngSwitchCase=\"'boolean'\">\r\n              <mat-option [value]=\"null\"></mat-option>\r\n              <mat-option [value]=\"true\">&#10003;</mat-option>\r\n              <mat-option [value]=\"false\">&#10005;</mat-option>\r\n            </mat-select>\r\n            <mat-select\r\n              *ngSwitchCase=\"'select'\"\r\n              formControlName=\"{{ prefilter.key }}\"\r\n              (selectionChange)=\"optionSelected(prefilter)\">\r\n              <mat-option [value]=\"null\"></mat-option>\r\n              <mat-option *ngFor=\"let col of prefilter.data\" [value]=\"col.value\">\r\n                {{ col.description }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <ng-container *ngSwitchCase=\"'autocomplete'\">\r\n              <input\r\n                matInput\r\n                formControlName=\"{{ prefilter.key }}\"\r\n                [type]=\"'text'\"\r\n                [matAutocomplete]=\"auto\"\r\n                (keyup)=\"doFilter($event, prefilter)\" />\r\n              <mat-autocomplete\r\n                autoActiveFirstOption\r\n                #auto=\"matAutocomplete\"\r\n                class=\"arq-autocomplete\"\r\n                [displayWith]=\"displayFn\"\r\n                (optionSelected)=\"optionSelected(prefilter)\">\r\n                <mat-option *ngFor=\"let col of prefilter.dataFn | async\" [value]=\"col\">\r\n                  {{ col.description }}\r\n                </mat-option>\r\n              </mat-autocomplete>\r\n            </ng-container>\r\n            <ng-container *ngSwitchCase=\"'date'\">\r\n              <input\r\n                matInput\r\n                formControlName=\"{{ prefilter.key }}\"\r\n                placeholder=\"DD/MM/AAAA\"\r\n                [matDatepicker]=\"picker\"\r\n                (click)=\"picker.open()\" />\r\n              <mat-datepicker #picker></mat-datepicker>\r\n            </ng-container>\r\n            <mat-select *ngSwitchCase=\"'image'\" formControlName=\"{{ prefilter.key }}\">\r\n              <mat-option [value]=\"null\"></mat-option>\r\n              <mat-option *ngFor=\"let col of prefilter.data\" [value]=\"col.value\">\r\n                {{ col.description }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-hint\r\n              style=\"color: red\"\r\n              *ngIf=\"formGroup.controls[prefilter.key].touched && formGroup.controls[prefilter.key].errors\">\r\n              {{ 'DT-BA.PREFILTERS.REQUIRED' | transloco }}\r\n            </mat-hint>\r\n          </mat-form-field>\r\n          <br />\r\n        </ng-container>\r\n      </mat-toolbar>\r\n    </ng-container>\r\n  </mat-dialog-content>\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button type=\"submit\">\r\n      {{ 'DT-BA.FILTERV' | transloco }}\r\n    </button>\r\n  </mat-dialog-actions>\r\n</form>\r\n","import { ChangeDetectorRef, Component, EventEmitter, Inject, Input, OnInit, Output } from '@angular/core';\r\nimport { Observable, Subject, isObservable, map, of, take, takeUntil } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\r\n\r\nimport {\r\n  ArqPageableRequest,\r\n  ArqPageableResponse,\r\n  ArqBaseComponent,\r\n  ArqDatatableColumnsSchema,\r\n  ArqList,\r\n  ArqDialogService\r\n} from '../../../../public-api';\r\n\r\nimport {\r\n  ArqDTBusquedaAvanzadaColumns,\r\n  ArqDTBusquedaAvanzadaComboDynam,\r\n  ArqDTBusquedaAvanzadaConfig,\r\n  ArqDTBusquedaAvanzadaFilters,\r\n  ArqDTBusquedaAvanzadaSavedFilter,\r\n  DefaultFilterType\r\n} from './arq-dt-busqueda-avanzada.interface';\r\n\r\nimport { ArqAdvFilterDialogComponent } from './dialogs/adv-filter/adv-filter-dialog.component';\r\nimport { ArqPrefiltersDialogComponent } from './dialogs/prefilters/prefilters-dialog.component';\r\n\r\n@Component({\r\n  selector: 'arq-dt-busqueda-avanzada',\r\n  templateUrl: './arq-dt-busqueda-avanzada.component.html',\r\n  styleUrls: ['./arq-dt-busqueda-avanzada.component.scss']\r\n})\r\nexport class ArqDTBusquedaAvanzadaComponent extends ArqBaseComponent implements OnInit {\r\n  @Input('schema') public set schema(val: any | Observable<any>) {\r\n    if (!isObservable(val)) val = of(val);\r\n\r\n    // Obtiene las columnas, las traduce con el servicio y las almacena en columnsSchema\r\n    val.pipe(take(1)).subscribe((_schema: any) => {\r\n      if (!_schema) return;\r\n      this.allColumns = _schema.columns;\r\n      [this.savedColumnsSchema, this.pkColumns, this.allColumnsSchema] = this.translateColumns(this.allColumns);\r\n\r\n      this.pkKeys = this.pkColumns.map(column => column.key);\r\n      this.columnsSchema = JSON.parse(JSON.stringify(this.savedColumnsSchema));\r\n      // seteamos los observables tras el JSON.parse\r\n      this.initializeAutocomplete();\r\n      this.idDatatable = _schema.idDatatable;\r\n\r\n      // Set backend componentConfig settings\r\n      this.componentConfig.datatable.pageSize = _schema.rowNumber ? _schema.rowNumber : 10;\r\n      if (_schema.selectionType) this.componentConfig.datatable.selectColumn = true;\r\n\r\n      // Load default prefilters\r\n      const prefilters = this.allColumnsSchema.filter((col: ArqDatatableColumnsSchema) => col.isDefaultFilter);\r\n      if (prefilters.length) this.loadPrefilters(prefilters);\r\n\r\n      if (this.savedFilters && this.savedFilters.length > 0) {\r\n        const defaultSavedFilter: ArqDTBusquedaAvanzadaSavedFilter | undefined = this.savedFilters.find(\r\n          filter => filter.isPredeterminado\r\n        );\r\n        if (defaultSavedFilter) {\r\n          this.applySavedFilters(defaultSavedFilter);\r\n        }\r\n      }\r\n\r\n      this.rebuildTable();\r\n    });\r\n  }\r\n\r\n  @Input('loadedData') public loadedData$!: Observable<ArqPageableResponse>;\r\n  @Input('refreshData') public refreshData$ = new Subject<any>();\r\n  @Output('loadDataEvent') public loadDataEvent$ = new EventEmitter<{\r\n    request: ArqPageableRequest;\r\n    filters: ArqDTBusquedaAvanzadaFilters[];\r\n  }>();\r\n\r\n  @Output('selectEvent') public $selectEvent = new EventEmitter();\r\n  @Output('actionEvent') public $actionEvent = new EventEmitter<{ id: string; value: any }>();\r\n\r\n  @Input('componentConfig') public componentConfig: ArqDTBusquedaAvanzadaConfig = { datatable: {} };\r\n\r\n  @Input() public filters: ArqDTBusquedaAvanzadaFilters[] = [];\r\n  @Output() public filtersChange = new EventEmitter<ArqDTBusquedaAvanzadaFilters[]>();\r\n\r\n  @Input('forceRebuild') public forceRebuild$ = new Subject<any>();\r\n\r\n  @Input('refreshComboFn') public _refreshComboFn!: (\r\n    filterComboDynam: ArqDTBusquedaAvanzadaComboDynam\r\n  ) => Observable<ArqList[]>;\r\n\r\n  @Input('savedFilters') public savedFilters: ArqDTBusquedaAvanzadaSavedFilter[] = [];\r\n  @Output('saveSavedFilters') public $saveSavedFilters = new EventEmitter<ArqDTBusquedaAvanzadaSavedFilter>();\r\n  @Output('deleteSavedFilters') public $deleteSavedFilters = new EventEmitter<ArqDTBusquedaAvanzadaSavedFilter>();\r\n\r\n  public addFilterForm: { data: Array<string>; column: ArqDatatableColumnsSchema | null } = {\r\n    data: [''],\r\n    column: null\r\n  };\r\n  private lastRequest!: ArqPageableRequest;\r\n  public allColumns!: ArqDTBusquedaAvanzadaColumns[];\r\n  public allColumnsSchema!: ArqDatatableColumnsSchema[];\r\n  public savedColumnsSchema!: ArqDatatableColumnsSchema[];\r\n  public columnsSchema!: ArqDatatableColumnsSchema[];\r\n  private idDatatable!: string;\r\n  private pkColumns!: ArqDatatableColumnsSchema[];\r\n  private pkKeys!: string[];\r\n\r\n  public fDisplayedColumns: string[] = [];\r\n\r\n  public tableLoaded: boolean = false;\r\n  public savedFiltersStatus: '' | 'loaded' | 'modified' = '';\r\n  public selectedSavedFilter: ArqDTBusquedaAvanzadaSavedFilter | null = null;\r\n\r\n  public constructor(\r\n    private _changeDetector: ChangeDetectorRef,\r\n    private dialog: MatDialog,\r\n    private arqDialog: ArqDialogService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.loadedData$ = this.loadedData$.pipe(\r\n      map((data: ArqPageableResponse) => {\r\n        data.content = data.content.map(row => {\r\n          const pCol: any = {};\r\n          row.columns.forEach((col: any) => {\r\n            pCol[col.nameColumnGrid] = col.valueColumnGrid;\r\n          });\r\n          return pCol;\r\n        });\r\n\r\n        return data;\r\n      })\r\n    );\r\n\r\n    // Establece las configuraciones por defecto\r\n    if (typeof this.componentConfig.headerButtons === 'undefined') this.componentConfig.headerButtons = [];\r\n    if (typeof this.componentConfig.cleanFiltersButton === 'undefined') this.componentConfig.cleanFiltersButton = true;\r\n    if (typeof this.componentConfig.headerToolbarsPos === 'undefined')\r\n      this.componentConfig.headerToolbarsPos = 'normal';\r\n    if (typeof this.componentConfig.datatable.selectColumn === 'undefined')\r\n      this.componentConfig.datatable.selectColumn = false;\r\n\r\n    // Si existe este observable se subscribe a el\r\n    if (this.forceRebuild$) this.forceRebuild$.pipe(takeUntil(this.unsubscribe$)).subscribe(_ => this.rebuildTable());\r\n  }\r\n\r\n  private translateColumns(columns: ArqDTBusquedaAvanzadaColumns[]): Array<ArqDatatableColumnsSchema[]> {\r\n    const translatedColumns = columns\r\n      .sort((x, y) => x.order - y.order)\r\n      .map(column => {\r\n        return {\r\n          key: column.idColumn,\r\n          type: column.type,\r\n          label: column.label,\r\n          data: column.comboItemList,\r\n          dataFn: column.type === 'autocomplete' ? of(column.comboItemList) : undefined,\r\n          format: column.format,\r\n          editInputSize: column.sizeCol ? column.sizeCol : '150px',\r\n          isHidden: !(column.showDefault ?? true),\r\n          isFilterable: column.showHeader ?? true,\r\n          isPk: column.pkColumn,\r\n          isDefaultFilter:\r\n            column.defaultFilter === DefaultFilterType.REQUERIDO ||\r\n            column.defaultFilter === DefaultFilterType.NO_REQUERIDO,\r\n          isRequired: column.defaultFilter === DefaultFilterType.REQUERIDO,\r\n          isOnlyFilter: column.isOnlyFilter,\r\n          dependsOn: column.dependsOn ? [column.dependsOn] : undefined\r\n        } as ArqDatatableColumnsSchema;\r\n      });\r\n\r\n    return [\r\n      translatedColumns.filter(column => !column.isOnlyFilter && !column.isPk),\r\n      translatedColumns.filter(column => !column.isOnlyFilter && column.isPk),\r\n      translatedColumns\r\n    ];\r\n  }\r\n\r\n  private loadPrefilters(prefilters: ArqDatatableColumnsSchema[]): void {\r\n    const dialogRef = this.dialog.open(ArqPrefiltersDialogComponent, {\r\n      maxWidth: '900px',\r\n      minWidth: '400px',\r\n      disableClose: true,\r\n      data: { idDatatable: this.idDatatable, prefilters: prefilters, refreshComboFn: this._refreshComboFn }\r\n    });\r\n\r\n    dialogRef\r\n      .afterClosed()\r\n      .pipe(take(1))\r\n      .subscribe((_filterForms: { data: Array<string>; column: ArqDatatableColumnsSchema | null }[]) => {\r\n        if (!_filterForms || _filterForms.length === 0) return;\r\n        _filterForms\r\n          .filter((filterForm: any) => this.isValidFilter(filterForm))\r\n          .forEach((filterForm: any) => this.filters.push(this.generateFilter(filterForm)));\r\n        this.requireData(this.lastRequest);\r\n      });\r\n  }\r\n\r\n  private isValidFilter(filter: { data: Array<string>; column: ArqDatatableColumnsSchema | null }): boolean {\r\n    return (\r\n      !!filter.data[0] &&\r\n      !!filter.column &&\r\n      (filter.column!.type !== 'autocomplete' ||\r\n        (filter.column!.type === 'autocomplete' && filter.data[0].hasOwnProperty('value')))\r\n    );\r\n  }\r\n\r\n  // TWO-WAY BINDING TABLE DATA LOGIC\r\n  public requireData(request: ArqPageableRequest): void {\r\n    this.loadDataEvent$.emit({ request: this.generatePageable(request), filters: this.filters });\r\n    this.lastRequest = request;\r\n  }\r\n\r\n  private generatePageable(request: ArqPageableRequest): ArqPageableRequest {\r\n    return {\r\n      page: request.page ? request.page : 0,\r\n      size: request.size ? request.size : 10,\r\n      sortName: request.sort?.split(',')[0],\r\n      sortDirection: request.sort?.split(',')[1].toUpperCase()\r\n    };\r\n  }\r\n\r\n  private rebuildTable(): void {\r\n    this.tableLoaded = false;\r\n\r\n    // Genera las columnas la tabla de filtros\r\n    this.fDisplayedColumns = this.columnsSchema?.map((col: { key: any }) => col.key);\r\n\r\n    setTimeout(() => {\r\n      this.tableLoaded = true;\r\n      this._changeDetector.detectChanges();\r\n    }, 1);\r\n  }\r\n\r\n  public showHideCol(col: any): void {\r\n    col.isHidden = col.isHidden ? !col.isHidden : true;\r\n    this.allColumns[this.allColumns.findIndex(_col => _col.idColumn === col.key)].showDefault = !col.isHidden;\r\n    this.columnsSchema = JSON.parse(JSON.stringify(this.savedColumnsSchema.filter(_col => !_col.isHidden)));\r\n    // seteamos los observables tras el JSON.parse\r\n    this.initializeAutocomplete();\r\n    // Cambia el estado de los filtros para mostrar el boton de guardado\r\n    this.savedFiltersStatus = 'modified';\r\n\r\n    this.rebuildTable();\r\n  }\r\n\r\n  public emitActionEvent(id: string, value: any): void {\r\n    this.$actionEvent.emit({ id, value });\r\n  }\r\n\r\n  public handleSelectEvent(ev: any): void {\r\n    this.$selectEvent.emit(ev);\r\n  }\r\n\r\n  // FILTERS FUNCTIONS\r\n  public cleanFilters(): void {\r\n    for (let i = this.filters.length - 1; i >= 0; i--) {\r\n      if (!this.filters[i].hidden) {\r\n        this.filters.splice(i, 1);\r\n      }\r\n    }\r\n    // Cambia el estado de los filtros para mostrar el boton de guardado\r\n    this.savedFiltersStatus = '';\r\n\r\n    this.rebuildTable();\r\n  }\r\n\r\n  public addFilter(): void {\r\n    if (!this.isValidFilter(this.addFilterForm)) return;\r\n    const filter: ArqDTBusquedaAvanzadaFilters = this.generateFilter(this.addFilterForm);\r\n    this.checkDependent(filter, false);\r\n    this.filters.push(filter);\r\n    this.addFilterForm = { data: [''], column: null };\r\n    // Cambia el estado de los filtros para mostrar el boton de guardado\r\n    this.savedFiltersStatus = 'modified';\r\n\r\n    this.requireData(this.lastRequest);\r\n  }\r\n\r\n  private generateFilter(\r\n    filter: {\r\n      data: Array<string>;\r\n      column: ArqDatatableColumnsSchema | null;\r\n    },\r\n    filterType: string | null = null\r\n  ): ArqDTBusquedaAvanzadaFilters {\r\n    // TODO: Sacar funcion a servicio\r\n    const dataCol = this.allColumnsSchema.find((_: any) => _.key === filter.column?.key);\r\n    const gFilter: ArqDTBusquedaAvanzadaFilters = {\r\n      idDatatable: this.idDatatable,\r\n      idColumn: dataCol?.key ?? 'text',\r\n      type: dataCol?.type?.toUpperCase() ?? 'TEXT',\r\n      option: 'BASE',\r\n      formatColumn: dataCol?.format,\r\n      dependsOn: dataCol?.dependsOn,\r\n      hidden: dataCol?.isRequired\r\n    };\r\n    if (!filterType) {\r\n      switch (dataCol?.type?.toLowerCase()) {\r\n        default:\r\n          gFilter.baseFilterText = filter.data[0];\r\n          break;\r\n        case 'number':\r\n          gFilter.baseFilterNumber = +filter.data[0];\r\n          break;\r\n        case 'date':\r\n          gFilter.baseFilterDate = new Date(filter.data[0]);\r\n          break;\r\n        case 'select':\r\n        case 'image':\r\n          gFilter.baseFilterCombo = [filter.data[0]];\r\n          break;\r\n        case 'autocomplete':\r\n          gFilter.baseFilterCombo = [(filter.data[0] as any).value];\r\n          break;\r\n      }\r\n    } else {\r\n      switch (filterType) {\r\n        default:\r\n          gFilter.baseFilterText = filter.data[0];\r\n          break;\r\n        case 'informed':\r\n          gFilter.option = filter.data[0] === 'false' ? 'IS_NULL' : 'NOT_NULL';\r\n          break;\r\n        case 'daterange':\r\n          gFilter.option = 'RANGES';\r\n          gFilter.fromDate = new Date(filter.data[0]);\r\n          gFilter.untilDate = new Date(filter.data[1]);\r\n          break;\r\n        case 'numberrange':\r\n          gFilter.option = 'RANGES';\r\n          gFilter.fromNumber = +filter.data[0];\r\n          gFilter.untilNumber = +filter.data[1];\r\n          break;\r\n        case 'selectmultiple':\r\n        case 'autocompletemultiple':\r\n          gFilter.option = 'MULTIPLE';\r\n          gFilter.baseFilterCombo = filter.data;\r\n          break;\r\n        case 'textmultiple':\r\n          gFilter.option = 'MULTIPLE';\r\n          gFilter.baseFilterText = filter.data.join(',');\r\n          break;\r\n      }\r\n    }\r\n    return gFilter;\r\n  }\r\n\r\n  public removeFilter(rmFltr: ArqDTBusquedaAvanzadaFilters): void {\r\n    this.resetColumnSchema(rmFltr);\r\n\r\n    // Cambia el estado de los filtros para mostrar el boton de guardado\r\n    this.savedFiltersStatus = 'modified';\r\n\r\n    this.checkDependent(rmFltr, true);\r\n    this.filters.splice(\r\n      this.filters.findIndex(filter => filter.idColumn === rmFltr.idColumn),\r\n      1\r\n    );\r\n    this.requireData(this.lastRequest);\r\n  }\r\n\r\n  private resetColumnSchema(filter: ArqDTBusquedaAvanzadaFilters): void {\r\n    filter.baseFilterCombo = undefined;\r\n    if (filter.type === 'autocomplete') {\r\n      const columnSchema = this.allColumnsSchema.find(colSchema => colSchema.key === filter.idColumn)!;\r\n      columnSchema.dataFn = of(columnSchema.data!);\r\n    }\r\n  }\r\n\r\n  private checkDependent(filter: ArqDTBusquedaAvanzadaFilters, remove: boolean): void {\r\n    const dependentCols: ArqDTBusquedaAvanzadaColumns[] = this.allColumns.filter(\r\n      col => col.dependsOn === filter.idColumn\r\n    );\r\n    dependentCols.forEach(col => {\r\n      const columnSchema = this.allColumnsSchema.find(colSchema => colSchema.key === col.idColumn);\r\n      if (!columnSchema) return;\r\n      if (remove) {\r\n        columnSchema!.dataFn = of(columnSchema.data!);\r\n        this.filters.splice(\r\n          this.filters.findIndex(filter => filter.idColumn === col.idColumn),\r\n          1\r\n        );\r\n      }\r\n      const filterComboDynam: ArqDTBusquedaAvanzadaComboDynam = {\r\n        idColumn: col.idColumn,\r\n        idDatatable: col.idDatatable,\r\n        queryParams: { [filter.idColumn]: filter.baseFilterCombo?.join(',') || '' }\r\n      };\r\n      this._refreshComboFn(filterComboDynam).subscribe((data: ArqList[]) => {\r\n        switch (columnSchema?.type?.toLowerCase()) {\r\n          case 'select':\r\n          case 'image':\r\n            columnSchema!.data = data;\r\n            break;\r\n          case 'autocomplete':\r\n            columnSchema!.data = data;\r\n            columnSchema!.dataFn = of(data);\r\n            break;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Abre el modal de seleccion de filtros avanzados y genera el filtro con la respuesta\r\n   */\r\n  public openAdvFilters(): void {\r\n    const dialogRef = this.dialog.open(ArqAdvFilterDialogComponent, {\r\n      width: '50%',\r\n      maxWidth: '750px',\r\n      minWidth: '400px',\r\n      data: {\r\n        selectedCol: this.addFilterForm.column,\r\n        filterCols: this.filterCols,\r\n        allColumnsSchema: this.allColumnsSchema\r\n      }\r\n    });\r\n\r\n    dialogRef\r\n      .afterClosed()\r\n      .pipe(take(1))\r\n      .subscribe(_filter => {\r\n        if (!_filter) return;\r\n        const filter: ArqDTBusquedaAvanzadaFilters = this.generateFilter(_filter, _filter.type);\r\n        this.filters.push(filter);\r\n        this.savedFiltersStatus = 'modified';\r\n        this.checkDependent(filter, false);\r\n        this.addFilterForm = { data: [''], column: null };\r\n        this.requireData(this.lastRequest);\r\n      });\r\n  }\r\n\r\n  /* For HTML Funcions */\r\n\r\n  /**\r\n   * Filtra las columnas recibidas, eliminado las que no son filtrables y las que ya estan utilizadas\r\n   * @param filterCols Array de columnas\r\n   * @returns Array con las columnas filtradas\r\n   */\r\n  public filterCols = (filterCols: ArqDatatableColumnsSchema[]): ArqDatatableColumnsSchema[] =>\r\n    filterCols\r\n      .filter(filterCol => filterCol.isFilterable)\r\n      .filter(filterCol => this.filters.filter(_ => filterCol.key === _.idColumn).length === 0);\r\n\r\n  /**\r\n   * -\r\n   */\r\n  public getChipName = (filter: ArqDTBusquedaAvanzadaFilters): string => {\r\n    const colName: string = this.allColumnsSchema.find(col => col.key === filter.idColumn)?.label ?? '***';\r\n    let filterData: string = '';\r\n\r\n    switch (filter.option) {\r\n      case 'BASE':\r\n        switch (filter.type.toLowerCase()) {\r\n          default:\r\n            filterData = String(filter.baseFilterText || '***');\r\n            break;\r\n          case 'number':\r\n            filterData = String(filter.baseFilterNumber);\r\n            break;\r\n          case 'date':\r\n            filterData = filter.baseFilterDate\r\n              ? new Date(filter.baseFilterDate).toLocaleString().slice(0, 10).split('-').reverse().join('/')\r\n              : String(filter.baseFilterDate);\r\n            break;\r\n          case 'select':\r\n          case 'image':\r\n          case 'autocomplete':\r\n            filterData = String(filter.baseFilterCombo?.join(', '));\r\n            break;\r\n        }\r\n        break;\r\n\r\n      case 'IS_NULL':\r\n        filterData = 'No informado';\r\n        break;\r\n      case 'NOT_NULL':\r\n        filterData = 'Informado';\r\n        break;\r\n      case 'RANGES':\r\n        filterData =\r\n          `desde ${filter.fromDate || filter.fromNumber || '*'} ` +\r\n          `hasta ${filter.untilDate || filter.untilNumber || '*'}`;\r\n        break;\r\n      case 'MULTIPLE':\r\n        filterData = filter.baseFilterText?.split(',').join(', ') || '';\r\n        break;\r\n\r\n      default:\r\n        filterData = '(ADV)';\r\n        break;\r\n    }\r\n\r\n    if ((colName + filterData).length < 25) return `<b>${colName}:</b> ${filterData}`;\r\n    else return `<b>${colName}</b>`;\r\n  };\r\n\r\n  /**\r\n   *\r\n   */\r\n  public hiddenFilters = (_filters: ArqDTBusquedaAvanzadaFilters[]): ArqDTBusquedaAvanzadaFilters[] =>\r\n    _filters.filter(f => !f.hidden);\r\n\r\n  public selectionChange(): void {\r\n    if (this.addFilterForm.column?.type === 'autocomplete') {\r\n      this.addFilterForm.column.dataFn = of(this.addFilterForm.column.data!);\r\n    }\r\n  }\r\n  public doFilter(filter: { data: any; column: ArqDatatableColumnsSchema | null }): void {\r\n    filter.column!.dataFn = filter.column!.dataFn!.pipe(map(val => this.filter(val, filter.data[0]!)));\r\n  }\r\n\r\n  private filter(val: ArqList[], data: any): ArqList[] {\r\n    if (!val) return [];\r\n    return val.filter(item => item.description.toLowerCase().includes(data.value?.toLowerCase() || data.toLowerCase()));\r\n  }\r\n\r\n  public displayFn(option: any): string {\r\n    return option?.description || '';\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  public applySavedFilters(filters: ArqDTBusquedaAvanzadaSavedFilter): void {\r\n    // Limpiamos los filtros aplicados y aplicamos los nuevos\r\n    this.filters = this.filters.filter(f => f.hidden);\r\n    filters.filters.forEach(f => this.filters.push(f));\r\n\r\n    // Mostramos/ocultamos las columnas\r\n    this.savedColumnsSchema = this.savedColumnsSchema.map(_scs => {\r\n      let _ = _scs;\r\n      filters.columns.forEach((_fc: any) => {\r\n        if (_scs.key === _fc.idColumn) {\r\n          _scs.isHidden = !_fc.isShowDefault;\r\n          _ = _scs;\r\n        }\r\n      });\r\n      return _;\r\n    });\r\n    this.columnsSchema = JSON.parse(JSON.stringify(this.savedColumnsSchema.filter(_col => !_col.isHidden)));\r\n    // seteamos los observables tras el JSON.parse\r\n    this.initializeAutocomplete();\r\n\r\n    this.savedFiltersStatus = 'loaded';\r\n    this.selectedSavedFilter = filters;\r\n\r\n    this.rebuildTable();\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  public async saveSavedFilters(): Promise<void> {\r\n    const _data: any = await this.nameFilterDialog();\r\n    if (!_data || !_data.name) return;\r\n    const _name = _data.name;\r\n    const _default = _data.default;\r\n    const _priv = await this.confirmPrivateFDialog();\r\n    if (typeof _priv === 'undefined') return;\r\n\r\n    const sFilter: ArqDTBusquedaAvanzadaSavedFilter = {\r\n      columns: this.savedColumnsSchema.map(col => {\r\n        return {\r\n          idColumn: col.key,\r\n          isShowDefault: !col.isHidden\r\n        };\r\n      }),\r\n      filters: this.filters.filter(_ => !_.hidden),\r\n      idDatatable: this.idDatatable,\r\n      nombre: _name,\r\n      isPredeterminado: _default,\r\n      isPublico: !_priv\r\n    };\r\n\r\n    if (sFilter.isPublico && sFilter.isPredeterminado) {\r\n      this.arqDialog.open({\r\n        confirmBtn: true,\r\n        message: 'No se puede crear un filtro publico publico por defecto',\r\n        title: 'Error',\r\n        type: 'alert',\r\n        icon: 'warning',\r\n        color: 'text-warning',\r\n        textConfirm: 'Continuar'\r\n      });\r\n      return;\r\n    }\r\n\r\n    // HANDLER\r\n    const _filter = this.savedFilters.find(_ => _.nombre === sFilter.nombre);\r\n\r\n    if (_filter) {\r\n      if (_filter.isPublico)\r\n        this.arqDialog.open({\r\n          confirmBtn: true,\r\n          message: 'El filtro ya existe y no se puede sobreescribir un filtro publico',\r\n          title: 'Error',\r\n          type: 'alert',\r\n          icon: 'warning',\r\n          color: 'text-warning',\r\n          textConfirm: 'Continuar'\r\n        });\r\n      else\r\n        this.arqDialog\r\n          .open({\r\n            cancelBtn: true,\r\n            confirmBtn: true,\r\n            message: 'El filtro ya existe y se va a sobreescribir. ¿Deseas continuar?',\r\n            title: 'Guardado de filtro',\r\n            type: 'alert',\r\n            icon: 'warning',\r\n            color: 'text-warning',\r\n            textConfirm: 'Aceptar',\r\n            textCancel: 'Cancelar'\r\n          })\r\n          .subscribe((_res: any) => {\r\n            if (_res) {\r\n              this.$saveSavedFilters.emit(sFilter);\r\n              this.savedFiltersStatus = 'loaded';\r\n              this.selectedSavedFilter = sFilter;\r\n            }\r\n          });\r\n    } else {\r\n      this.$saveSavedFilters.emit(sFilter);\r\n      this.savedFiltersStatus = 'loaded';\r\n      this.selectedSavedFilter = sFilter;\r\n    }\r\n\r\n    this._changeDetector.detectChanges();\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  public deleteSavedFilters(): void {\r\n    if (this.selectedSavedFilter !== null) {\r\n      this.arqDialog\r\n        .open({\r\n          cancelBtn: true,\r\n          confirmBtn: true,\r\n          message: 'Vas a borrar el filtro seleccionado (' + this.selectedSavedFilter.nombre + '). ¿Deseas continuar?',\r\n          title: 'Borrar filtro guardado',\r\n          type: 'alert',\r\n          icon: 'warning',\r\n          color: 'text-warning',\r\n          textConfirm: 'Aceptar',\r\n          textCancel: 'Cancelar'\r\n        })\r\n        .subscribe((_res: any) => {\r\n          if (_res) {\r\n            if (this.selectedSavedFilter && this.selectedSavedFilter.idDatatableFilter)\r\n              this.$deleteSavedFilters.emit(this.selectedSavedFilter);\r\n            else\r\n              this.$deleteSavedFilters.emit(\r\n                this.savedFilters.reverse().find(_ => this.selectedSavedFilter?.nombre === _.nombre)\r\n              );\r\n            this.savedFiltersStatus = '';\r\n            this.selectedSavedFilter = null;\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  private async nameFilterDialog(): Promise<string> {\r\n    return new Promise(resolve => {\r\n      this.arqDialog.open({}, ArqDTBANameFilterDialogComponent).subscribe((data: any) => {\r\n        resolve(data);\r\n      });\r\n    });\r\n  }\r\n\r\n  private async confirmPrivateFDialog(): Promise<boolean> {\r\n    return new Promise(resolve => {\r\n      this.arqDialog\r\n        .open({\r\n          cancelBtn: true,\r\n          confirmBtn: true,\r\n          message: '¿Quieres que el filtro sea privado o público?',\r\n          title: 'Guardado de filtro',\r\n          type: 'alert',\r\n          icon: 'warning',\r\n          color: 'text-warning',\r\n          textConfirm: 'Privado',\r\n          textCancel: 'Publico'\r\n        })\r\n        .subscribe((priv: any) => resolve(priv));\r\n    });\r\n  }\r\n\r\n  private initializeAutocomplete(): void {\r\n    this.columnsSchema\r\n      .filter(column => column.data && column.type === 'autocomplete')\r\n      .forEach(column => (column.dataFn = of(column.data!)));\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'arq-dt-ba-namefilter-dialog',\r\n  template: `\r\n    <div class=\"p-3\">\r\n      <h1 mat-dialog-title>Guardado de filtro</h1>\r\n      <div mat-dialog-content>\r\n        <p>Inserta nombre del filtro para guardar</p>\r\n        <mat-form-field>\r\n          <input matInput placeholder=\"Nombre del filtro\" [(ngModel)]=\"fName\" />\r\n        </mat-form-field>\r\n      </div>\r\n      <div mat-dialog-content style=\"padding-top: 0px;\">\r\n        <span>Filtro por defecto </span>\r\n        <mat-icon\r\n          (click)=\"toggleDefault()\"\r\n          style=\"cursor: pointer; color: {{ fDefault ? 'gold' : 'grey' }}; vertical-align: middle;\">\r\n          star\r\n        </mat-icon>\r\n      </div>\r\n      <div mat-dialog-actions align=\"end\">\r\n        <arq-button (click)=\"closeDialog()\" label=\"Cancelar\"></arq-button>\r\n        <arq-button (click)=\"closeDialog()\" color=\"primary\" label=\"Guardar\"></arq-button>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class ArqDTBANameFilterDialogComponent {\r\n  public fName!: string;\r\n  public fDefault: boolean = false;\r\n  public constructor(private dialogService: ArqDialogService) { }\r\n\r\n  public closeDialog(): void {\r\n    this.dialogService.confirmed({ name: this.fName, default: this.fDefault });\r\n  }\r\n\r\n  public toggleDefault(): void {\r\n    this.fDefault = !this.fDefault;\r\n  }\r\n}\r\n","<div *ngIf=\"columnsSchema && tableLoaded\">\r\n  <ng-container *ngIf=\"componentConfig.headerToolbarsPos === 'normal'\">\r\n    <ng-container *ngTemplateOutlet=\"tButtons\"></ng-container>\r\n    <ng-container *ngTemplateOutlet=\"tFilters\"></ng-container>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"componentConfig.headerToolbarsPos === 'inverted'\">\r\n    <ng-container *ngTemplateOutlet=\"tFilters\"></ng-container>\r\n    <ng-container *ngTemplateOutlet=\"tButtons\"></ng-container>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"componentConfig.headerToolbarsPos === 'onlyButtons'\">\r\n    <ng-container *ngTemplateOutlet=\"tButtons\"></ng-container>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"componentConfig.headerToolbarsPos === 'onlyFilters'\">\r\n    <ng-container *ngTemplateOutlet=\"tFilters\"></ng-container>\r\n  </ng-container>\r\n\r\n  <!-- DATATABLE -->\r\n  <arq-datatable\r\n    *ngIf=\"columnsSchema\"\r\n    [loadedData]=\"loadedData$\"\r\n    [refreshData]=\"refreshData$\"\r\n    (loadDataEvent)=\"requireData($event)\"\r\n    [columnsSchema]=\"columnsSchema\"\r\n    [tableConfig]=\"componentConfig.datatable\"\r\n    (selectEvent)=\"handleSelectEvent($event)\"></arq-datatable>\r\n</div>\r\n\r\n<!-- BUTTON TOOLBAR -->\r\n<ng-template #tButtons>\r\n  <mat-toolbar>\r\n    <button mat-raised-button class=\"menuTrigger\" [matMenuTriggerFor]=\"showHideSelect\" color=\"primary\">\r\n      {{ 'DT-BA.SHOW-HIDE-COLS' | transloco }} <mat-icon>arrow_drop_down</mat-icon>\r\n    </button>\r\n    <button mat-raised-button class=\"menuTrigger\" [matMenuTriggerFor]=\"savedFiltersM\" color=\"primary\">\r\n      {{ 'DT-BA.SAVED-FILTERS' | transloco }} <mat-icon>arrow_drop_down</mat-icon>\r\n    </button>\r\n\r\n    <mat-chip-listbox *ngIf=\"savedFiltersStatus === 'loaded'\" style=\"margin-left: 0.5em; margin-right: 1em\">\r\n      <mat-chip\r\n        ><b>{{ 'DT-BA.FILTERS' | transloco }}:</b> {{ selectedSavedFilter?.nombre }}</mat-chip\r\n      >\r\n    </mat-chip-listbox>\r\n\r\n    <button *ngIf=\"savedFiltersStatus === 'loaded'\" mat-raised-button (click)=\"deleteSavedFilters()\" color=\"primary\">\r\n      {{ 'DT-BA.DELETE-FILTERS' | transloco }}\r\n    </button>\r\n    <button *ngIf=\"savedFiltersStatus === 'modified'\" mat-raised-button (click)=\"saveSavedFilters()\" color=\"primary\">\r\n      {{ 'DT-BA.SAVE-FILTERS' | transloco }}\r\n    </button>\r\n\r\n    <span class=\"toolbar-spacer\"></span>\r\n\r\n    <button\r\n      *ngIf=\"componentConfig.cleanFiltersButton && componentConfig.headerToolbarsPos !== 'onlyFilters'\"\r\n      mat-raised-button\r\n      (click)=\"cleanFilters()\"\r\n      color=\"primary\">\r\n      {{ 'DT-BA.CLEAN-FILTERS' | transloco }}\r\n    </button>\r\n    <button\r\n      *ngFor=\"let btn of componentConfig.headerButtons\"\r\n      mat-raised-button\r\n      (click)=\"emitActionEvent(btn.id, btn.value || null)\"\r\n      [color]=\"btn.color ? btn.color : 'primary'\"\r\n      [matTooltip]=\"btn.tooltip ? btn.tooltip : ''\">\r\n      {{ btn.label }}\r\n    </button>\r\n  </mat-toolbar>\r\n\r\n  <br />\r\n\r\n  <mat-menu #showHideSelect=\"matMenu\">\r\n    <button *ngFor=\"let col of savedColumnsSchema\" mat-menu-item (click)=\"showHideCol(col)\">\r\n      <mat-icon *ngIf=\"col.isHidden\" class=\"empty\">check_box_outline_blank</mat-icon>\r\n      <mat-icon *ngIf=\"!col.isHidden\" class=\"checked\">check_box</mat-icon>\r\n      {{ col.label }}\r\n    </button>\r\n  </mat-menu>\r\n\r\n  <mat-menu #savedFiltersM=\"matMenu\">\r\n    <ng-container *ngIf=\"savedFilters.length\">\r\n      <button *ngFor=\"let sf of savedFilters\" mat-menu-item (click)=\"applySavedFilters(sf)\">\r\n        <span>{{ sf.nombre }}</span>\r\n        <mat-icon [style.color]=\"sf.isPredeterminado ? 'gold' : 'grey'\">{{\r\n          sf.isPublico ? 'public' : 'person'\r\n        }}</mat-icon>\r\n      </button>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"!savedFilters.length\">\r\n      <button mat-menu-item style=\"font-style: italic\">{{ 'DT-BA.NOT-SAVED-FILTERS' | transloco }}</button>\r\n    </ng-container>\r\n  </mat-menu>\r\n</ng-template>\r\n\r\n<!-- FILTERS TOOLBAR -->\r\n<ng-template #tFilters>\r\n  <mat-toolbar class=\"dt-filter-toolbar\">\r\n    <button mat-raised-button color=\"basic\" (click)=\"openAdvFilters()\">\r\n      <mat-icon>tune</mat-icon> {{ 'DT-BA.ADVANCED' | transloco }}\r\n    </button>\r\n\r\n    <mat-form-field>\r\n      <mat-select\r\n        placeholder=\"{{ 'DT-BA.COLUMN' | transloco }}\"\r\n        [(value)]=\"addFilterForm.column\"\r\n        (selectionChange)=\"selectionChange()\">\r\n        <mat-option *ngFor=\"let col of filterCols(allColumnsSchema)\" [value]=\"col\">{{ col.label }}</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <ng-container *ngIf=\"addFilterForm.column\" [ngSwitch]=\"addFilterForm.column.type\">\r\n      <mat-form-field>\r\n        <input\r\n          *ngSwitchDefault\r\n          matInput\r\n          type=\"text\"\r\n          placeholder=\"{{ 'DT-BA.FILTER' | transloco }}\"\r\n          [(ngModel)]=\"addFilterForm.data[0]\" />\r\n        <input\r\n          *ngSwitchCase=\"'number'\"\r\n          matInput\r\n          type=\"number\"\r\n          placeholder=\"{{ 'DT-BA.FILTER' | transloco }}\"\r\n          [(ngModel)]=\"addFilterForm.data[0]\" />\r\n        <mat-select *ngSwitchCase=\"'boolean'\" [(ngModel)]=\"addFilterForm.data[0]\">\r\n          <mat-option [value]=\"null\"></mat-option>\r\n          <mat-option [value]=\"true\">&#10003;</mat-option>\r\n          <mat-option [value]=\"false\">&#10005;</mat-option>\r\n        </mat-select>\r\n        <mat-select *ngSwitchCase=\"'select'\" [(ngModel)]=\"addFilterForm.data[0]\">\r\n          <mat-option [value]=\"null\"></mat-option>\r\n          <mat-option *ngFor=\"let col of addFilterForm.column.data\" [value]=\"col.value\">\r\n            {{ col.description }}\r\n          </mat-option>\r\n        </mat-select>\r\n        <ng-container *ngSwitchCase=\"'autocomplete'\">\r\n          <input\r\n            matInput\r\n            [type]=\"'text'\"\r\n            [matAutocomplete]=\"auto\"\r\n            [(ngModel)]=\"addFilterForm.data[0]\"\r\n            (ngModelChange)=\"doFilter(addFilterForm)\" />\r\n          <mat-autocomplete\r\n            autoActiveFirstOption\r\n            #auto=\"matAutocomplete\"\r\n            class=\"arq-autocomplete\"\r\n            [displayWith]=\"displayFn\">\r\n            <mat-option *ngFor=\"let col of addFilterForm.column.dataFn | async\" [value]=\"col\">\r\n              {{ col.description }}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n        </ng-container>\r\n        <ng-container *ngSwitchCase=\"'date'\">\r\n          <input\r\n            matInput\r\n            placeholder=\"DD/MM/AAAA\"\r\n            [matDatepicker]=\"picker\"\r\n            (dateChange)=\"addFilterForm.data[0] = $event.value\"\r\n            (click)=\"picker.open()\" />\r\n          <mat-datepicker #picker></mat-datepicker>\r\n        </ng-container>\r\n        <mat-select *ngSwitchCase=\"'image'\" [(ngModel)]=\"addFilterForm.data[0]\">\r\n          <mat-option [value]=\"null\"></mat-option>\r\n          <mat-option *ngFor=\"let col of addFilterForm.column.data\" [value]=\"col.value\">\r\n            {{ col.description }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <br />\r\n    </ng-container>\r\n\r\n    <button mat-raised-button color=\"primary\" (click)=\"addFilter()\">\r\n      <mat-icon>add</mat-icon> {{ 'DT-BA.FILTERV' | transloco }}\r\n    </button>\r\n\r\n    <mat-chip-listbox>\r\n      <ng-container *ngFor=\"let filter of hiddenFilters(filters); let i = index\">\r\n        <mat-chip *ngIf=\"i < 3\">\r\n          <span [innerHTML]=\"getChipName(filter)\"></span>\r\n          <span matChipRemove style=\"margin-left: 0em\"><mat-icon (click)=\"removeFilter(filter)\">cancel</mat-icon></span>\r\n        </mat-chip>\r\n        <mat-chip *ngIf=\"i === 3\">\r\n          <b>+{{ hiddenFilters(filters).length - 3 }}</b>\r\n          <span matChipRemove style=\"margin-left: 0em\">\r\n            <mat-icon [matMenuTriggerFor]=\"moreFilters\">more_horiz</mat-icon>\r\n          </span>\r\n        </mat-chip>\r\n      </ng-container>\r\n    </mat-chip-listbox>\r\n\r\n    <mat-menu #moreFilters=\"matMenu\">\r\n      <ng-container *ngFor=\"let filter of hiddenFilters(filters); let i = index\">\r\n        <button mat-menu-item (click)=\"removeFilter(filter)\" *ngIf=\"i > 2\">\r\n          <mat-chip>\r\n            <span [innerHTML]=\"getChipName(filter)\"></span>\r\n          </mat-chip>\r\n          <mat-icon>cancel</mat-icon>\r\n        </button>\r\n      </ng-container>\r\n    </mat-menu>\r\n  </mat-toolbar>\r\n  <br />\r\n</ng-template>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { TranslocoModule } from '@ngneat/transloco';\r\nimport { TranslocoRootModule } from '../../../core/transloco-root.module';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\nimport { ArqButtonModule, ArqDatatableModule, ArqDatepickerRangeModule } from '../components';\r\nimport { ArqDTBANameFilterDialogComponent, ArqDTBusquedaAvanzadaComponent } from './arq-dt-busqueda-avanzada.component';\r\n\r\nimport { ArqAdvFilterDialogComponent } from './dialogs/adv-filter/adv-filter-dialog.component';\r\nimport { ArqPrefiltersDialogComponent } from './dialogs/prefilters/prefilters-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ArqDTBusquedaAvanzadaComponent,\r\n    ArqAdvFilterDialogComponent,\r\n    ArqPrefiltersDialogComponent,\r\n    ArqDTBANameFilterDialogComponent\r\n  ],\r\n  exports: [\r\n    ArqDTBusquedaAvanzadaComponent,\r\n    ArqAdvFilterDialogComponent,\r\n    ArqPrefiltersDialogComponent,\r\n    ArqDTBANameFilterDialogComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TranslocoModule,\r\n    TranslocoRootModule,\r\n\r\n    ArqDatatableModule,\r\n    ArqButtonModule,\r\n\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatAutocompleteModule,\r\n    MatChipsModule,\r\n    MatTooltipModule,\r\n    MatDialogModule\r\n  ]\r\n})\r\nexport class ArqDTBusquedaAvanzadaModule {}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'arq-fieldset',\r\n  templateUrl: './arq-fieldset.component.html',\r\n  styleUrls: ['./arq-fieldset.component.css']\r\n})\r\nexport class ArqFieldsetComponent {\r\n\r\n  @Input()\r\n  public legend: string | undefined = undefined\r\n\r\n}\r\n","<fieldset>\r\n  <legend\r\n    *ngIf=\"legend\">\r\n    <span\r\n      [matTooltip]=\"legend\">\r\n      {{ legend }}</span>\r\n  </legend>\r\n  <ng-content></ng-content>\r\n</fieldset>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ArqFieldsetComponent } from './arq-fieldset.component';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ArqFieldsetComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatTooltipModule,\r\n  ],\r\n  exports: [\r\n    ArqFieldsetComponent,\r\n  ]\r\n})\r\nexport class ArqFieldsetModule { }\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  Pipe,\r\n  PipeTransform,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { Observable, takeUntil } from 'rxjs';\r\n\r\nimport { ArqCampo, ArqDynamic } from '../../interfaces/arq-dynamic.interface';\r\nimport { ArqList } from '../../interfaces/arq-list.interface';\r\nimport { ArqBaseComponent } from '../../utils/arq-base.component';\r\nimport { ArqDatatableColumnsSchema, ArqDatatableConfig } from '../components';\r\nimport {\r\n  ArqAutocompleteSearchFn,\r\n  ArqPageableRequest,\r\n  ArqPageableResponse\r\n} from './../../interfaces/arq-basic.interface';\r\nimport { ArqHttpClient } from './../../services/arq-http-client.service';\r\n\r\n@Component({\r\n  selector: 'arq-listado',\r\n  templateUrl: './arq-listado.component.html',\r\n  styleUrls: ['./arq-listado.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ArqListadoComponent extends ArqBaseComponent implements OnInit, OnDestroy {\r\n  public readonly LANG_ES = 'es';\r\n  public readonly NAME_FC_DP_RANGE = '_2';\r\n  public readonly SEPARATOR_DP_RANGE = '-';\r\n  public readonly REQUERIDO_S = 'S';\r\n  public readonly DATEPICKER_STR = 'datepicker';\r\n  public readonly DATEPICKER_RANGE_STR = 'datepicker-range';\r\n  public readonly SELECT_STR = 'select';\r\n  public readonly SELECT_MULTIPLE_STR = 'select-multiple';\r\n  public readonly AUTOCOMPLETE_STR = 'autocomplete';\r\n  public readonly CHECKBOX_BASIC_STR = 'checkbox-basic';\r\n  public readonly INPUT_MONEY_STR = 'input-money';\r\n  public readonly INPUT_NUMBER_STR = 'input-number';\r\n  private readonly DEPENDIENTE_REQUERIDO: string = '!';\r\n  private readonly SEPARADOR: string = ',';\r\n  private readonly PARAM_REGEXP = /{\\d+}/g;\r\n\r\n  public fGroup!: FormGroup;\r\n\r\n  @Input()\r\n  public urlBaseBack!: string;\r\n  @Output()\r\n  public dataEvent$ = new EventEmitter<ArqDynamic>();\r\n  @Input()\r\n  public observableData!: Observable<any>;\r\n\r\n  //Style\r\n  @Input()\r\n  public numCols: string = '3';\r\n  @Input()\r\n  public rowHeight: string = '4:1';\r\n\r\n  // Titulos generales\r\n  @Input()\r\n  public label!: string;\r\n  @Input()\r\n  public subLabel!: string;\r\n  @Input()\r\n  public lang: string = this.LANG_ES;\r\n\r\n  // Button Export\r\n  @Input()\r\n  public showBtnExport: boolean = false;\r\n  @Input()\r\n  public labelBtnExport!: string;\r\n  @Input()\r\n  public colorBtnExport: string = 'primary';\r\n  @Input()\r\n  public typeBtnExport: string = 'submit';\r\n  @Input()\r\n  public iconBtnExport: string = 'save_alt';\r\n  @Input('btnExportFn')\r\n  public _btnExportFn!: () => any;\r\n\r\n  // Button Search\r\n  @Input()\r\n  public showBtnSearch: boolean = false;\r\n  @Input()\r\n  public labelBtnSearch!: string;\r\n  @Input()\r\n  public colorBtnSearch: string = 'primary';\r\n  @Input()\r\n  public typeBtnSearch: string = 'submit';\r\n  @Input()\r\n  public iconBtnSearch: string = 'search';\r\n  @Input('btnSearchFn')\r\n  public _btnSearchFn!: () => any;\r\n\r\n  // Inputs\r\n  @Input()\r\n  public msgError: string = 'El campo es obligatorio';\r\n\r\n  // Checkbox-basic\r\n  @Input()\r\n  public colorCheckboxBasic: ThemePalette = 'primary';\r\n  @Input()\r\n  public checkedCheckboxBasic?: boolean = false;\r\n\r\n  // Datatable\r\n  @Input('loadedData')\r\n  public loadedData$!: Observable<ArqPageableResponse>;\r\n  @Output('loadDataEvent')\r\n  public loadDataEvent$ = new EventEmitter<ArqPageableRequest>();\r\n  @Input('tableConfig')\r\n  public _tableConfig!: ArqDatatableConfig;\r\n\r\n  public columnsSchema: ArqDatatableColumnsSchema[] = [];\r\n\r\n  public datos!: ArqDynamic;\r\n\r\n  public selectOptionsArray = new Map<string, Observable<ArqList[]>>();\r\n\r\n  public autocompletetOptionsArray = new Map<String, ArqAutocompleteSearchFn>();\r\n\r\n  public grupos: string[] = [];\r\n\r\n  public constructor(protected _arqHttpClient: ArqHttpClient) {\r\n    super();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.observableData.pipe(takeUntil(this.unsubscribe$)).subscribe((data: ArqDynamic) => {\r\n      this.datos = data;\r\n      this.datos.campos.sort((a, b) => a.orden - b.orden);\r\n      this.rellenarIds();\r\n      this.obtenerGrupos();\r\n      this.createFormGroup(data.campos);\r\n      this.cargarListados(data.campos);\r\n      this.createColumnSchema(data.campos);\r\n      this.eventRellenarValuesForm();\r\n    });\r\n  }\r\n\r\n  /* Creamos un id de tipo string concatenando el id del formulario con el orden */\r\n  private rellenarIds(): void {\r\n    this.datos.campos.forEach(campo => (campo.idCampo = `${campo.id}#${campo.orden}`));\r\n  }\r\n\r\n  private obtenerGrupos(): void {\r\n    const gruposUnicos = new Set<string>();\r\n    this.datos.campos.forEach(campo => {\r\n      gruposUnicos.add(campo.grupo);\r\n    });\r\n    this.grupos = Array.from(gruposUnicos);\r\n  }\r\n\r\n  /* Rellena los values del ArqDynamic que llega del back con los valores que tienen los controles del formulario\r\n  cada vez que se actualiza uno */\r\n  private eventRellenarValuesForm(): void {\r\n    this.datos.campos.forEach((campo: ArqCampo) => {\r\n      this.fGroup.controls[campo.idCampo].valueChanges.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\r\n        // Recuperamos el control modificado\r\n        switch (campo.htmlTipo) {\r\n          case this.DATEPICKER_STR:\r\n            campo.value = this.fGroup.controls[campo.idCampo].value?.toDate().toString();\r\n            break;\r\n          case this.DATEPICKER_RANGE_STR:\r\n            // TODO comprobar funcionamiento\r\n            campo.value =\r\n              campo.value && !campo.value?.includes(this.SEPARATOR_DP_RANGE)\r\n                ? campo.value +\r\n                  this.SEPARATOR_DP_RANGE +\r\n                  this.fGroup.controls[campo.idCampo + this.NAME_FC_DP_RANGE].value?.toDate().toString()\r\n                : this.fGroup.controls[campo.idCampo].value?.toDate().toString();\r\n            break;\r\n          case this.SELECT_STR:\r\n          case this.AUTOCOMPLETE_STR:\r\n          case this.SELECT_MULTIPLE_STR:\r\n            if (campo.listaDependiente && campo.value != this.getControlValue(campo.idCampo)) {\r\n              const dependientes: string[] = campo.listaDependiente.split(this.SEPARADOR);\r\n              dependientes.forEach(dependiente => {\r\n                const requerido = dependiente.includes(this.DEPENDIENTE_REQUERIDO);\r\n                const campoDependiente = this.datos.campos.find(\r\n                  c =>\r\n                    c.orden.toString() == (requerido ? dependiente.split(this.DEPENDIENTE_REQUERIDO)[0] : dependiente)\r\n                )!;\r\n                this.fGroup.controls[campoDependiente.idCampo].reset();\r\n                if (requerido) {\r\n                  if (this.puedeHabilitarDependiente(campoDependiente)) {\r\n                    this.fGroup.controls[campoDependiente!.idCampo].enable();\r\n                    this.cargarListado(campoDependiente, true);\r\n                  } else this.fGroup.controls[campoDependiente.idCampo].disable();\r\n                } else {\r\n                  this.cargarListado(campoDependiente, true);\r\n                }\r\n              });\r\n            }\r\n            campo.value = this.getControlValue(campo.idCampo);\r\n            break;\r\n          default:\r\n            campo.value = this.fGroup.controls[campo.idCampo].value;\r\n            break;\r\n        }\r\n        this.dataEvent$.emit(this.datos);\r\n      });\r\n    });\r\n  }\r\n\r\n  private getControlValue(idCampo: string): string {\r\n    return this.fGroup.controls[idCampo].value?.hasOwnProperty('value')\r\n      ? this.fGroup.controls[idCampo].value.value\r\n      : this.fGroup.controls[idCampo].value;\r\n  }\r\n\r\n  private puedeHabilitarDependiente(campo: ArqCampo): boolean {\r\n    let habilitar: boolean = true;\r\n    const padres: ArqCampo[] = this.datos.campos.filter(c => {\r\n      const campoRequerido: string = `${campo.orden}${this.DEPENDIENTE_REQUERIDO}`;\r\n      const regexp = new RegExp(`^${campoRequerido}|[^0-9]${campoRequerido}`);\r\n      return regexp.test(c.listaDependiente);\r\n    });\r\n    padres.forEach(c => {\r\n      const controlValue = this.getControlValue(c.idCampo);\r\n      if (!controlValue || (Array.isArray(controlValue) && controlValue.length === 0)) {\r\n        // Si el control no tiene value, deshabilitamos\r\n        habilitar = false;\r\n      }\r\n      const condicion: string | null = this.extraerCondicion(c.listaDependiente, campo.orden);\r\n      if (condicion && !condicion.split(this.SEPARADOR).includes(controlValue)) {\r\n        // si no cumple la condición, deshabilitamos\r\n        habilitar = false;\r\n      }\r\n    });\r\n    return habilitar;\r\n  }\r\n\r\n  private extraerCondicion(dependientes: string, orden: number): string | null {\r\n    const regex = new RegExp(`${orden}!\\\\[([^\\\\]]+)\\\\]`);\r\n    const coincidencia = dependientes.match(regex);\r\n    if (coincidencia && coincidencia[1]) {\r\n      return coincidencia[1];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // TWO-WAY BINDING TABLE DATA LOGIC\r\n  public requireData(request: ArqPageableRequest): void {\r\n    this.loadDataEvent$.emit(request);\r\n  }\r\n\r\n  private cargarListados(campos: ArqCampo[]): void {\r\n    campos.forEach((campo: ArqCampo) => this.cargarListado(campo, false));\r\n  }\r\n\r\n  private cargarListado(campo: ArqCampo, recargar: boolean): void {\r\n    // miramos si se está recargando el campo y no existe dato variable\r\n    if (recargar && !this.PARAM_REGEXP.test(campo.origenDatos)) return;\r\n    switch (campo.htmlTipo) {\r\n      case this.SELECT_STR:\r\n      case this.SELECT_MULTIPLE_STR:\r\n        // rellenamos los posibles parametros que vengan en la url\r\n        const endpoint = this.rellenarParametrosUrl(this.urlBaseBack + campo.origenDatos);\r\n        this.selectOptionsArray.set(campo.idCampo, this._arqHttpClient.get<ArqList[]>(endpoint));\r\n        break;\r\n      case this.AUTOCOMPLETE_STR:\r\n        // rellenamos los posibles parametros que vengan en la url y anyadimos los de la paginacion\r\n        this.autocompletetOptionsArray.set(campo.idCampo, (request: ArqPageableRequest) => {\r\n          let endpoint = this.rellenarParametrosUrl(this.urlBaseBack + campo.origenDatos);\r\n          endpoint += (endpoint.includes('?') ? '&' : '?') + this.getUrlParamsFromRequest(request);\r\n          return this._arqHttpClient.get<ArqPageableResponse>(endpoint);\r\n        });\r\n        break;\r\n    }\r\n  }\r\n\r\n  private rellenarParametrosUrl(url: string): string {\r\n    if (this.PARAM_REGEXP.test(url)) {\r\n      const matches: RegExpMatchArray = url.match(this.PARAM_REGEXP)!;\r\n      for (var match of matches) {\r\n        const campoFiltro = this.datos.campos.find(c => c.orden.toString() === match.replace(/[{}]/g, ''));\r\n        url = url.replace(match, campoFiltro ? this.getControlValue(campoFiltro.idCampo) || '' : '');\r\n      }\r\n    }\r\n    return url;\r\n  }\r\n\r\n  private getUrlParamsFromRequest(request: ArqPageableRequest): string {\r\n    return Object.entries(request)\r\n      .map(([key, value]) => `${key}=${value}`)\r\n      .join('&');\r\n  }\r\n\r\n  private createColumnSchema(campos: ArqCampo[]): void {\r\n    if (this.lang === this.LANG_ES) {\r\n      campos.forEach((campo: ArqCampo) => {\r\n        this.addColumnSchema(campo, campo.htmlLabel, this.addTypeColumnSchema(campo));\r\n      });\r\n    } else {\r\n      campos.forEach((campo: ArqCampo) => {\r\n        this.addColumnSchema(campo, campo.htmlLabelVal, this.addTypeColumnSchema(campo));\r\n      });\r\n    }\r\n  }\r\n\r\n  private addTypeColumnSchema(campo: ArqCampo): string {\r\n    let type;\r\n    switch (campo.htmlTipo) {\r\n      case this.INPUT_MONEY_STR:\r\n      case this.INPUT_NUMBER_STR:\r\n        type = 'number';\r\n        break;\r\n      case this.DATEPICKER_RANGE_STR:\r\n      case this.DATEPICKER_STR:\r\n        type = 'date';\r\n        break;\r\n      case this.CHECKBOX_BASIC_STR:\r\n        type = 'boolean';\r\n        break;\r\n      default:\r\n        type = 'text';\r\n        break;\r\n    }\r\n    return type;\r\n  }\r\n\r\n  private addColumnSchema(campo: ArqCampo, label: string, type: any): void {\r\n    const columnSchema: ArqDatatableColumnsSchema = {\r\n      key: campo.htmlTipo,\r\n      type: type,\r\n      label: label\r\n    };\r\n\r\n    this.columnsSchema.push(columnSchema);\r\n  }\r\n\r\n  private createFormGroup(campos: ArqCampo[]): void {\r\n    this.fGroup = new FormGroup({});\r\n    campos.forEach((campo: ArqCampo) => {\r\n      if (campo.htmlTipo === this.SELECT_MULTIPLE_STR && campo.value) {\r\n        campo.value = campo.value.split(this.SEPARADOR);\r\n      }\r\n      this.fGroup.addControl(\r\n        campo.idCampo,\r\n        new FormControl(campo.value, [\r\n          campo.htmlRequerido === this.REQUERIDO_S ? Validators.required : Validators.nullValidator\r\n        ])\r\n      );\r\n\r\n      // Si es datepicker-range se añade un formControl más para la fecha fin\r\n      if (campo.htmlTipo === this.DATEPICKER_RANGE_STR) {\r\n        this.fGroup.addControl(\r\n          campo.idCampo + this.NAME_FC_DP_RANGE,\r\n          new FormControl(campo.value, [\r\n            campo.htmlRequerido === this.REQUERIDO_S ? Validators.required : Validators.nullValidator\r\n          ])\r\n        );\r\n      }\r\n      // comprobamos si es dependiente de otro campo y este es requerido\r\n      const campoRequerido: string = `${campo.orden}${this.DEPENDIENTE_REQUERIDO}`;\r\n      const regexp = new RegExp(`^${campoRequerido}|[^0-9]${campoRequerido}`);\r\n      const padreRequerido = this.datos.campos.some(c => regexp.test(c.listaDependiente));\r\n      // Deshabilitamos el campo si procede\r\n      if (campo.disabled || padreRequerido) {\r\n        this.fGroup.controls[campo.idCampo].disable();\r\n      }\r\n    });\r\n  }\r\n\r\n  public search(): void {\r\n    this.datos.campos.forEach(campo => {\r\n      this.fGroup.controls[campo.idCampo].markAsTouched();\r\n      this.fGroup.controls[campo.idCampo].updateValueAndValidity();\r\n    });\r\n    if (this.fGroup.valid) {\r\n      this._btnSearchFn();\r\n    } else {\r\n      console.log('Errores en la validación');\r\n    }\r\n  }\r\n\r\n  public export(): void {\r\n    this.datos.campos.forEach(campo => {\r\n      this.fGroup.controls[campo.idCampo].markAsTouched();\r\n      this.fGroup.controls[campo.idCampo].updateValueAndValidity();\r\n    });\r\n    if (this.fGroup.valid) {\r\n      this._btnExportFn();\r\n    } else {\r\n      console.log('Errores en la validación');\r\n    }\r\n  }\r\n}\r\n\r\n@Pipe({ name: 'filterByGrupo' })\r\nexport class FilterByGrupoPipe implements PipeTransform {\r\n  public transform(campos: ArqCampo[], grupo: string): ArqCampo[] {\r\n    return campos.filter(campo => campo.grupo === grupo);\r\n  }\r\n}\r\n","<label *ngIf=\"this.subLabel\">{{ this.subLabel }}</label>\r\n<h2 *ngIf=\"this.datos\">{{ this.datos.formulario.denominacion }}</h2>\r\n<div *ngFor=\"let grupo of this.grupos\">\r\n  <arq-fieldset [legend]=\"grupo\">\r\n    <mat-grid-list\r\n      *ngIf=\"this.datos\"\r\n      [cols]=\"this.datos.formulario.numColumnas || this.numCols\"\r\n      [rowHeight]=\"this.rowHeight\">\r\n      <mat-grid-tile *ngFor=\"let campo of this.datos.campos | filterByGrupo : grupo\" [colspan]=\"campo.anchoColumna\">\r\n        <arq-text-input\r\n          *ngIf=\"campo.htmlTipo === 'input-text'\"\r\n          [label]=\"this.lang === this.LANG_ES ? campo.htmlLabel : campo.htmlLabelVal\"\r\n          [fGroup]=\"this.fGroup\"\r\n          [value]=\"campo.idCampo\"\r\n          [ngClass]=\"campo.cssClass !== null ? campo.cssClass : ''\"\r\n          [maxLength]=\"campo.htmlTamanyoMax\"></arq-text-input>\r\n\r\n        <arq-select\r\n          *ngIf=\"campo.htmlTipo === 'select'\"\r\n          [label]=\"this.lang === this.LANG_ES ? campo.htmlLabel : campo.htmlLabelVal\"\r\n          [emptyOption]=\"true\"\r\n          [fGroup]=\"this.fGroup\"\r\n          [value]=\"campo.idCampo\"\r\n          [ngClass]=\"campo.cssClass !== null ? campo.cssClass : ''\"\r\n          [fullObject]=\"false\"\r\n          [selectOptionsList]=\"this.selectOptionsArray.get(campo.idCampo)\">\r\n        </arq-select>\r\n\r\n        <arq-datepicker-range\r\n          *ngIf=\"campo.htmlTipo === 'datepicker-range'\"\r\n          [fGroup]=\"this.fGroup\"\r\n          [label]=\"this.lang === this.LANG_ES ? campo.htmlLabel : campo.htmlLabelVal\"\r\n          [value]=\"campo.idCampo\"\r\n          [fechaFin]=\"campo.idCampo + this.NAME_FC_DP_RANGE\"\r\n          [visibleRange]=\"false\"\r\n          [ngClass]=\"campo.cssClass !== null ? campo.cssClass : ''\">\r\n        </arq-datepicker-range>\r\n\r\n        <arq-datepicker\r\n          *ngIf=\"campo.htmlTipo === 'datepicker'\"\r\n          [fGroup]=\"this.fGroup\"\r\n          [label]=\"this.lang === this.LANG_ES ? campo.htmlLabel : campo.htmlLabelVal\"\r\n          [value]=\"campo.idCampo\"\r\n          [placeholder]=\"'DD/MM/YYYY'\"></arq-datepicker>\r\n\r\n        <arq-input-money\r\n          *ngIf=\"campo.htmlTipo === 'input-money'\"\r\n          [fGroup]=\"this.fGroup\"\r\n          [label]=\"this.lang === this.LANG_ES ? campo.htmlLabel : campo.htmlLabelVal\"\r\n          [value]=\"campo.idCampo\"\r\n          [ngClass]=\"campo.cssClass !== null ? campo.cssClass : ''\"\r\n          [maxLength]=\"campo.htmlTamanyoMax\"></arq-input-money>\r\n\r\n        <arq-input-number\r\n          *ngIf=\"campo.htmlTipo === 'input-number'\"\r\n          [fGroup]=\"this.fGroup\"\r\n          [label]=\"this.lang === this.LANG_ES ? campo.htmlLabel : campo.htmlLabelVal\"\r\n          [value]=\"campo.idCampo\"\r\n          [ngClass]=\"campo.cssClass !== null ? campo.cssClass : ''\"\r\n          [maxLength]=\"campo.htmlTamanyoMax\"></arq-input-number>\r\n\r\n        <arq-checkbox-basic\r\n          *ngIf=\"campo.htmlTipo === 'checkbox-basic'\"\r\n          [fGroup]=\"this.fGroup\"\r\n          [label]=\"this.lang === this.LANG_ES ? campo.htmlLabel : campo.htmlLabelVal\"\r\n          [value]=\"campo.idCampo\"\r\n          [color]=\"this.colorCheckboxBasic\"\r\n          [checked]=\"this.checkedCheckboxBasic\"\r\n          [ngClass]=\"campo.cssClass !== null ? campo.cssClass : ''\">\r\n        </arq-checkbox-basic>\r\n\r\n        <arq-autocomplete\r\n          *ngIf=\"campo.htmlTipo === 'autocomplete'\"\r\n          [fGroup]=\"this.fGroup\"\r\n          [label]=\"this.lang === this.LANG_ES ? campo.htmlLabel : campo.htmlLabelVal\"\r\n          [value]=\"campo.idCampo\"\r\n          [options]=\"this.autocompletetOptionsArray.get(campo.idCampo)\"\r\n          [ngClass]=\"campo.cssClass !== null ? campo.cssClass : ''\">\r\n        </arq-autocomplete>\r\n\r\n        <arq-select\r\n          *ngIf=\"campo.htmlTipo === 'select-multiple'\"\r\n          [label]=\"this.lang === this.LANG_ES ? campo.htmlLabel : campo.htmlLabelVal\"\r\n          [emptyOption]=\"false\"\r\n          [fGroup]=\"this.fGroup\"\r\n          [value]=\"campo.idCampo\"\r\n          [ngClass]=\"campo.cssClass !== null ? campo.cssClass : ''\"\r\n          [fullObject]=\"false\"\r\n          [multiple]=\"true\"\r\n          [selectOptionsList]=\"this.selectOptionsArray.get(campo.idCampo)\">\r\n        </arq-select>\r\n      </mat-grid-tile>\r\n    </mat-grid-list>\r\n  </arq-fieldset>\r\n</div>\r\n\r\n<div style=\"padding-top: 20px\">\r\n  <arq-button\r\n    *ngIf=\"this.showBtnSearch\"\r\n    [label]=\"this.labelBtnSearch\"\r\n    [color]=\"this.colorBtnSearch\"\r\n    [type]=\"this.typeBtnSearch\"\r\n    [icon]=\"this.iconBtnSearch\"\r\n    (click)=\"this.search()\">\r\n  </arq-button>\r\n\r\n  <arq-button\r\n    *ngIf=\"this.showBtnExport\"\r\n    [label]=\"this.labelBtnExport\"\r\n    [color]=\"this.colorBtnExport\"\r\n    [type]=\"this.typeBtnExport\"\r\n    [icon]=\"this.iconBtnExport\"\r\n    (click)=\"this.export()\">\r\n  </arq-button>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\nimport { ArqGenericInputModule } from '../../../core/arq-generic-input/arq-generic-input.module';\r\nimport { ArqApiService } from '../../services/arq-api.service';\r\nimport { ArqAutocompleteModule } from '../arq-autocomplete/arq-autocomplete.module';\r\nimport { ArqButtonModule } from '../arq-button/arq-button.module';\r\nimport { ArqCheckboxBasicModule } from '../arq-checkbox-basic/arq-checkbox-basic.module';\r\nimport { ArqDatepickerRangeModule } from '../arq-datepicker-range/arq-datepicker-range.module';\r\nimport { ArqInputMoneyModule } from '../arq-input-money/arq-input-money.module';\r\nimport { ArqSelectModule } from '../arq-select/arq-select.module';\r\nimport { ArqTextInputModule } from '../arq-text-input/arq-text-input.module';\r\nimport { ArqDatatableModule, ArqDatepickerModule, ArqFieldsetModule, ArqInputNumberModule } from '../components';\r\nimport { ArqListadoComponent, FilterByGrupoPipe } from './arq-listado.component';\r\n\r\n@NgModule({\r\n  declarations: [ArqListadoComponent, FilterByGrupoPipe],\r\n  exports: [ArqListadoComponent],\r\n  providers: [ArqApiService],\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    ArqTextInputModule,\r\n    ArqSelectModule,\r\n    ArqGenericInputModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    ArqButtonModule,\r\n    ArqDatepickerRangeModule,\r\n    ArqDatepickerModule,\r\n    ArqInputMoneyModule,\r\n    ArqInputNumberModule,\r\n    ArqCheckboxBasicModule,\r\n    ArqAutocompleteModule,\r\n    MatGridListModule,\r\n    ArqDatatableModule,\r\n    ArqFieldsetModule\r\n  ]\r\n})\r\nexport class ArqListadosModule {}\r\n","import { inject, Injectable } from '@angular/core';\r\n\r\nimport { TranslocoService } from '@ngneat/transloco';\r\n\r\nimport { ActivatedRouteSnapshot, Data, RouterStateSnapshot } from '@angular/router';\r\nimport { catchError, map, Observable, of } from 'rxjs';\r\n\r\nimport { ArqGvloginService } from '../services/arq-gvlogin.service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { ArqHttpClient } from '../services/arq-http-client.service';\r\nimport { HttpResponse } from '@angular/common/http';\r\n\r\nconst USER_LANG: string = 'user-lang';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ArqRoleGuard {\r\n  public constructor(\r\n    private auth: ArqGvloginService,\r\n    private _arqHttpClient: ArqHttpClient,\r\n    private _translocoService: TranslocoService,\r\n    private cookieservice: CookieService\r\n  ) {}\r\n\r\n  public canActivateChild(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean> | Promise<boolean> | boolean {\r\n    return this.accesoOk(next, state, next.parent?.data ? next.parent?.data : next.data);\r\n  }\r\n\r\n  public canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean> | Promise<boolean> | boolean {\r\n    return this.accesoOk(next, state, next.data);\r\n  }\r\n\r\n  private accesoOk(next: ActivatedRouteSnapshot, state: RouterStateSnapshot, data: Data): Observable<boolean> {\r\n    if (next.queryParams[USER_LANG]) {\r\n      const lang: string = next.queryParams[USER_LANG];\r\n      localStorage.setItem('user-lang', lang);\r\n      this._translocoService?.setActiveLang(lang);\r\n    }\r\n    // console.log('cookies:', this.cookieservice.getAll());\r\n    if (next.queryParams['token']) {\r\n      // existe el token de gvlogin en la url, lo almacenamos en el localStorage\r\n      localStorage.setItem('gvlogin-token', next.queryParams['token']);\r\n      this.auth.cargarToken();\r\n    } else if (!this.auth.isLogged()) {\r\n      if (this.cookieservice.check('gvlogin.login.GVLOGIN_COOKIE') && data['enableJWT']) {\r\n        this.auth.buscarTokenJWT(data['nombreApp'], data['gvloginUrl']);\r\n      } else {\r\n        // Redirigir a Gvlogin para obligar al loggeo\r\n        if (data['enable']) {\r\n          this.auth.login(window.location.pathname, data['nombreApp'], data['gvloginUrl'], data['urlRedirect']);\r\n        }\r\n      }\r\n    }\r\n    if (data['tokenPerso']) {\r\n      this._arqHttpClient\r\n        .get<Response>(data['tokenPerso'], {\r\n          observe: 'response',\r\n          responseType: 'text' as 'json'\r\n        })\r\n        .subscribe({\r\n          next: (response: HttpResponse<Response>) => {\r\n            console.log(response);\r\n            this.auth.storeTokenPersonalizado(response.headers.get('x-token-personalizado'));\r\n          },\r\n          error: (err: any) => {\r\n            console.log('peta token perso ', err);\r\n          }\r\n        });\r\n    }\r\n    return this.comprobarMarte(next, state.url, data['host']);\r\n  }\r\n\r\n  private comprobarMarte(next: ActivatedRouteSnapshot, state: string, host: string): Observable<boolean> {\r\n    let idPet = next.queryParams['idPet'];\r\n    let idSel = next.queryParams['idSel'];\r\n\r\n    if (idPet || idSel) {\r\n      if (!host || !host.startsWith('htt')) {\r\n        console.error('El host no es correcto!!');\r\n      }\r\n      return this.realizarPeticionMarte({ idSel, idPet, host, next, state });\r\n    } else {\r\n      return of(true);\r\n    }\r\n  }\r\n\r\n  private realizarPeticionMarte({\r\n    idSel,\r\n    idPet,\r\n    host,\r\n    next,\r\n    state\r\n  }: {\r\n    idSel?: string;\r\n    idPet?: string;\r\n    host: string;\r\n    next: ActivatedRouteSnapshot;\r\n    state: string;\r\n  }): Observable<boolean> {\r\n    let endpoint: string = host + '/api/marte/v1/';\r\n    if (idSel) {\r\n      this.auth.storeIdSelMarte(idSel);\r\n      endpoint += `peticionsel/${idSel}`;\r\n    } else {\r\n      this.auth.storeIdPetMarte(idPet);\r\n      endpoint += `peticion/${idPet}`;\r\n    }\r\n    return this._arqHttpClient\r\n      .get<Response>(endpoint, {\r\n        observe: 'response',\r\n        responseType: 'text' as 'json'\r\n      })\r\n      .pipe(\r\n        map((token: HttpResponse<Response>) => {\r\n          const lang: string = token.headers.get('Content-Language')?.split('-')[0] || 'es';\r\n          localStorage.setItem(USER_LANG, lang);\r\n          this._translocoService?.setActiveLang(lang);\r\n          if (idSel) {\r\n            this.auth.storeTokenPetMarteFormularioSeleccion(token.headers.get('x-peticion-marte-formulario-seleccion'));\r\n            this.auth.cleanUrl(next.queryParams, 'idSel', state);\r\n          } else {\r\n            this.auth.storeTokenPetMarte(token.headers.get('x-peticion-marte'));\r\n            this.auth.cleanUrl(next.queryParams, 'idPet', state);\r\n          }\r\n          return true;\r\n        }),\r\n        catchError(err => {\r\n          console.log('error al recuperar el token de Marte: ', err);\r\n          return of(true);\r\n        })\r\n      );\r\n  }\r\n}\r\n","// tag::securityAnexoGvloginTokenData[]\r\nexport interface ArqGvloginTokenData {\r\n  /**\r\n   * Issuer. Identifica al principal que ha emitido el JWT.\r\n   */\r\n  iss: string;\r\n\r\n  /**\r\n   * Subject. Identifica al principal que recibe el JWT.\r\n   */\r\n  sub: string;\r\n\r\n  /**\r\n   * Audience. Identifica los contenedores para los que el JWT está destinado.\r\n   */\r\n  aud: string;\r\n\r\n  /**\r\n   * Expiration time. Indica el momento de expiración tras el cual el JWT deja de ser válido.\r\n   */\r\n  exp: number;\r\n\r\n  /**\r\n   * Issued at. Indica el momento en el que el JWT fue emitido.\r\n   */\r\n  iat: number;\r\n\r\n  /**\r\n   * Authentication Context Class Reference. Valor que identifica la clase del contexto de autenticación que realizó la autenticación.\r\n   */\r\n  acr: string;\r\n\r\n  /**\r\n   * Name. Nombre completo del usuario.\r\n   */\r\n  name: string;\r\n\r\n  /**\r\n   * Email. Dirección de e-mail del usuario.\r\n   */\r\n  email: string;\r\n\r\n  /**\r\n   * Given name. Nombre del usuario.\r\n   */\r\n  given_name: string;\r\n\r\n  /**\r\n   * Family name. Apellidos del usuario.\r\n   */\r\n  family_name: string;\r\n\r\n  /**\r\n   * Public key. Información sobre la clave pública.\r\n   */\r\n  p_key: {\r\n    e: string;\r\n    n: string;\r\n    kty: string;\r\n    kid: string;\r\n  };\r\n\r\n  /**\r\n   * Información ampliada.\r\n   */\r\n  info_ampliada?: any;\r\n\r\n  /**\r\n   * Parámetros adicionales\r\n   */\r\n  parametros_adicionales?: any;\r\n\r\n  /**\r\n   * Roles. Listado de roles del usuario.\r\n   */\r\n  rol: {\r\n    /**\r\n     * Código. Identificador del rol.\r\n     */\r\n    codigo: string;\r\n\r\n    /**\r\n     * Información ampliada.\r\n     */\r\n    infoAmpliada: any;\r\n  }[];\r\n}\r\n// end::securityAnexoGvloginTokenData[]\r\n","/**\r\n * Usuario de la aplicación\r\n */\r\n// tag::securityUserModel[]\r\nexport interface ArqUsuario {\r\n  nombre: string;\r\n  apellidos: string;\r\n  email: string;\r\n  roles: {\r\n    codigo: string;\r\n    infoAmpliada: any;\r\n  }[];\r\n}\r\n// end::securityUserModel[]\r\n","export enum ArqErrorTypeEnum {\r\n  VALIDATION_ERROR = \"VALIDATION_ERROR\"\r\n}\r\n","import { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { ArqApiServiceBasics } from '../interfaces/arq-api-service.interface';\r\nimport { catchError, of, shareReplay } from 'rxjs';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\nexport const arqApiResolver = <T extends ArqApiServiceBasics>(service: T) => {\r\n  let schema$: any;\r\n  return {\r\n    schema: (route: ActivatedRouteSnapshot, state: RouterStateSnapshot) => {\r\n      let idBloque: string | undefined = undefined;\r\n      if (route.paramMap.has('idBloque')) {\r\n        idBloque = route.paramMap.get('idBloque')!;\r\n      }\r\n      if (!schema$) {\r\n        schema$ = service.schema(idBloque).pipe(shareReplay(1));\r\n      }\r\n      return schema$;\r\n    },\r\n    findOne: (route: ActivatedRouteSnapshot, state: RouterStateSnapshot) => {\r\n      if (!service.findOne) {\r\n        return null;\r\n      }\r\n      return service.findOne().pipe(catchError((error: HttpErrorResponse) => of(error)));\r\n    },\r\n    findById: (route: ActivatedRouteSnapshot, state: RouterStateSnapshot) => {\r\n      if (!service.findById) {\r\n        return null;\r\n      }\r\n      let id = route.params['id'];\r\n      return service.findById(id).pipe(catchError((error: HttpErrorResponse) => of(error)));\r\n    }\r\n  };\r\n};\r\n","import { Translation, TranslocoService } from '@ngneat/transloco';\r\n\r\nexport function preloadUser(transloco: TranslocoService, environment: any) {\r\n  return function (): Promise<Translation | undefined> {\r\n    const lang = localStorage.getItem('user-lang') || environment.locale.default;\r\n    transloco.setActiveLang(lang);\r\n    return transloco.load(lang).toPromise();\r\n  };\r\n}\r\n","export const ARQ_SDK = 'ARQ_SDK';\r\n\r\nexport * from './src/lib/components/components';\r\nexport * from './src/lib/guards/guards';\r\nexport * from './src/lib/interceptors/interceptors';\r\nexport * from './src/lib/interfaces/interfaces';\r\nexport * from './src/lib/services/services';\r\nexport * from './src/lib/utils/utils';\r\nexport * from './src/lib/resolvers/resolvers';\r\nexport * from './src/lib/functions/functions';\r\n\r\n/********************************************************************************\r\n *                        ¡¡¡ DON'T MODIFY THIS FILE !!!                        *\r\n * Los componentes se importan directamente en src/lib/components/component.ts  *\r\n ********************************************************************************/\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2","i3","DEBOUNCE_TIME","i1.ArqAutocompleteService","i4","i5","i7","i8","i9","i10","i11.ArqFormControlErrorComponent","i4.ArqFormControlErrorComponent","i6.ArqFormControlErrorComponent","i6","i7.ArqFormControlErrorComponent","i1.ArqDialogService","i6.ArqButtonComponent","i8.LocalizedNumericInputDirective","i5.ArqFormControlErrorComponent","i1.ArqOverlayService","i2.ArqSpinnerService","i8.ArqSubMenuComponent","i4.ArqUploadFilesComponent","map","i3.ArqApiService","i1.ArqGvloginService","i1.ArqSpinnerService","i3.ArqSnackBarService","i1.ArqSchemaService","i2.ArqApiService","i3.ArqSelectComponent","i4.ArqAutocompleteComponent","Observable","i2.ArqDialogService","i3.ArqSpinnerService","i5.ArqButtonComponent","i6.ArqContextMenuComponent","i7.ArqDatepickerComponent","i8.ArqTextInputComponent","i9.ArqCheckboxBasicComponent","i10.ArqSelectComponent","i11.ArqAutocompleteComponent","i12.ArqDateTimepickerComponent","i13.ArqInputNumberComponent","i15","i16","i17","i18","i19","i20","i22","i3.ArqDatatableComponent","i12","i13","take","i5.ArqDatatableComponent","i11","i14","i19.ArqButtonComponent","i1.ArqHttpClient","i3.ArqTextInputComponent","i4.ArqSelectComponent","i6.ArqDatepickerRangeComponent","i8.ArqInputMoneyComponent","i9.ArqInputNumberComponent","i10.ArqCheckboxBasicComponent","i13.ArqFieldsetComponent","catchError","i2.ArqHttpClient"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIa,MAAA,uBAAuB,GAAwB,IAAI,GAAG,CAAC;IAClE,CAAC,UAAU,EAAE,uDAAuD,CAAC;IACrE,CAAC,UAAU,EAAE,uDAAuD,CAAC;IACrE,CAAC,WAAW,EAAE,wDAAwD,CAAC;IACvE,CAAC,WAAW,EAAE,wDAAwD,CAAC;IACvE,CAAC,SAAS,EAAE,sDAAsD,CAAC;IACnE,CAAC,KAAK,EAAE,kDAAkD,CAAC;IAC3D,CAAC,KAAK,EAAE,kDAAkD,CAAC;IAC3D,CAAC,QAAQ,EAAE,qDAAqD,CAAC;IACjE,CAAC,oBAAoB,EAAE,iEAAiE,CAAC;IACzF,CAAC,qBAAqB,EAAE,kEAAkE,CAAC;IAC3F,CAAC,wBAAwB,EAAE,qEAAqE,CAAC;AAClG,CAAA,EAAE;MAOU,4BAA4B,CAAA;AAYvC,IAAA,WAAA,CAAoB,iBAAmC,EAAA;AAAnC,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAkB;AAVhD,QAAA,IAAY,CAAA,YAAA,GAAuB,EAAE,CAAC;AAGtC,QAAA,IAAgB,CAAA,gBAAA,GAAwB,uBAAuB,CAAC;AAE/D,QAAA,IAAa,CAAA,aAAA,GAAW,EAAE,CAAC;AAY3B,QAAA,IAAA,CAAA,YAAY,GAAG,CAAC,KAAwB,KAAU;YACxD,IAAI,KAAK,KAAK,SAAS,EAAE;AACvB,gBAAA,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;;AAExB,gBAAA,MAAM,aAAa,GAAG,IAAI,CAAC,kBAAmB,CAAC,MAAO,CAAC;gBACvD,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,QAAQ,IAAG;AAC5C,oBAAA,IAAI,MAAM,GAA2B;wBACnC,YAAY,EAAE,IAAI,CAAC,YAAa;qBACjC,CAAC;AAEF,oBAAA,QAAQ,QAAQ;AACd,wBAAA,KAAK,KAAK;AACR,4BAAA,MAAM,GACD,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAM,CACT,EAAA,EAAA,GAAG,EAAE,aAAa,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAA,CACjC,CAAC;AACF,4BAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;4BACnC,MAAM;AACR,wBAAA,KAAK,KAAK;AACR,4BAAA,MAAM,GACD,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAM,CACT,EAAA,EAAA,GAAG,EAAE,aAAa,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAA,CACjC,CAAC;AACF,4BAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;4BACnC,MAAM;AACR,wBAAA,KAAK,WAAW,CAAC;AACjB,wBAAA,KAAK,WAAW;AACd,4BAAA,MAAM,GACD,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAM,CACT,EAAA,EAAA,MAAM,EAAE,aAAa,CAAC,QAAQ,CAAC,CAAC,cAAc,EAAA,CAC/C,CAAC;AACF,4BAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;4BACnC,MAAM;AACR,wBAAA,KAAK,UAAU,CAAC;AAChB,wBAAA,KAAK,QAAQ,CAAC;AACd,wBAAA,KAAK,SAAS,CAAC;AACf,wBAAA,KAAK,UAAU;AACb,4BAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;4BACnC,MAAM;AACR,wBAAA,KAAK,oBAAoB,CAAC;AAC1B,wBAAA,KAAK,qBAAqB,CAAC;AAC3B,wBAAA,KAAK,wBAAwB;4BAC3B,MAAM,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACD,MAAM,CAAA,EAAA,EACT,MAAM,EAAE,aAAa,CAAC,QAAQ,CAAC,EAAA,CAChC,CAAC;AAEF,4BAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;4BACnC,MAAM;AACR,wBAAA;AACE,4BAAA,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;4BACnE,MAAM;AACT,qBAAA;AACH,iBAAC,CAAC,CAAC;AACJ,aAAA;AACH,SAAC,CAAC;KA9DyD;;IAG3D,eAAe,GAAA;QACb,IAAI,CAAC,kBAAmB,CAAC,aAAc,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACtE;AA2DO,IAAA,cAAc,CAAC,QAAgB,EAAA;QACrC,OAAO,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC;KACzD;AAEO,IAAA,WAAW,CAAC,QAAgB,EAAE,MAAA,GAAiC,EAAE,EAAA;QACvE,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAW,CAAC;AACjE,QAAA,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,UAAU,EAAE,MAAM,CAAC,GAAG,GAAG,CAAC;KAClF;AAED,IAAA,IAAW,YAAY,GAAA;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;yHAvFU,4BAA4B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,EAAA,CAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA5B,4BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,4BAA4B,0LCvBzC,iJAQA,EAAA,MAAA,EAAA,CAAA,wKAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDea,4BAA4B,EAAA,UAAA,EAAA,CAAA;kBALxC,SAAS;+BACE,0BAA0B,EAAA,QAAA,EAAA,iJAAA,EAAA,MAAA,EAAA,CAAA,wKAAA,CAAA,EAAA,CAAA;uGAM7B,YAAY,EAAA,CAAA;sBADlB,KAAK;gBAIC,gBAAgB,EAAA,CAAA;sBADtB,KAAK;gBAMC,kBAAkB,EAAA,CAAA;sBADxB,KAAK;;;MEfK,yBAAyB,CAAA;;sHAAzB,yBAAyB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;uHAAzB,yBAAyB,EAAA,YAAA,EAAA,CAVlC,4BAA4B,CAAA,EAAA,OAAA,EAAA,CAG5B,YAAY;QACZ,gBAAgB,aAGhB,4BAA4B,CAAA,EAAA,CAAA,CAAA;AAGnB,yBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,yBAAyB,YAPlC,YAAY;QACZ,gBAAgB,CAAA,EAAA,CAAA,CAAA;2FAMP,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBAZrC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE;wBACZ,4BAA4B;AAC7B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,gBAAgB;AACjB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,4BAA4B;AAC7B,qBAAA;iBACF,CAAA;;;MCPqB,wBAAwB,CAAA;;;AA6E5C,IAAA,WAAA,GAAA;AA5EgB,QAAA,IAAO,CAAA,OAAA,GAAG,IAAI,CAAC;;AAIxB,QAAA,IAAM,CAAA,MAAA,GAAG,GAAG,CAAC;AAMb,QAAA,IAAO,CAAA,OAAA,GAAG,EAAE,CAAC;AAMb,QAAA,IAAK,CAAA,KAAA,GAAW,EAAE,CAAC;AAGnB,QAAA,IAAQ,CAAA,QAAA,GAAG,KAAK,CAAC;AAGjB,QAAA,IAAQ,CAAA,QAAA,GAAY,KAAK,CAAC;AAG1B,QAAA,IAAW,CAAA,WAAA,GAAG,EAAE,CAAC;AAGjB,QAAA,IAAS,CAAA,SAAA,GAAW,OAAO,CAAC;AAsB5B,QAAA,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;AAG5B,QAAA,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;AAMnC,QAAA,IAAA,CAAA,IAAI,GAAuB,IAAI,CAAC,OAAO,CAAC;AAGxC,QAAA,IAAS,CAAA,SAAA,GAAY,KAAK,CAAC;AAQpB,QAAA,IAAU,CAAA,UAAA,GAAG,EAAE,CAAC;AAEhB,QAAA,IAAU,CAAA,UAAA,GAAG,YAAY,CAAC;AAK/B,QAAA,IAAI,CAAC,WAAW,GAAG,IAAI,YAAY,EAAO,CAAC;KAC5C;;;IAIM,QAAQ,GAAA;QACb,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAC1B;;AAMS,IAAA,iBAAiB,MAAW;IAE/B,UAAU,GAAA;;AACf,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAE,CAAA,QAAQ,CAAC,EAAE,CAAC,CAAC;KAChD;IAEM,SAAS,CAAC,GAAS,EAAE,IAAU,EAAA;;AACpC,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAE,CAAA,KAAK,CAAC,CAAC;KAChE;IAEM,aAAa,GAAA;;AAClB,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAA,CAAE,sBAAsB,EAAE,CAAC;AAC3D,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAA,CAAE,oBAAoB,EAAE,CAAC;KAC1D;IAEM,YAAY,GAAA;;QACjB,IAAI,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;AACrC,YAAA,IAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAE,CAAA,KAAK,KAAI,IAAI;AAAE,gBAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAE,CAAA,QAAQ,CAAC,GAAG,CAAC,CAAC;AACrG,YAAA,IAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAE,CAAA,KAAK,KAAI,KAAK;AAAE,gBAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAE,CAAA,QAAQ,CAAC,GAAG,CAAC,CAAC;AACvG,SAAA;AACD,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAE,CAAA,KAAK,CAAC,CAAC;KAChE;IAES,QAAQ,GAAA;;AAChB,QAAA,IAAI,EAAC,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,EAAE;YACtC,OAAO,CAAC,KAAK,CAAC,CAAA,sBAAA,EAAyB,IAAI,CAAC,KAAK,CAAc,YAAA,CAAA,CAAC,CAAC;AAClE,SAAA;QAED,OAAO,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAgB,CAAC;KACzD;IAES,gBAAgB,GAAA;;QACxB,IAAI,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;AACrC,YAAA,IAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAE,CAAA,KAAK,KAAI,GAAG;AAAE,gBAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAE,CAAA,QAAQ,CAAC,IAAI,CAAC,CAAC;AACrG,YAAA,IAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAE,CAAA,KAAK,KAAI,GAAG;AAAE,gBAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAE,CAAA,QAAQ,CAAC,KAAK,CAAC,CAAC;AACvG,SAAA;KACF;AAES,IAAA,QAAQ,CAAC,KAAU,EAAA;;QAC3B,IAAI,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;AACrC,YAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAE,CAAA,QAAQ,CAAC,KAAK,CAAC,CAAC;AACnD,SAAA;KACF;IAES,YAAY,GAAA;AACpB,QAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,IAAG;YAC1D,IAAI,CAAC,YAAY,EAAE,CAAC;AACtB,SAAC,CAAC,CAAC;KACJ;IAEM,YAAY,GAAA;;AACjB,QAAA,MAAM,KAAK,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAA,CAAE,KAAK,CAAC;AACtD,QAAA,IAAI,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAE,CAAA,KAAK,EAAE;AAC3C,YAAA,IAAI,OAAO,KAAK,IAAI,QAAQ,EAAE;AAC5B,gBAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5D,aAAA;AAAM,iBAAA,IAAI,OAAO,KAAK,IAAI,QAAQ,EAAE;gBACnC,MAAM,KAAK,GAAG,qBAAqB,CAAC;AAEpC,gBAAA,IAAI,CAAA,CAAA,EAAA,GAAA,KAAK,KAAL,IAAA,IAAA,KAAK,uBAAL,KAAK,CAAE,QAAQ,EAAE,0CAAE,KAAK,CAAC,KAAK,CAAC,KAAI,IAAI,EAAE;oBAC3C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACpE,iBAAA;AACF,aAAA;AACF,SAAA;KACF;AAEM,IAAA,KAAK,CAAC,OAAY,EAAA;AACvB,QAAA,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;KACtD;IAEM,cAAc,GAAA;;AACnB,QAAA,IAAI,EAAC,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,EAAE;YACtC,OAAO,CAAC,KAAK,CAAC,CAAA,sBAAA,EAAyB,IAAI,CAAC,KAAK,CAAc,YAAA,CAAA,CAAC,CAAC;AAClE,SAAA;AACD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;KAC3E;AAEM,IAAA,eAAe,CAAC,KAAU,EAAA;;;AAE/B,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,QAAQ,EAAE,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,EAAE,CAAC;KAChC;;qHA3KmB,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAxB,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,wBAAwB,miBAHlC,EAAE,EAAA,QAAA,EAAA,IAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FAGQ,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAJ7C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,EAAE;oBACZ,aAAa,EAAE,iBAAiB,CAAC,IAAI;iBACtC,CAAA;0EAMQ,MAAM,EAAA,CAAA;sBADZ,KAAK;gBAIC,KAAK,EAAA,CAAA;sBADX,KAAK;gBAIC,OAAO,EAAA,CAAA;sBADb,KAAK;gBAIC,YAAY,EAAA,CAAA;sBADlB,KAAK;gBAIC,KAAK,EAAA,CAAA;sBADX,KAAK;gBAIC,QAAQ,EAAA,CAAA;sBADd,KAAK;gBAIC,QAAQ,EAAA,CAAA;sBADd,KAAK;gBAIC,WAAW,EAAA,CAAA;sBADjB,KAAK;gBAIC,SAAS,EAAA,CAAA;sBADf,KAAK;gBAKN,SAAS,EAAA,CAAA;sBADR,KAAK;gBAIN,OAAO,EAAA,CAAA;sBADN,KAAK;gBAIN,eAAe,EAAA,CAAA;sBADd,KAAK;gBAIN,QAAQ,EAAA,CAAA;sBADP,KAAK;gBAIC,MAAM,EAAA,CAAA;sBADZ,KAAK;gBAIC,MAAM,EAAA,CAAA;sBADZ,KAAK;gBAIC,UAAU,EAAA,CAAA;sBADhB,KAAK;gBAIC,UAAU,EAAA,CAAA;sBADhB,KAAK;gBAIC,MAAM,EAAA,CAAA;sBADZ,KAAK;gBAIN,IAAI,EAAA,CAAA;sBADH,KAAK;gBAIN,SAAS,EAAA,CAAA;sBADR,KAAK;gBAII,WAAW,EAAA,CAAA;sBADpB,MAAM;;;MCpEI,sBAAsB,CAAA;AACjC,IAAA,WAAA,GAAA,GAAgB;AAET,IAAA,OAAO,CAAC,OAAY,EAAE,KAAa,EAAE,IAAS,EAAA;AACnD,QAAA,MAAM,WAAW,GAAG,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC;QAEhE,IAAI,MAAM,GAAU,EAAE,CAAC;AAEvB,QAAA,OAAO,CAAC,OAAO,CAAC,CAAC,GAAQ,KAAI;AAC3B,YAAA,GAAG,CAAC,OAAO,CAAC,CAAC,EAAO,KAAI;;gBACtB,IAAI,IAAI,IAAI,IAAI,EAAE;AAChB,oBAAA,IAAI,CAAA,EAAA,GAAA,EAAE,KAAF,IAAA,IAAA,EAAE,uBAAF,EAAE,CAAE,YAAY,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,WAAW,EAAG,CAAA,QAAQ,CAAC,WAAW,CAAC,EAAE;AACzD,wBAAA,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACjB,qBAAA;AACF,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAA,EAAA,GAAA,EAAE,KAAF,IAAA,IAAA,EAAE,uBAAF,EAAE,CAAE,WAAW,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,WAAW,EAAG,CAAA,QAAQ,CAAC,WAAW,CAAC,EAAE;AACxD,wBAAA,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACjB,qBAAA;AACF,iBAAA;AACH,aAAC,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;AAEH,QAAA,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC;KACnB;;mHAvBU,sBAAsB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sBAAsB,cAFrB,MAAM,EAAA,CAAA,CAAA;2FAEP,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAHlC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACsBD,MAAMC,eAAa,GAAW,GAAG,CAAC;AAQ5B,MAAO,wBAAyB,SAAQ,wBAAwB,CAAA;IAiEpE,WAA0B,CAAA,OAA+B,EAAS,iBAAmC,EAAA;AACnG,QAAA,KAAK,EAAE,CAAC;AADgB,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAwB;AAAS,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAkB;AA5DrG,QAAA,IAAiB,CAAA,iBAAA,GAAY,KAAK,CAAC;AAMnC,QAAA,IAAqB,CAAA,qBAAA,GAAY,IAAI,CAAC;AAGtC,QAAA,IAAsB,CAAA,sBAAA,GAAY,KAAK,CAAC;AAMxC,QAAA,IAAW,CAAA,WAAA,GAAW,MAAM,CAAC;AAG7B,QAAA,IAAI,CAAA,IAAA,GAAW,MAAM,CAAC;AAStB,QAAA,IAAU,CAAA,UAAA,GAAY,IAAI,CAAC;AAY3B,QAAA,IAAW,CAAA,WAAA,GAAW,EAAE,CAAC;AAEzB,QAAA,IAAA,CAAA,OAAO,GAAuB,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC;AAIlE,QAAA,IAAa,CAAA,aAAA,GAAmB,EAAE,CAAC;AAKJ,QAAA,IAAa,CAAA,aAAA,GAAW,WAAW,CAAC;AACnC,QAAA,IAAc,CAAA,cAAA,GAAW,SAAS,CAAC;AACpC,QAAA,IAAa,CAAA,aAAA,GAAW,QAAQ,CAAC;AAC7B,QAAA,IAAiB,CAAA,iBAAA,GAAW,UAAU,CAAC;AACnD,QAAA,IAAK,CAAA,KAAA,GAAW,IAAI,CAAC;AAEpC,QAAA,IAAA,CAAA,aAAa,GAAoB,IAAI,OAAO,EAAE,CAAC;AAE/C,QAAA,IAAS,CAAA,SAAA,GAAS,EAAE,CAAC;AAI3B,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI,YAAY,EAAO,CAAC;AACtC,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI,YAAY,EAAO,CAAC;AACtC,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,YAAY,EAAsB,CAAC;AACxD,QAAA,IAAI,CAAC,eAAe,GAAG,IAAI,UAAU,EAAE,CAAC;AACxC,QAAA,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,CAAC;KAC/C;AAEM,IAAA,WAAW,CAAC,OAAsB,EAAA;AACvC,QAAA,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,UAAU,EAAE,CAAC;AACnB,SAAA;KACF;IAEQ,QAAQ,GAAA;AACf,QAAA,IAAI,CAAC,OAAO,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC;AACnD,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,qCAAqC,EAAE,CAAC;QAC7C,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,EAAE,IAAI,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;AACjF,QAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QACzC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAACA,eAAa,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;KAC9F;IAED,mBAAmB,GAAA;QACjB,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC;YAAE,OAAO;QAC1D,IAAI,CAAC,4BAA4B,EAAE,CAAC;AACpC,QAAA,IAAI,CAAC,SAAS;aACX,MAAM,CAAC,CAAC,CAAM,KAAyB,CAAE,CAAC,KAAK,CAAC;AAChD,aAAA,OAAO,CAAC,CAAC,CAAM,KAAI;AAClB,YAAA,MAAM,SAAS,GAA+B,CAAE,CAAC,KAAK,CAAC;YACvD,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,KAAU,KAAI;gBACpE,IAAI,CAAC,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,KAAK,EAAE;oBACzF,OAAO;AACR,iBAAA;AACD,gBAAA,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;gBAClC,IAAI,CAAC,OAAO,GAAG;AACb,oBAAA,IAAI,EAAE,CAAC;oBACP,IAAI,EAAE,IAAI,CAAC,WAAW;AACtB,oBAAA,MAAM,EAAE,EAAE;iBACX,CAAC;AACF,gBAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;;AAEpB,gBAAA,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;gBACvB,IAAI,CAAC,eAAe,GAA6B,IAAI,CAAC,OAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAClG,GAAG,CAAC,CAAC,MAA2B,KAAI;;AAClC,oBAAA,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;oBAC1C,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,CAAA,EAAA,GAAA,MAAM,CAAC,QAAQ,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,CAAC;oBAC9C,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,CAAA,EAAA,GAAA,MAAM,CAAC,QAAQ,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,UAAU,CAAC;oBAChD,OAAO,MAAM,CAAC,OAAO,CAAC;iBACvB,CAAC,CACH,CAAC;aACH,CAAC,CACH,CAAC;AACJ,SAAC,CAAC,CAAC;KACN;IAEO,4BAA4B,GAAA;QAClC,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAM,KAAK,OAAO,CAAC,KAAK,QAAQ,CAAC,EAAE;YAC5F,IAAI,UAAU,GAAwB,EAAE,CAAC;YACzC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAM,KAAI;AAChC,gBAAA,UAAU,CAAC,IAAI,CAAC,EAAE,KAAK,EAAU,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;AACtD,aAAC,CAAC,CAAC;YACH,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;AAC/C,YAAA,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;AAC7B,SAAA;KACF;IAEO,qCAAqC,GAAA;;QAC3C,IAAI,KAAK,CAAC,OAAO,CAAC,MAAA,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,0CAAE,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,KAAK,EAAE,EAAE;AAC/E,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACrB,SAAA;KACF;IAED,eAAe,GAAA;QACb,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,EAAE,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;AACtC,SAAA;KACF;IAEM,UAAU,GAAA;AACf,QAAA,IAAI,OAAO,IAAI,CAAC,OAAO,KAAK,UAAU,EAAE;YACtC,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CACjE,GAAG,CAAC,MAAM,IAAG;AACX,gBAAA,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;gBAC1C,OAAO,MAAM,CAAC,OAAO,CAAC;aACvB,CAAC,CACH,CAAC;AACF,YAAA,OAAO,QAAQ,CAAC;AACjB,SAAA;aAAM,IAAI,IAAI,CAAC,OAAO,EAAE;YACvB,OAAO,IAAI,CAAC,OAAO,CAAC;AACrB,SAAA;KACF;AAEM,IAAA,SAAS,CAAC,MAAW,EAAA;QAC1B,IAAI,CAAC,MAAM,EAAE;AACX,YAAA,OAAO,EAAE,CAAC;AACX,SAAA;QAED,OAAO,MAAM,CAAC,WAAW,CAAC;KAC3B;IAEM,UAAU,GAAA;QACf,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,OAAO,EAAE;YACpC,IAAI,CAAC,QAAQ,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,KAAU,KAAI;gBACpD,IAAI,IAAI,CAAC,OAAO,EAAE;oBAChB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AAClF,iBAAA;AACH,aAAC,CAAC,CAAC;AACJ,SAAA;AAAM,aAAA;YACL,IAAI,IAAI,CAAC,OAAO,EAAE;AAChB,gBAAA,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;oBACxB,IAAI,CAAC,eAAe,EAAE,CAAC;AACxB,iBAAA;AAAM,qBAAA;oBACL,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,EAAE,IAAI,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;AACjF,oBAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;AAC1C,iBAAA;AACF,aAAA;AACF,SAAA;KACF;IAEO,eAAe,GAAA;AACrB,QAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,EAAE,IAAI,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;AACjF,QAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QACzC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,MAAiB,KAAI;AACnD,YAAA,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;gBACvB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;IAEM,cAAc,GAAA;QACnB,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC;QAClC,KAAK,GAAG,CAAA,KAAK,KAAA,IAAA,IAAL,KAAK,KAAL,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,KAAK,CAAE,KAAK,MAAK,SAAS,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;AACzD,QAAA,OAAO,KAAK,CAAC;KACd;IAEO,aAAa,GAAA;;AACnB,QAAA,OAAO,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc,EAAE,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,IAAG,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;KACrE;AAEM,IAAA,UAAU,CAAC,GAAkB,EAAA;QAClC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KAClC;AAEM,IAAA,OAAO,CAAC,GAAW,EAAA;QACxB,IAAI,IAAI,CAAC,QAAQ;YAAE,OAAO;QAC1B,IAAI,GAAG,KAAK,OAAO,EAAE;YACnB,OAAO;AACR,SAAA;;AAED,QAAA,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG;AACb,YAAA,IAAI,EAAE,CAAC;YACP,IAAI,EAAE,IAAI,CAAC,WAAW;AACtB,YAAA,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK;SAC9B,CAAC;QAEF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAClC,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,QAAQ,EAAE,CAAC;AACjB,SAAA;KACF;IAED,QAAQ,GAAA;QACN,IAAI,IAAI,CAAC,UAAU,EAAE;AACnB,YAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;AAC1C,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CACzC,IAAI,CAAC,UAAU,EAAE,EACjB,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,EAC9C,IAAI,CAAC,IAAI,CACV,CAAC;AACH,SAAA;KACF;AAEM,IAAA,YAAY,CAAC,KAAgB,EAAA;AAClC,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;AAChD,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QAE/C,IAAI,CAAC,QAAQ,EAAE,CAAC;KACjB;AAEM,IAAA,UAAU,CAAC,GAAQ,EAAA;QACxB,GAAG,CAAC,eAAe,EAAE,CAAC;KACvB;AAEO,IAAA,qBAAqB,CAAC,aAA+B,EAAA;AAC3D,QAAA,aAAa,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;AACnD,QAAA,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;AACjD,QAAA,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;AACjD,QAAA,aAAa,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QACzD,aAAa,CAAC,aAAa,GAAG,CAAC,IAAY,EAAE,QAAgB,EAAE,MAAc,KAAS;AACpF,YAAA,MAAM,KAAK,GAAG,IAAI,GAAG,QAAQ,GAAG,CAAC,CAAC;YAClC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,QAAQ,CAAC;YAChC,IAAI,GAAG,GAAG,MAAM,EAAE;gBAChB,GAAG,GAAG,MAAM,CAAC;AACd,aAAA;YACD,OAAO,CAAA,EAAG,KAAK,CAAA,GAAA,EAAM,GAAG,CAAA,CAAA,EAAI,IAAI,CAAC,KAAK,CAAA,CAAA,EAAI,MAAM,CAAA,CAAE,CAAC;AACrD,SAAC,CAAC;KACH;AAEM,IAAA,iBAAiB,MAAW;IAE5B,WAAW,GAAA;QAChB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAe,KAAI;YAC7C,CAAC,CAAC,WAAW,EAAE,CAAC;AAClB,SAAC,CAAC,CAAC;KACJ;;qHApRU,wBAAwB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,sBAAA,EAAA,EAAA,EAAA,KAAA,EAAAH,IAAA,CAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAxB,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,wBAAwB,EAoDxB,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAAA,WAAA,EAAA,qBAAA,EAAA,uBAAA,EAAA,sBAAA,EAAA,wBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,WAAA,EAAA,aAAA,EAAA,IAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,EAAA,SAAA,EAAA,WAAA,EAAA,UAAA,EAAA,YAAA,EAAA,WAAA,EAAA,aAAA,EAAA,aAAA,EAAA,eAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,mBAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,QAAA,EAAA,SAAA,EAAA,WAAA,EAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,eAAe,EAEf,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,WAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,YAAY,0GCzFzB,u2DA4CA,EAAA,MAAA,EAAA,CAAA,wIAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAI,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,eAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,8BAAA,CAAA,EAAA,QAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,mDAAA,EAAA,QAAA,EAAA,CAAA,wBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,+CAAA,EAAA,MAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAT,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAU,4BAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,kBAAA,EAAA,oBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAN,IAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDTa,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBANpC,SAAS;+BACE,kBAAkB,EAAA,aAAA,EAGb,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,u2DAAA,EAAA,MAAA,EAAA,CAAA,wIAAA,CAAA,EAAA,CAAA;2IAUrC,SAAS,EAAA,CAAA;sBADR,KAAK;gBAIN,qBAAqB,EAAA,CAAA;sBADpB,KAAK;gBAIN,sBAAsB,EAAA,CAAA;sBADrB,KAAK;gBAIN,UAAU,EAAA,CAAA;sBADT,KAAK;gBAIN,WAAW,EAAA,CAAA;sBADV,KAAK;gBAIN,IAAI,EAAA,CAAA;sBADH,KAAK;gBAIN,OAAO,EAAA,CAAA;sBADN,KAAK;gBAIN,SAAS,EAAA,CAAA;sBADR,KAAK;gBAIN,UAAU,EAAA,CAAA;sBADT,KAAK;gBAIN,MAAM,EAAA,CAAA;sBADL,MAAM;gBAIP,MAAM,EAAA,CAAA;sBADL,MAAM;gBAIP,SAAS,EAAA,CAAA;sBADR,MAAM;gBAIP,WAAW,EAAA,CAAA;sBADV,KAAK;gBASsB,EAAE,EAAA,CAAA;sBAA7B,SAAS;uBAAC,eAAe,CAAA;gBAEiB,SAAS,EAAA,CAAA;sBAAnD,SAAS;gBAAC,IAAA,EAAA,CAAA,YAAY,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;gBACV,aAAa,EAAA,CAAA;sBAA3C,KAAK;uBAAC,eAAe,CAAA;gBACU,cAAc,EAAA,CAAA;sBAA7C,KAAK;uBAAC,gBAAgB,CAAA;gBACQ,aAAa,EAAA,CAAA;sBAA3C,KAAK;uBAAC,eAAe,CAAA;gBACa,iBAAiB,EAAA,CAAA;sBAAnD,KAAK;uBAAC,mBAAmB,CAAA;gBACH,KAAK,EAAA,CAAA;sBAA3B,KAAK;uBAAC,OAAO,CAAA;;;MEnEH,qBAAqB,CAAA;;kHAArB,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;mHAArB,qBAAqB,EAAA,YAAA,EAAA,CAdjB,wBAAwB,CAAA,EAAA,OAAA,EAAA,CAGrC,mBAAmB;QACnB,YAAY;QACZ,qBAAqB;QACrB,kBAAkB;QAClB,gBAAgB;QAChB,cAAc;QACd,aAAa;QACb,kBAAkB;QAClB,yBAAyB,aAVjB,wBAAwB,CAAA,EAAA,CAAA,CAAA;AAavB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,YAX9B,mBAAmB;QACnB,YAAY;QACZ,qBAAqB;QACrB,kBAAkB;QAClB,gBAAgB;QAChB,cAAc;QACd,aAAa;QACb,kBAAkB;QAClB,yBAAyB,CAAA,EAAA,CAAA,CAAA;2FAGhB,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAfjC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,wBAAwB,CAAC;oBACxC,OAAO,EAAE,CAAC,wBAAwB,CAAC;AACnC,oBAAA,OAAO,EAAE;wBACP,mBAAmB;wBACnB,YAAY;wBACZ,qBAAqB;wBACrB,kBAAkB;wBAClB,gBAAgB;wBAChB,cAAc;wBACd,aAAa;wBACb,kBAAkB;wBAClB,yBAAyB;AAC1B,qBAAA;iBACF,CAAA;;;AC1Be,SAAA,mBAAmB,CAAC,KAAU,EAAE,IAAY,EAAA;IAC1D,IAAI,KAAK,IAAI,IAAI,EAAE;QACjB,MAAM,IAAI,KAAK,CAAC,eAAe,GAAG,IAAI,GAAG,kBAAkB,CAAC,CAAC;AAC9D,KAAA;AACH,CAAC;SAEe,oBAAoB,CAAC,KAAU,EAAE,IAAY,EAAE,MAAW,EAAA;AACxE,IAAA,IAAI,KAAK,IAAI,IAAI,IAAI,MAAM,IAAI,IAAI,EAAE;QACnC,MAAM,IAAI,KAAK,CAAC,eAAe,GAAG,IAAI,GAAG,kBAAkB,CAAC,CAAC;AAC9D,KAAA;AACH,CAAC;AAEe,SAAA,uBAAuB,CAAC,KAAY,EAAE,IAAc,EAAA;AAClE,IAAA,KAAK,CAAC,OAAO,CAAC,UAAU,KAAK,EAAE,CAAC,EAAA;QAC9B,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,KAAC,CAAC,CAAC;AACL;;ACJM,MAAO,iBAAkB,SAAQ,wBAAwB,CAAA;AA4B7D,IAAA,WAAA,GAAA;AACE,QAAA,KAAK,EAAE,CAAC;KACT;IAEQ,QAAQ,GAAA;QACf,uBAAuB,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,aAAa,EAAE,MAAM,CAAC,CAAC,CAAC;KAC1G;AAED,IAAA,iBAAiB,MAAW;;8GApCjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,iBAAiB,kQCZ9B,+SAMA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,kBAAA,EAAA,UAAA,EAAA,qBAAA,EAAA,cAAA,EAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAJ,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDMa,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAN7B,SAAS;+BACE,WAAW,EAAA,aAAA,EAGN,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,+SAAA,EAAA,CAAA;0EAIrC,KAAK,EAAA,CAAA;sBADJ,KAAK;gBAIN,OAAO,EAAA,CAAA;sBADN,KAAK;gBAIN,WAAW,EAAA,CAAA;sBADV,KAAK;gBAIN,QAAQ,EAAA,CAAA;sBADP,KAAK;gBAIN,MAAM,EAAA,CAAA;sBADL,KAAK;gBAIN,OAAO,EAAA,CAAA;sBADN,KAAK;gBAIN,QAAQ,EAAA,CAAA;sBADP,KAAK;gBAIN,IAAI,EAAA,CAAA;sBADH,KAAK;gBAIN,IAAI,EAAA,CAAA;sBADH,KAAK;;;MEzBK,cAAc,CAAA;;2GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;4GAAd,cAAc,EAAA,YAAA,EAAA,CAJV,iBAAiB,CAAA,EAAA,OAAA,EAAA,CAEtB,cAAc,EAAE,aAAa,EAAE,mBAAmB,EAAE,YAAY,CAAA,EAAA,OAAA,EAAA,CADhE,iBAAiB,CAAA,EAAA,CAAA,CAAA;AAGhB,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,YAFf,cAAc,EAAE,aAAa,EAAE,mBAAmB,EAAE,YAAY,CAAA,EAAA,CAAA,CAAA;2FAE/D,cAAc,EAAA,UAAA,EAAA,CAAA;kBAL1B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,iBAAiB,CAAC;oBACjC,OAAO,EAAE,CAAC,iBAAiB,CAAC;oBAC5B,OAAO,EAAE,CAAC,cAAc,EAAE,aAAa,EAAE,mBAAmB,EAAE,YAAY,CAAC;iBAC5E,CAAA;;;ACCK,MAAO,gCAAiC,SAAQ,wBAAwB,CAAA;AAN9E,IAAA,WAAA,GAAA;;AAWE,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,YAAY,EAAE,CAAC;KAStC;AAPC,IAAA,WAAW,CAAC,KAAU,EAAA;AACpB,QAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAClC;IAED,iBAAiB,GAAA;AACf,QAAA,mBAAmB,CAAC,IAAI,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;KAC1D;;6HAbU,gCAAgC,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAhC,gCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,gCAAgC,sLCZ7C,8RAKA,EAAA,MAAA,EAAA,CAAA,6VAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAD,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,YAAA,EAAA,MAAA,EAAA,UAAA,EAAA,OAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,aAAA,EAAA,QAAA,CAAA,EAAA,QAAA,EAAA,CAAA,sBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,MAAA,EAAA,OAAA,EAAA,UAAA,EAAA,YAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,CAAA,EAAA,QAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAD,IAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDOa,gCAAgC,EAAA,UAAA,EAAA,CAAA;kBAN5C,SAAS;+BACE,4BAA4B,EAAA,aAAA,EAGvB,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,8RAAA,EAAA,MAAA,EAAA,CAAA,6VAAA,CAAA,EAAA,CAAA;8BAIrC,aAAa,EAAA,CAAA;sBADZ,KAAK;gBAIN,eAAe,EAAA,CAAA;sBADd,MAAM;;;MELI,6BAA6B,CAAA;;0HAA7B,6BAA6B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;2HAA7B,6BAA6B,EAAA,YAAA,EAAA,CAJzB,gCAAgC,CAAA,EAAA,OAAA,EAAA,CAErC,mBAAmB,EAAE,WAAW,EAAE,YAAY,EAAE,qBAAqB,CAAA,EAAA,OAAA,EAAA,CADrE,gCAAgC,CAAA,EAAA,CAAA,CAAA;AAG/B,6BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,6BAA6B,YAF9B,mBAAmB,EAAE,WAAW,EAAE,YAAY,EAAE,qBAAqB,CAAA,EAAA,CAAA,CAAA;2FAEpE,6BAA6B,EAAA,UAAA,EAAA,CAAA;kBALzC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,gCAAgC,CAAC;oBAChD,OAAO,EAAE,CAAC,gCAAgC,CAAC;oBAC3C,OAAO,EAAE,CAAC,mBAAmB,EAAE,WAAW,EAAE,YAAY,EAAE,qBAAqB,CAAC;iBACjF,CAAA;;;MCHY,kBAAkB,CAAA;AAL/B,IAAA,WAAA,GAAA;AAOS,QAAA,IAAQ,CAAA,QAAA,GAAY,KAAK,CAAC;KAuBlC;AAHC,IAAA,IAA0C,SAAS,GAAA;QACjD,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;+GAxBU,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,kBAAkB,mQCP/B,u4EAiFA,EAAA,MAAA,EAAA,CAAA,iRAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAD,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,6GAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FD1Ea,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAL9B,SAAS;+BACE,YAAY,EAAA,QAAA,EAAA,u4EAAA,EAAA,MAAA,EAAA,CAAA,iRAAA,CAAA,EAAA,CAAA;8BAMf,QAAQ,EAAA,CAAA;sBADd,KAAK;gBAIC,KAAK,EAAA,CAAA;sBADX,KAAK;gBAIC,KAAK,EAAA,CAAA;sBADX,KAAK;gBAIC,IAAI,EAAA,CAAA;sBADV,KAAK;gBAIC,IAAI,EAAA,CAAA;sBADV,KAAK;gBAIC,UAAU,EAAA,CAAA;sBADhB,KAAK;gBAIC,OAAO,EAAA,CAAA;sBADb,KAAK;gBAGoC,SAAS,EAAA,CAAA;sBAAlD,WAAW;uBAAC,uBAAuB,CAAA;;;MElBzB,eAAe,CAAA;;4GAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;6GAAf,eAAe,EAAA,YAAA,EAAA,CAJX,kBAAkB,CAEvB,EAAA,OAAA,EAAA,CAAA,eAAe,EAAE,aAAa,EAAE,YAAY,CAAA,EAAA,OAAA,EAAA,CAD5C,kBAAkB,CAAA,EAAA,CAAA,CAAA;AAGjB,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,EAFhB,OAAA,EAAA,CAAA,eAAe,EAAE,aAAa,EAAE,YAAY,CAAA,EAAA,CAAA,CAAA;2FAE3C,eAAe,EAAA,UAAA,EAAA,CAAA;kBAL3B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,kBAAkB,CAAC;oBAClC,OAAO,EAAE,CAAC,kBAAkB,CAAC;AAC7B,oBAAA,OAAO,EAAE,CAAC,eAAe,EAAE,aAAa,EAAE,YAAY,CAAC;iBACxD,CAAA;;;MCDY,gBAAgB,CAAA;AAyB3B,IAAA,WAAA,GAAA,GAAgB;IAEhB,QAAQ,GAAA;AACN,QAAA,mBAAmB,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AAC7C,QAAA,mBAAmB,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AACzC,QAAA,mBAAmB,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;KACtC;;6GA/BU,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,gBAAgB,wNCT7B,muBAkBA,EAAA,MAAA,EAAA,CAAA,qFAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAF,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,YAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,kCAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,kDAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,6GAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDTa,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAN5B,SAAS;+BACE,UAAU,EAAA,aAAA,EAGL,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,muBAAA,EAAA,MAAA,EAAA,CAAA,qFAAA,CAAA,EAAA,CAAA;0EAIrC,KAAK,EAAA,CAAA;sBADJ,KAAK;gBAIN,QAAQ,EAAA,CAAA;sBADP,KAAK;gBAIN,OAAO,EAAA,CAAA;sBADN,KAAK;gBAIN,GAAG,EAAA,CAAA;sBADF,KAAK;gBAIN,KAAK,EAAA,CAAA;sBADJ,KAAK;gBAIN,GAAG,EAAA,CAAA;sBADF,KAAK;gBAIN,aAAa,EAAA,CAAA;sBADZ,KAAK;gBAIN,UAAU,EAAA,CAAA;sBADT,KAAK;;;MEnBK,aAAa,CAAA;;0GAAb,aAAa,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;2GAAb,aAAa,EAAA,YAAA,EAAA,CAJT,gBAAgB,CAAA,EAAA,OAAA,EAAA,CAErB,mBAAmB,EAAE,YAAY,EAAE,aAAa,EAAE,eAAe,CAAA,EAAA,OAAA,EAAA,CADjE,gBAAgB,CAAA,EAAA,CAAA,CAAA;AAGf,aAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,YAFd,mBAAmB,EAAE,YAAY,EAAE,aAAa,EAAE,eAAe,CAAA,EAAA,CAAA,CAAA;2FAEhE,aAAa,EAAA,UAAA,EAAA,CAAA;kBALzB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,gBAAgB,CAAC;oBAChC,OAAO,EAAE,CAAC,gBAAgB,CAAC;oBAC3B,OAAO,EAAE,CAAC,mBAAmB,EAAE,YAAY,EAAE,aAAa,EAAE,eAAe,CAAC;iBAC7E,CAAA;;;ACDK,MAAO,yBAA0B,SAAQ,wBAAwB,CAAA;AAoBrE,IAAA,WAAA,GAAA;AACE,QAAA,KAAK,EAAE,CAAC;AAnBV,QAAA,IAAK,CAAA,KAAA,GAAiB,SAAS,CAAC;AAcvB,QAAA,IAAa,CAAA,aAAA,GAAY,KAAK,CAAC;AAE/B,QAAA,IAAW,CAAA,WAAA,GAAY,KAAK,CAAC;KAIrC;AAEM,IAAA,WAAW,CAAC,OAAsB,EAAA;AACvC,QAAA,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,cAAc,EAAE,CAAC;AACvB,SAAA;KACF;IAEQ,QAAQ,GAAA;QACf,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;IAED,cAAc,GAAA;QACZ,IAAI,IAAI,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,WAAW,EAAE;YACvC,IAAI,CAAC,gBAAgB,EAAE,CAAC;AACzB,SAAA;KACF;AAED,IAAA,iBAAiB,MAAW;;sHAxCjB,yBAAyB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAzB,yBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,yBAAyB,8RCVtC,4eAcA,EAAA,MAAA,EAAA,CAAA,2OAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAF,IAAA,CAAA,WAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAU,4BAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,kBAAA,EAAA,oBAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDJa,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBANrC,SAAS;+BACE,oBAAoB,EAAA,aAAA,EAGf,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,4eAAA,EAAA,MAAA,EAAA,CAAA,2OAAA,CAAA,EAAA,CAAA;0EAIrC,KAAK,EAAA,CAAA;sBADJ,KAAK;gBAIN,OAAO,EAAA,CAAA;sBADN,KAAK;gBAIN,QAAQ,EAAA,CAAA;sBADP,KAAK;gBAIN,YAAY,EAAA,CAAA;sBADX,KAAK;gBAIN,SAAS,EAAA,CAAA;sBADR,KAAK;gBAGG,aAAa,EAAA,CAAA;sBAArB,KAAK;gBAEG,WAAW,EAAA,CAAA;sBAAnB,KAAK;;;MEXK,sBAAsB,CAAA;;mHAAtB,sBAAsB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;oHAAtB,sBAAsB,EAAA,YAAA,EAAA,CATlB,yBAAyB,CAAA,EAAA,OAAA,EAAA,CAGtC,iBAAiB;QACjB,mBAAmB;QACnB,YAAY;QACZ,yBAAyB,aALjB,yBAAyB,CAAA,EAAA,CAAA,CAAA;AAQxB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sBAAsB,YAN/B,iBAAiB;QACjB,mBAAmB;QACnB,YAAY;QACZ,yBAAyB,CAAA,EAAA,CAAA,CAAA;2FAGhB,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAVlC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,yBAAyB,CAAC;oBACzC,OAAO,EAAE,CAAC,yBAAyB,CAAC;AACpC,oBAAA,OAAO,EAAE;wBACP,iBAAiB;wBACjB,mBAAmB;wBACnB,YAAY;wBACZ,yBAAyB;AAC1B,qBAAA;iBACF,CAAA;;;ACHK,MAAO,oBAAqB,SAAQ,wBAAwB,CAAA;AANlE,IAAA,WAAA,GAAA;;AAgCE,QAAA,IAAS,CAAA,SAAA,GAAY,QAAQ,CAAC;AAErB,QAAA,IAAa,CAAA,aAAA,GAAY,KAAK,CAAC;AAE/B,QAAA,IAAW,CAAA,WAAA,GAAY,KAAK,CAAC;KAsBvC;IAnBU,iBAAiB,GAAA;AACxB,QAAA,mBAAmB,CAAC,IAAI,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;KACpD;IAEQ,QAAQ,GAAA;QACf,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;KAC/C;IAEM,aAAa,CAAC,GAAQ,EAAE,IAAS,EAAA;AACtC,QAAA,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACrB,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,KAAkB,KAAI;AACjD,gBAAA,IAAI,KAAK,CAAC,SAAS,IAAI,IAAI;AAAE,oBAAA,KAAK,CAAC,SAAS,GAAG,GAAG,CAAC;AACnD,gBAAA,IAAI,KAAK,CAAC,SAAS,IAAI,KAAK;AAAE,oBAAA,KAAK,CAAC,SAAS,GAAG,GAAG,CAAC;AACtD,aAAC,CAAC,CAAC;AACJ,SAAA;AACD,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACnC,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;;iHAnDU,oBAAoB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,oBAAoB,qXCbjC,8vBAoBA,EAAA,MAAA,EAAA,CAAA,gRAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAZ,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAD,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,qDAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAE,IAAA,CAAA,WAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAU,4BAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,kBAAA,EAAA,oBAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDPa,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBANhC,SAAS;+BACE,cAAc,EAAA,aAAA,EAGT,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,8vBAAA,EAAA,MAAA,EAAA,CAAA,gRAAA,CAAA,EAAA,CAAA;8BAIrC,KAAK,EAAA,CAAA;sBADJ,KAAK;gBAIN,OAAO,EAAA,CAAA;sBADN,KAAK;gBAIN,QAAQ,EAAA,CAAA;sBADP,KAAK;gBAIN,aAAa,EAAA,CAAA;sBADZ,KAAK;gBAIN,aAAa,EAAA,CAAA;sBADZ,KAAK;gBAIN,UAAU,EAAA,CAAA;sBADT,KAAK;gBAIN,YAAY,EAAA,CAAA;sBADX,KAAK;gBAIN,SAAS,EAAA,CAAA;sBADR,KAAK;gBAIN,SAAS,EAAA,CAAA;sBADR,KAAK;gBAGG,aAAa,EAAA,CAAA;sBAArB,KAAK;gBAEG,WAAW,EAAA,CAAA;sBAAnB,KAAK;;;MEzBK,iBAAiB,CAAA;;8GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;+GAAjB,iBAAiB,EAAA,YAAA,EAAA,CAVb,oBAAoB,CAAA,EAAA,OAAA,EAAA,CAGjC,mBAAmB;QACnB,YAAY;QACZ,WAAW;QACX,iBAAiB;QACjB,yBAAyB,aANjB,oBAAoB,CAAA,EAAA,CAAA,CAAA;AASnB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,YAP1B,mBAAmB;QACnB,YAAY;QACZ,WAAW;QACX,iBAAiB;QACjB,yBAAyB,CAAA,EAAA,CAAA,CAAA;2FAGhB,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAX7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,oBAAoB,CAAC;oBACpC,OAAO,EAAE,CAAC,oBAAoB,CAAC;AAC/B,oBAAA,OAAO,EAAE;wBACP,mBAAmB;wBACnB,YAAY;wBACZ,WAAW;wBACX,iBAAiB;wBACjB,yBAAyB;AAC1B,qBAAA;iBACF,CAAA;;;ACJK,MAAO,iBAAkB,SAAQ,wBAAwB,CAAA;AAqC7D,IAAA,WAAA,GAAA;AACE,QAAA,KAAK,EAAE,CAAC;AA9BV,QAAA,IAAU,CAAA,UAAA,GAAY,IAAI,CAAC;AAgB3B,QAAA,IAAS,CAAA,SAAA,GAAY,IAAI,CAAC;AAM1B,QAAA,IAAc,CAAA,cAAA,GAAY,IAAI,CAAC;AAI/B,QAAA,IAAS,CAAA,SAAA,GAAG,IAAI,CAAC;QACR,IAAA,CAAA,kBAAkB,GAAa,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;KAItD;AAED,IAAA,GAAG,CAAC,KAAwB,EAAA;;AAC1B,QAAA,MAAM,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC;AAC9B,QAAA,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAE1B,IAAI,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE;AACxB,YAAA,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,KAAI,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,0CAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAA,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,0CAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAE,CAAA,KAAK,GAAG,EAAE,CAAC;YAC/G,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAE,CAAA,QAAQ,CAAC,CAAC,GAAG,GAAG,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AACnE,YAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAA,CAAE,sBAAsB,EAAE,CAAC;YAC3D,IAAI,CAAC,SAAS,EAAE,CAAC;AAClB,SAAA;KACF;AAED,IAAA,MAAM,CAAC,IAAY,EAAA;;AACjB,QAAA,MAAM,KAAK,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,0CAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAEpE,IAAI,KAAK,IAAI,CAAC,EAAE;AACd,YAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,0CAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAE,CAAA,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AACzD,YAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAA,CAAE,sBAAsB,EAAE,CAAC;YAC3D,IAAI,CAAC,SAAS,EAAE,CAAC;AAClB,SAAA;KACF;AAED,IAAA,iBAAiB,MAAW;;8GA/DjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,iBAAiB,8aCb9B,ohCA4BA,EAAA,MAAA,EAAA,CAAA,uPAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAZ,IAAA,CAAA,WAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,UAAA,EAAA,aAAA,EAAA,UAAA,EAAA,OAAA,EAAA,mBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,wBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,uBAAA,EAAA,+BAAA,EAAA,aAAA,EAAA,IAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,sBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,wEAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,UAAA,EAAA,eAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAO,4BAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,kBAAA,EAAA,oBAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDfa,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAN7B,SAAS;+BACE,WAAW,EAAA,aAAA,EAGN,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,ohCAAA,EAAA,MAAA,EAAA,CAAA,uPAAA,CAAA,EAAA,CAAA;0EAIrC,cAAc,EAAA,CAAA;sBADb,KAAK;gBAIN,WAAW,EAAA,CAAA;sBADV,KAAK;gBAIN,UAAU,EAAA,CAAA;sBADT,KAAK;gBAIN,IAAI,EAAA,CAAA;sBADH,KAAK;gBAIN,QAAQ,EAAA,CAAA;sBADP,KAAK;gBAKN,KAAK,EAAA,CAAA;sBADJ,KAAK;gBAIN,QAAQ,EAAA,CAAA;sBADP,KAAK;gBAIN,SAAS,EAAA,CAAA;sBADR,KAAK;gBAIN,QAAQ,EAAA,CAAA;sBADP,KAAK;gBAIN,cAAc,EAAA,CAAA;sBADb,KAAK;gBAGkB,SAAS,EAAA,CAAA;sBAAhC,SAAS;uBAAC,WAAW,CAAA;;;MEvBX,cAAc,CAAA;;2GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;4GAAd,cAAc,EAAA,YAAA,EAAA,CAXV,iBAAiB,CAAA,EAAA,OAAA,EAAA,CAG9B,cAAc;QACd,aAAa;QACb,kBAAkB;QAClB,mBAAmB;QACnB,YAAY;QACZ,yBAAyB,aAPjB,iBAAiB,CAAA,EAAA,CAAA,CAAA;AAUhB,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,YARvB,cAAc;QACd,aAAa;QACb,kBAAkB;QAClB,mBAAmB;QACnB,YAAY;QACZ,yBAAyB,CAAA,EAAA,CAAA,CAAA;2FAGhB,cAAc,EAAA,UAAA,EAAA,CAAA;kBAZ1B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,iBAAiB,CAAC;oBACjC,OAAO,EAAE,CAAC,iBAAiB,CAAC;AAC5B,oBAAA,OAAO,EAAE;wBACP,cAAc;wBACd,aAAa;wBACb,kBAAkB;wBAClB,mBAAmB;wBACnB,YAAY;wBACZ,yBAAyB;AAC1B,qBAAA;iBACF,CAAA;;;MCXY,uBAAuB,CAAA;AANpC,IAAA,WAAA,GAAA;AAaE,QAAA,IAAA,CAAA,sBAAsB,GAAsB,IAAI,YAAY,EAAO,CAAC;KAQrE;IANC,kBAAkB,CAAC,KAAU,EAAE,IAAS,EAAA;AACtC,QAAA,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC;YAC/B,KAAK;YACL,IAAI;AACL,SAAA,CAAC,CAAC;KACJ;;oHAdU,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,uBAAuB,yMCVpC,oXAUA,EAAA,MAAA,EAAA,CAAA,iPAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAb,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDAa,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBANnC,SAAS;+BACE,kBAAkB,EAAA,aAAA,EAGb,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,oXAAA,EAAA,MAAA,EAAA,CAAA,iPAAA,CAAA,EAAA,CAAA;8BAIrC,gBAAgB,EAAA,CAAA;sBADf,KAAK;gBAGN,aAAa,EAAA,CAAA;sBADZ,KAAK;gBAIN,sBAAsB,EAAA,CAAA;sBADrB,MAAM;;;MENI,oBAAoB,CAAA;;iHAApB,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,iBAJhB,uBAAuB,CAAA,EAAA,OAAA,EAAA,CAE5B,mBAAmB,EAAE,YAAY,aADjC,uBAAuB,CAAA,EAAA,CAAA,CAAA;kHAGtB,oBAAoB,EAAA,OAAA,EAAA,CAFrB,mBAAmB,EAAE,YAAY,CAAA,EAAA,CAAA,CAAA;2FAEhC,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBALhC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,uBAAuB,CAAC;oBACvC,OAAO,EAAE,CAAC,uBAAuB,CAAC;AAClC,oBAAA,OAAO,EAAE,CAAC,mBAAmB,EAAE,YAAY,CAAC;iBAC7C,CAAA;;;ACFY,MAAA,UAAU,GAAG;AACxB,IAAA,KAAK,EAAE;AACL,QAAA,SAAS,EAAE,YAAY;AACxB,KAAA;AACD,IAAA,OAAO,EAAE;AACP,QAAA,SAAS,EAAE,GAAG;AACd,QAAA,cAAc,EAAE,WAAW;AAC3B,QAAA,aAAa,EAAE,IAAI;AACnB,QAAA,kBAAkB,EAAE,WAAW;AAChC,KAAA;EACD;AAEW,MAAA,aAAa,GAAG;AAC3B,IAAA,EAAE,OAAO,EAAE,gBAAgB,EAAE,QAAQ,EAAE,UAAU,EAAE;IACnD,EAAE,OAAO,EAAE,+BAA+B,EAAE,QAAQ,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE;IACxE,EAAE,OAAO,EAAE,+BAA+B,EAAE,QAAQ,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE;EACxE;AAQI,MAAO,sBAAuB,SAAQ,wBAAwB,CAAA;AAKlE,IAAA,WAAA,CAA0B,QAAkB,EAAA;AAC1C,QAAA,KAAK,EAAE,CAAC;AADgB,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;KAE3C;AAEM,IAAA,WAAW,CAAC,OAAsB,EAAA;AACvC,QAAA,IAAI,OAAO;YAAE,IAAI,CAAC,YAAY,EAAE,CAAC;KAClC;IAEe,QAAQ,GAAA;QACtB,IAAI,CAAC,YAAY,EAAE,CAAC;;AAGpB,QAAA,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,QAAQ;AAAE,YAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;aAC7E,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ;AAAE,YAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;KAC1G;IAEM,UAAU,GAAA;QACf,IAAI,IAAI,CAAC,MAAM,EAAE;AACf,YAAA,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC;AAClD,SAAA;AACD,QAAA,OAAO,KAAK,CAAC;KACd;AAEM,IAAA,iBAAiB,MAAW;;mHA5BxB,sBAAsB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,QAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,sBAAsB,kKC/BnC,s/BAqBA,EAAA,MAAA,EAAA,CAAA,2BAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,+CAAA,EAAA,MAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAQ,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,QAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,KAAA,EAAA,KAAA,EAAA,qBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,KAAA,EAAA,UAAA,EAAA,YAAA,EAAA,UAAA,EAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,4BAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,kBAAA,EAAA,oBAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDUa,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBANlC,SAAS;+BACE,gBAAgB,EAAA,aAAA,EAGX,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,s/BAAA,EAAA,MAAA,EAAA,CAAA,2BAAA,CAAA,EAAA,CAAA;iGAGZ,KAAK,EAAA,CAAA;sBAA7B,KAAK;gBACU,IAAI,EAAA,CAAA;sBAAnB,KAAK;gBACU,QAAQ,EAAA,CAAA;sBAAvB,KAAK;;;AEbF,MAAO,2BAA4B,SAAQ,sBAAsB,CAAA;AAmBrE,IAAA,WAAA,CAAmC,QAAkB,EAAA;QACnD,KAAK,CAAC,QAAQ,CAAC,CAAC;AADiB,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;AAdrC,QAAA,IAAY,CAAA,YAAA,GAAY,IAAI,CAAC;AAE7B,QAAA,IAAU,CAAA,UAAA,GAAW,EAAE,CAAC;AAQvB,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,YAAY,EAAE,CAAC;KAMrD;AAEe,IAAA,WAAW,CAAC,OAAsB,EAAA;AAChD,QAAA,IAAI,OAAO;YAAE,IAAI,CAAC,YAAY,EAAE,CAAC;KAClC;IAEe,QAAQ,GAAA;QACtB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,EAAE,CAAC;;AAGpB,QAAA,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,QAAQ,EAAE;AACrC,YAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;AAC3C,YAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,CAAC;AAC/C,SAAA;aAAM,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC9D,YAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;AAC3C,YAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,CAAC;AAC/C,SAAA;KACF;IAEM,YAAY,GAAA;AACjB,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC3B;IAEM,eAAe,CAAC,cAAgC,EAAE,YAA8B,EAAA;AACrF,QAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;YACxB,KAAK,EAAE,cAAc,CAAC,KAAK;YAC3B,GAAG,EAAE,YAAY,CAAC,KAAK;AACxB,SAAA,CAAC,CAAC;KACJ;IAES,eAAe,GAAA;;AACvB,QAAA,IAAI,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAE,CAAA,KAAK,EAAE;AAC9C,YAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAA,CAAE,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAA,CAAE,KAAK,CAAC,CAAC,CAAC;AACrG,SAAA;QACD,OAAO,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAgB,CAAC;KAC5D;;wHAzDU,2BAA2B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAf,IAAA,CAAA,QAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA3B,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,2BAA2B,sUAF3B,CAAC,aAAa,EAAE,QAAQ,CAAC,sECnBtC,q8DAwCA,EAAA,MAAA,EAAA,CAAA,2BAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAD,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAE,IAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,KAAA,EAAA,UAAA,EAAA,YAAA,EAAA,UAAA,EAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,YAAA,EAAA,KAAA,EAAA,KAAA,EAAA,UAAA,EAAA,WAAA,EAAA,iBAAA,EAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,EAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,EAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,QAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,+CAAA,EAAA,MAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAO,4BAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,kBAAA,EAAA,oBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAb,IAAA,CAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDnBa,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBAPvC,SAAS;+BACE,sBAAsB,EAAA,aAAA,EAGjB,iBAAiB,CAAC,IAAI,aAC1B,CAAC,aAAa,EAAE,QAAQ,CAAC,EAAA,QAAA,EAAA,q8DAAA,EAAA,MAAA,EAAA,CAAA,2BAAA,CAAA,EAAA,CAAA;iGAGpB,eAAe,EAAA,CAAA;sBAA9B,KAAK;gBAEU,aAAa,EAAA,CAAA;sBAA5B,KAAK;gBAEU,YAAY,EAAA,CAAA;sBAA3B,KAAK;gBAEU,UAAU,EAAA,CAAA;sBAAzB,KAAK;gBAEU,gBAAgB,EAAA,CAAA;sBAA/B,KAAK;gBAEU,cAAc,EAAA,CAAA;sBAA7B,KAAK;gBAEU,QAAQ,EAAA,CAAA;sBAAvB,KAAK;gBAEW,eAAe,EAAA,CAAA;sBAA/B,MAAM;;;MEVI,wBAAwB,CAAA;;qHAAxB,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;sHAAxB,wBAAwB,EAAA,YAAA,EAAA,CAdpB,2BAA2B,CAAA,EAAA,OAAA,EAAA,CAGxC,mBAAmB;QACnB,YAAY;QACZ,mBAAmB;QACnB,cAAc;QACd,gBAAgB;QAChB,mBAAmB;QACnB,mBAAmB;QACnB,yBAAyB,aATjB,2BAA2B,CAAA,EAAA,CAAA,CAAA;AAa1B,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,aAFxB,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC,eAAe,CAAC,EAAE,CAAC,YATzF,mBAAmB;QACnB,YAAY;QACZ,mBAAmB;QACnB,cAAc;QACd,gBAAgB;QAChB,mBAAmB;QACnB,mBAAmB;QACnB,yBAAyB,CAAA,EAAA,CAAA,CAAA;2FAIhB,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAfpC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,2BAA2B,CAAC;oBAC3C,OAAO,EAAE,CAAC,2BAA2B,CAAC;AACtC,oBAAA,OAAO,EAAE;wBACP,mBAAmB;wBACnB,YAAY;wBACZ,mBAAmB;wBACnB,cAAc;wBACd,gBAAgB;wBAChB,mBAAmB;wBACnB,mBAAmB;wBACnB,yBAAyB;AAC1B,qBAAA;AACD,oBAAA,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC,eAAe,CAAC,EAAE,CAAC;iBAC5F,CAAA;;;MCEY,mBAAmB,CAAA;;gHAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;iHAAnB,mBAAmB,EAAA,YAAA,EAAA,CAdf,sBAAsB,CAAA,EAAA,OAAA,EAAA,CAGnC,YAAY;QACZ,cAAc;QACd,mBAAmB;QACnB,gBAAgB;QAChB,mBAAmB;QACnB,mBAAmB;QACnB,mBAAmB;QACnB,yBAAyB,aATjB,sBAAsB,CAAA,EAAA,CAAA,CAAA;iHAarB,mBAAmB,EAAA,SAAA,EAFnB,CAAC,QAAQ,EAAE,aAAa,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC,eAAe,CAAC,EAAE,CAAC,EAAA,OAAA,EAAA,CATlH,YAAY;QACZ,cAAc;QACd,mBAAmB;QACnB,gBAAgB;QAChB,mBAAmB;QACnB,mBAAmB;QACnB,mBAAmB;QACnB,yBAAyB,CAAA,EAAA,CAAA,CAAA;2FAIhB,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAf/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,sBAAsB,CAAC;oBACtC,OAAO,EAAE,CAAC,sBAAsB,CAAC;AACjC,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,cAAc;wBACd,mBAAmB;wBACnB,gBAAgB;wBAChB,mBAAmB;wBACnB,mBAAmB;wBACnB,mBAAmB;wBACnB,yBAAyB;AAC1B,qBAAA;oBACD,SAAS,EAAE,CAAC,QAAQ,EAAE,aAAa,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC,eAAe,CAAC,EAAE,CAAC;iBACrH,CAAA;;;AChBY,MAAA,eAAe,GAAG;AAC7B,IAAA,KAAK,EAAE;AACL,QAAA,SAAS,EAAE,YAAY;AACvB,QAAA,UAAU,EAAE,MAAM;AAClB,QAAA,SAAS,EAAE,MAAM;AACjB,QAAA,SAAS,EAAE,OAAO;AAClB,QAAA,aAAa,EAAE,kBAAkB;AAClC,KAAA;AACD,IAAA,OAAO,EAAE;AACP,QAAA,SAAS,EAAE,YAAY;AACvB,QAAA,cAAc,EAAE,WAAW;AAC3B,QAAA,aAAa,EAAE,IAAI;AACnB,QAAA,kBAAkB,EAAE,WAAW;AAC/B,QAAA,UAAU,EAAE,MAAM;AAClB,QAAA,SAAS,EAAE,MAAM;AACjB,QAAA,SAAS,EAAE,OAAO;AAClB,QAAA,aAAa,EAAE,kBAAkB;AACjC,QAAA,oBAAoB,EAAE,aAAa;AACpC,KAAA;EACD;AAEW,MAAA,iBAAiB,GAAG;AAC/B,IAAA,EAAE,OAAO,EAAE,oBAAoB,EAAE,QAAQ,EAAE,eAAe,EAAE;IAC5D,EAAE,OAAO,EAAE,+BAA+B,EAAE,QAAQ,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE;IACxE,EAAE,OAAO,EAAE,+BAA+B,EAAE,QAAQ,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE;EACzE;AASI,MAAO,0BAA2B,SAAQ,wBAAwB,CAAA;AAetE,IAAA,WAAA,CAA0B,QAAkB,EAAA;AAC1C,QAAA,KAAK,EAAE,CAAC;AADgB,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;AAd5B,QAAA,IAAS,CAAA,SAAA,GAAY,KAAK,CAAC;AAKpC,QAAA,IAAI,CAAA,IAAA,GAA0B,UAAU,CAAC;AACzC,QAAA,IAAI,CAAA,IAAA,GAA0B,UAAU,CAAC;AACzC,QAAA,IAAiB,CAAA,iBAAA,GAAY,KAAK,CAAC;AACnC,QAAA,IAAS,CAAA,SAAA,GAAoB,OAAO,CAAC;AACrC,QAAA,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;AAC5B,QAAA,IAAY,CAAA,YAAA,GAAQ,CAAC,CAAC;AACtB,QAAA,IAAO,CAAA,OAAA,GAAY,KAAK,CAAC;AACzB,QAAA,IAAS,CAAA,SAAA,GAAY,IAAI,CAAC;KAIhC;IAEe,QAAQ,GAAA;QACtB,IAAI,CAAC,YAAY,EAAE,CAAC;AACpB,QAAA,IAAI,WAAW,GAAgB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC/C,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,KAAU,KAAI;AAChD,YAAA,IAAI,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;;;;;;gBAM5B,WAAW,CAAC,QAAQ,CAClB,IAAI,IAAI,CACN,KAAK,CAAC,IAAI,EAAE,EACZ,KAAK,CAAC,KAAK,EAAE,EACb,KAAK,CAAC,IAAI,EAAE,EACZ,KAAK,CAAC,IAAI,EAAE,EACZ,KAAK,CAAC,MAAM,EAAE,EACd,KAAK,CAAC,MAAM,EAAE,EACd,KAAK,CAAC,WAAW,EAAE,CACpB,EACD,EAAE,SAAS,EAAE,KAAK,EAAE,CACrB,CAAC;gBACF,IAAI,CAAC,SAAS,EAAE,CAAC;AAClB,aAAA;AACH,SAAC,CAAC,CAAC;;AAGH,QAAA,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,QAAQ;AAAE,YAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;aAC7E,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,SAAS,IAAI,IAAI,CAAC,QAAQ;AAAE,YAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;KAC1G;AAEM,IAAA,UAAU,CAAC,GAAQ,EAAA;AACxB,QAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;IAEM,UAAU,GAAA;QACf,IAAI,IAAI,CAAC,MAAM,EAAE;AACf,YAAA,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC;AAClD,SAAA;AACD,QAAA,OAAO,KAAK,CAAC;KACd;AAEM,IAAA,iBAAiB,MAAW;;uHA9DxB,0BAA0B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,QAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA1B,0BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,0BAA0B,qHAF1B,CAAC,iBAAiB,EAAE,QAAQ,CAAC,iDC1C1C,4iCAuBA,EAAA,MAAA,EAAA,CAAA,2GAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAD,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAE,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,+CAAA,EAAA,MAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,mBAAA,EAAA,YAAA,EAAA,WAAA,EAAA,MAAA,EAAA,cAAA,EAAA,8BAAA,EAAA,YAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,MAAA,EAAA,SAAA,EAAA,WAAA,EAAA,UAAA,EAAA,WAAA,EAAA,WAAA,EAAA,cAAA,CAAA,EAAA,OAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,QAAA,EAAA,aAAA,CAAA,EAAA,QAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,uBAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,KAAA,EAAA,UAAA,EAAA,YAAA,EAAA,UAAA,EAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,yBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,CAAA,mBAAA,EAAA,yBAAA,EAAA,OAAA,EAAA,KAAA,EAAA,KAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,wBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAO,4BAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,kBAAA,EAAA,oBAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDqBa,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBAPtC,SAAS;+BACE,oBAAoB,EAAA,aAAA,EAGf,iBAAiB,CAAC,IAAI,aAC1B,CAAC,iBAAiB,EAAE,QAAQ,CAAC,EAAA,QAAA,EAAA,4iCAAA,EAAA,MAAA,EAAA,CAAA,2GAAA,CAAA,EAAA,CAAA;iGAGxB,SAAS,EAAA,CAAA;sBAAxB,KAAK;gBACU,IAAI,EAAA,CAAA;sBAAnB,KAAK;gBAEU,QAAQ,EAAA,CAAA;sBAAvB,KAAK;;;MEpBK,uBAAuB,CAAA;;oHAAvB,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;qHAAvB,uBAAuB,EAAA,YAAA,EAAA,CAdnB,0BAA0B,CAAA,EAAA,OAAA,EAAA,CAGvC,mBAAmB;QACnB,YAAY;QACZ,mBAAmB;QACnB,cAAc;QACd,gBAAgB;QAChB,uBAAuB;QACvB,uBAAuB;QACvB,yBAAyB,aATjB,0BAA0B,CAAA,EAAA,CAAA,CAAA;AAazB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,aAFvB,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC,eAAe,CAAC,EAAE,CAAC,YATzF,mBAAmB;QACnB,YAAY;QACZ,mBAAmB;QACnB,cAAc;QACd,gBAAgB;QAChB,uBAAuB;QACvB,uBAAuB;QACvB,yBAAyB,CAAA,EAAA,CAAA,CAAA;2FAIhB,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBAfnC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,0BAA0B,CAAC;oBAC1C,OAAO,EAAE,CAAC,0BAA0B,CAAC;AACrC,oBAAA,OAAO,EAAE;wBACP,mBAAmB;wBACnB,YAAY;wBACZ,mBAAmB;wBACnB,cAAc;wBACd,gBAAgB;wBAChB,uBAAuB;wBACvB,uBAAuB;wBACvB,yBAAyB;AAC1B,qBAAA;AACD,oBAAA,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC,eAAe,CAAC,EAAE,CAAC;iBAC5F,CAAA;;;MCjBY,kBAAkB,CAAA;IAC7B,WAGS,CAAA,IAWN,EACmB,WAA6C,EAAA;AAZ1D,QAAA,IAAI,CAAA,IAAA,GAAJ,IAAI,CAWV;AACmB,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAAkC;KAC/D;IAEG,MAAM,GAAA;AACX,QAAA,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACnB;AAEM,IAAA,KAAK,CAAC,KAAc,EAAA;AACzB,QAAA,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KAC/B;IAEM,OAAO,GAAA;AACZ,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;KAClB;IAGM,KAAK,GAAA;AACV,QAAA,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACnB;;AAlCU,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,kBAGnB,eAAe,EAAA,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAAb,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAHd,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,kBAAkB,qGCV/B,66BAoBA,EAAA,MAAA,EAAA,CAAA,0SAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,6GAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDVa,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAP9B,SAAS;AACS,YAAA,IAAA,EAAA,CAAA,EAAA,eAAA,EAAA,uBAAuB,CAAC,MAAM,EAAA,QAAA,EACrC,YAAY,EAGP,aAAA,EAAA,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,66BAAA,EAAA,MAAA,EAAA,CAAA,0SAAA,CAAA,EAAA,CAAA;;;8BAIlC,QAAQ;;8BACR,MAAM;+BAAC,eAAe,CAAA;;8BAatB,QAAQ;;yBAgBJ,KAAK,EAAA,CAAA;sBADX,YAAY;uBAAC,aAAa,CAAA;;;ME5BhB,gBAAgB,CAAA;IAC3B,WAA2B,CAAA,MAAiB,EAAU,SAA2B,EAAA;AAAtD,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;AAAU,QAAA,IAAS,CAAA,SAAA,GAAT,SAAS,CAAkB;AAC1E,QAAA,IAAS,CAAA,SAAA,GAAuC,EAAE,CAAC;KAD2B;AAGrF;;;;;;AAMG;AACI,IAAA,IAAI,CAAC,IAAS,EAAE,SAAiB,GAAA,IAAI,EAAE,QAA0B,EAAA;AACtE,QAAA,IAAI,CAAC,SAAS;YAAE,SAAS,GAAG,kBAAkB,CAAC;QAE/C,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAExB,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CACjB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAA,MAAA,CAAA,MAAA,CAAA,EACxB,SAAS,EAAE,KAAK,EAChB,IAAI,EAAE,IAAI,EACV,UAAU,EAAE,qBAAqB,EACjC,YAAY,EAAE,IAAI,EAAA,EACf,QAAQ,CAAA,CACX,CACH,CAAC;QACF,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KAC9E;AAED;;;AAGG;AACI,IAAA,SAAS,CAAC,IAAS,EAAA;QACxB,IAAI,CAAC,gBAAgB,EAAE,CAAC;AACxB,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACtD,QAAA,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;KACtB;AAED;;AAEG;IACI,KAAK,GAAA;QACV,IAAI,CAAC,gBAAgB,EAAE,CAAC;AACxB,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AAClD,QAAA,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;KACtB;AAED;;AAEG;IACI,gBAAgB,GAAA;QACrB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,KAAK,KAAI;YACvC,IAAI,MAAM,CAAC,QAAQ,EAAE,kCAA0B;gBAC7C,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AACjC,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;;;;AAMD;;;;;AAKG;IACI,WAAW,CAAC,QAAgB,EAAE,MAAe,EAAA;QAClD,OAAO,IAAI,CAAC,IAAI,CAAC;AACf,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,OAAO,EAAE,QAAQ;YACjB,KAAK,EAAE,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,iBAAiB,CAAC;AAC5D,YAAA,IAAI,EAAE,SAAS;AACf,YAAA,IAAI,EAAE,MAAM;AACZ,YAAA,KAAK,EAAE,cAAc;YACrB,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,kBAAkB,CAAC;AAC1D,SAAA,CAAC,CAAC;KACJ;AAED;;;;;AAKG;IACI,SAAS,CAAC,QAAgB,EAAE,MAAe,EAAA;QAChD,OAAO,IAAI,CAAC,IAAI,CAAC;AACf,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,OAAO,EAAE,QAAQ;YACjB,KAAK,EAAE,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC;AAC1D,YAAA,IAAI,EAAE,OAAO;AACb,YAAA,IAAI,EAAE,SAAS;AACf,YAAA,KAAK,EAAE,cAAc;YACrB,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,kBAAkB,CAAC;AAC1D,SAAA,CAAC,CAAC;KACJ;AAED;;;;;AAKG;IACI,SAAS,CAAC,QAAgB,EAAE,MAAe,EAAA;QAChD,OAAO,IAAI,CAAC,IAAI,CAAC;AACf,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,OAAO,EAAE,QAAQ;YACjB,KAAK,EAAE,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC;AAC1D,YAAA,IAAI,EAAE,OAAO;AACb,YAAA,IAAI,EAAE,OAAO;AACb,YAAA,KAAK,EAAE,aAAa;YACpB,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,kBAAkB,CAAC;AAC1D,SAAA,CAAC,CAAC;KACJ;AAED;;;;;AAKG;IACI,WAAW,CAAC,QAAgB,EAAE,MAAe,EAAA;QAClD,OAAO,IAAI,CAAC,IAAI,CAAC;AACf,YAAA,SAAS,EAAE,IAAI;AACf,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,OAAO,EAAE,QAAQ;YACjB,KAAK,EAAE,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,mBAAmB,CAAC;AAC9D,YAAA,IAAI,EAAE,OAAO;AACb,YAAA,IAAI,EAAE,MAAM;AACZ,YAAA,KAAK,EAAE,cAAc;YACrB,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,gBAAgB,CAAC;YACvD,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,gBAAgB,CAAC;AACvD,SAAA,CAAC,CAAC;KACJ;AAED;;;;;AAKG;IACI,UAAU,CAAC,QAAgB,EAAE,MAAe,EAAA;AACjD,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,IAAI,EAAE,EAAE,EAAE,wBAAwB,CAAC,CAAC;KACxF;;6GAhJU,gBAAgB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAL,IAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,cAFf,MAAM,EAAA,CAAA,CAAA;2FAEP,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAH5B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;MCYY,wBAAwB,CAAA;IAGnC,WAAmD,CAAA,IAAS,EAAU,aAA+B,EAAA;AAAlD,QAAA,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAK;AAAU,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAkB;KAAI;IAElG,YAAY,GAAA;AACjB,QAAA,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KAC5B;IAEM,WAAW,GAAA;QAChB,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC3C;;AAXU,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,kBAGR,eAAe,EAAA,EAAA,EAAA,KAAA,EAAAgB,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAH/B,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,wBAAwB,EAlBzB,QAAA,EAAA,sBAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA;;;;;;;;;;;;;;;;AAgBT,EAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAf,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,qDAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAW,kBAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,OAAA,EAAA,OAAA,EAAA,MAAA,EAAA,MAAA,EAAA,YAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAV,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,WAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FAEU,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBApBpC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,sBAAsB;AAChC,oBAAA,QAAQ,EAAE,CAAA;;;;;;;;;;;;;;;;AAgBT,EAAA,CAAA;iBACF,CAAA;;;8BAIqB,MAAM;+BAAC,eAAe,CAAA;;;;MCf/B,mBAAmB,CAAA;;AAE9B,IAAA,WAAA,CAA2B,IAAgB,EAAA;AAAhB,QAAA,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;KAAI;AAExC,IAAA,cAAc,CAAC,IAAY,EAAA;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,CAAiB,cAAA,EAAA,IAAI,CAAO,KAAA,CAAA,CAAC,CAAC;KACjE;;gHANU,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAP,IAAA,CAAA,UAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,cADN,MAAM,EAAA,CAAA,CAAA;2FACnB,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAD/B,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAA;;MA2BrB,mBAAmB,CAAA;;gHAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,YAhBpB,eAAe,CAAA,EAAA,CAAA,CAAA;AAgBd,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,EAfnB,SAAA,EAAA;AACT,QAAA;AACE,YAAA,OAAO,EAAE,gBAAgB;YACzB,QAAQ,EAAE,eAAe,CAAC;AACxB,gBAAA,cAAc,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;AAC5B,gBAAA,WAAW,EAAE,IAAI;AACjB,gBAAA,YAAY,EAAE,IAAI;;AAElB,gBAAA,oBAAoB,EAAE,IAAI;gBAC1B,QAAQ,EAAE,CAAC,SAAS,EAAE;aACvB,CAAC;AACH,SAAA;AACD,QAAA,EAAE,OAAO,EAAE,gBAAgB,EAAE,QAAQ,EAAE,mBAAmB,EAAE;AAC7D,KAAA,EAAA,OAAA,EAAA,CAdS,eAAe,CAAA,EAAA,CAAA,CAAA;2FAgBd,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAjB/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,eAAe,CAAC;AAC1B,oBAAA,SAAS,EAAE;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,gBAAgB;4BACzB,QAAQ,EAAE,eAAe,CAAC;AACxB,gCAAA,cAAc,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;AAC5B,gCAAA,WAAW,EAAE,IAAI;AACjB,gCAAA,YAAY,EAAE,IAAI;;AAElB,gCAAA,oBAAoB,EAAE,IAAI;gCAC1B,QAAQ,EAAE,CAAC,SAAS,EAAE;6BACvB,CAAC;AACH,yBAAA;AACD,wBAAA,EAAE,OAAO,EAAE,gBAAgB,EAAE,QAAQ,EAAE,mBAAmB,EAAE;AAC7D,qBAAA;iBACF,CAAA;;;MCAY,eAAe,CAAA;;4GAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAf,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,EAJX,YAAA,EAAA,CAAA,kBAAkB,EAAE,wBAAwB,aAdzD,YAAY;QACZ,WAAW;QAEX,cAAc;QACd,eAAe;QACf,eAAe;QACf,aAAa;QACb,kBAAkB;QAElB,eAAe;QAEf,eAAe;QACf,mBAAmB,CAAA,EAAA,OAAA,EAAA,CAGX,kBAAkB,EAAE,wBAAwB,CAAA,EAAA,CAAA,CAAA;AAG3C,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,YAlBxB,YAAY;QACZ,WAAW;QAEX,cAAc;QACd,eAAe;QACf,eAAe;QACf,aAAa;QACb,kBAAkB;QAElB,eAAe;QAEf,eAAe;QACf,mBAAmB,CAAA,EAAA,CAAA,CAAA;2FAMV,eAAe,EAAA,UAAA,EAAA,CAAA;kBApB3B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,WAAW;wBAEX,cAAc;wBACd,eAAe;wBACf,eAAe;wBACf,aAAa;wBACb,kBAAkB;wBAElB,eAAe;wBAEf,eAAe;wBACf,mBAAmB;AACpB,qBAAA;AACD,oBAAA,YAAY,EAAE,CAAC,kBAAkB,EAAE,wBAAwB,CAAC;AAC5D,oBAAA,OAAO,EAAE,CAAC,kBAAkB,EAAE,wBAAwB,CAAC;oBACvD,eAAe,EAAE,CAAC,kBAAkB,CAAC;iBACtC,CAAA;;;MC3BY,0BAA0B,CAAA;AANvC,IAAA,WAAA,GAAA;AAOS,QAAA,IAAc,CAAA,cAAA,GAAG,KAAK,CAAC;AAmBrB,QAAA,IAAA,CAAA,QAAQ,GAAY,IAAI,CAAC,cAAc,CAAC;KAClD;;uHArBY,0BAA0B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA1B,0BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,0BAA0B,6JCTvC,snBAgBA,EAAA,MAAA,EAAA,CAAA,ygBAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,aAAA,EAAA,gBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,UAAA,EAAA,YAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,uBAAA,EAAA,QAAA,EAAA,4BAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,gBAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,4BAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDPa,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBANtC,SAAS;+BACE,qBAAqB,EAAA,aAAA,EAGhB,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,snBAAA,EAAA,MAAA,EAAA,CAAA,ygBAAA,CAAA,EAAA,CAAA;8BAQrC,KAAK,EAAA,CAAA;sBADJ,KAAK;gBAON,WAAW,EAAA,CAAA;sBADV,KAAK;gBAON,OAAO,EAAA,CAAA;sBADN,KAAK;gBAGG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;;;MEnBK,uBAAuB,CAAA;;oHAAvB,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,iBAJnB,0BAA0B,CAAA,EAAA,OAAA,EAAA,CAE/B,YAAY,EAAE,kBAAkB,aADhC,0BAA0B,CAAA,EAAA,CAAA,CAAA;qHAGzB,uBAAuB,EAAA,OAAA,EAAA,CAFxB,YAAY,EAAE,kBAAkB,CAAA,EAAA,CAAA,CAAA;2FAE/B,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBALnC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,0BAA0B,CAAC;oBAC1C,OAAO,EAAE,CAAC,0BAA0B,CAAC;AACrC,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,kBAAkB,CAAC;iBAC5C,CAAA;;;MCUY,8BAA8B,CAAA;AAIzC,IAAA,WAAA,CAAoB,OAAqC,EAAA;AAArC,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAA8B;AAHzD,QAAA,IAAM,CAAA,MAAA,GAAG,IAAI,CAAC;AAwByB,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,YAAY,EAAU,CAAC;KArBnB;AAI7D,IAAA,IAAI,KAAK,GAAA;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IAED,IACI,KAAK,CAAC,KAAoB,EAAA;AAC5B,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACpB,QAAA,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KACzB;IAED,IAAoC,KAAK,CAAC,KAAa,EAAA;QACrD,IAAI,CAAC,KAAK,EAAE;YACV,KAAK,GAAG,GAAG,CAAC;AACb,SAAA;QAED,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;KACpC;AAQD,IAAA,KAAK,CAAC,KAAU,EAAA;QACd,MAAM,EAAE,GAAG,yBAAyB,CAAC;QACrC,MAAM,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAE5B,QAAA,IAAI,IAAI,EAAE;YACR,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACjC,SAAA;;;AAID,QAAA,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,CAAA,KAAA,EAAQ,IAAI,CAAC,aAAa,CAAA,EAAA,CAAI,EAAE,GAAG,CAAC,CAAC;;QAE/D,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAE7E,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,GAAG,GAAG,CAAC;AACf,SAAA;QACD,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,GAAG,IAAI,CAAC;AAChB,SAAA;;AAGD,QAAA,IAAI,CAAC,MAAM,GAAG,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,OAAO,CAAC;;;AAI/D,QAAA,IAAI,IAAI,CAAC,+BAA+B,CAAC,KAAK,CAAC,EAAE;AAC/C,YAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACrB,SAAA;;AAGD,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC7B;IAGD,OAAO,GAAA;AACL;;AAEG;AACH,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAE9B,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC;KACvD;IAGD,OAAO,GAAA;QACL,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAED,SAAS,CAAC,KAAU,EAAA,GAAU;AAE9B;;;AAGG;AACH,IAAA,UAAU,CAAC,KAAU,EAAA;AACnB,QAAA,IAAI,OAAO,KAAK,IAAI,QAAQ,EAAE;AAC5B,YAAA,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;AACzB,YAAA,IAAI,KAAK,EAAE;gBACT,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACjC,aAAA;AACF,SAAA;AACD,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACpB,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC/B;AAED,IAAA,gBAAgB,CAAC,EAAwB,EAAA;AACvC,QAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACrB;AAED,IAAA,iBAAiB,MAAK;AAEtB,IAAA,+BAA+B,CAAC,KAAU,EAAA;QACxC,OAAO,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;KACvC;AAEO,IAAA,WAAW,CAAC,KAAoB,EAAA;QACtC,IAAI,KAAK,KAAK,IAAI,EAAE;YAClB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;YACtC,OAAO;AACR,SAAA;;;;;;QAQD,MAAM,CAAC,iBAAiB,EAAE,aAAa,CAAC,GAAG,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AACjG,QAAA,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;;AAGnC,QAAA,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;QAErD,OAAO,GAAG,OAAO,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC;QACpE,OAAO,GAAG,OAAO,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC;;QAEpE,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,GAAG,GAAG,CAAC;AACf,SAAA;QACD,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,GAAG,IAAI,CAAC;AAChB,SAAA;;QAED,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE;AAC3B,YAAA,IAAI,MAAc,CAAC;AACnB,YAAA,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;YACxD,IAAI,MAAM,IAAI,CAAC,EAAE;gBACf,OAAO,GAAG,MAAM,CAAC;AAClB,aAAA;iBAAM,IAAI,MAAM,IAAI,CAAC,EAAE;gBACtB,OAAO,GAAG,MAAM,CAAC;gBACjB,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,cAAc,EAAE,CAAC;AAChF,aAAA;AAAM,iBAAA;AACL,gBAAA,OAAO,GAAG,MAAM,CAAC,cAAc,EAAE,CAAC;AACnC,aAAA;YACD,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;AAChD,SAAA;;AAGD,QAAA,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,uBAAuB,EAAE,iBAAiB,CAAC,CAAC;;AAG/F,QAAA,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;AACpG,SAAA;QAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC;KAChD;IAEO,aAAa,GAAA;QACnB,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC;AAE/C,QAAA,IAAI,IAAI,CAAC,+BAA+B,CAAC,KAAK,CAAC,EAAE;YAC/C,OAAO;AACR,SAAA;AAED,QAAA,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,CAAA,KAAA,EAAQ,IAAI,CAAC,aAAa,CAAA,EAAA,CAAI,EAAE,GAAG,CAAC,CAAC;QAC/D,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAE7E,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,GAAG,GAAG,CAAC;AACf,SAAA;QACD,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,GAAG,IAAI,CAAC;AAChB,SAAA;QAED,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;AAC3C,QAAA,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;AAChD,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;AACvC,SAAA;KACF;;2HAxLU,8BAA8B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA9B,8BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,8BAA8B,EAZ9B,QAAA,EAAA,8BAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,KAAA,EAAA,CAAA,uBAAA,EAAA,OAAA,CAAA,EAAA,MAAA,EAAA,QAAA,EAAA,SAAA,EAAA,WAAA,EAAA,EAAA,OAAA,EAAA,EAAA,WAAA,EAAA,6BAAA,EAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,OAAA,EAAA,4BAAA,EAAA,MAAA,EAAA,WAAA,EAAA,OAAA,EAAA,WAAA,EAAA,EAAA,EAAA,SAAA,EAAA;AACT,QAAA;AACE,YAAA,OAAO,EAAE,wBAAwB;AACjC,YAAA,WAAW,EAAE,8BAA8B;AAC5C,SAAA;AACD,QAAA;AACE,YAAA,OAAO,EAAE,iBAAiB;AAC1B,YAAA,WAAW,EAAE,UAAU,CAAC,MAAM,8BAA8B,CAAC;AAC7D,YAAA,KAAK,EAAE,IAAI;AACZ,SAAA;AACF,KAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAEU,8BAA8B,EAAA,UAAA,EAAA,CAAA;kBAd1C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,8BAA8B;AACxC,oBAAA,SAAS,EAAE;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,wBAAwB;AACjC,4BAAA,WAAW,EAAgC,8BAAA;AAC5C,yBAAA;AACD,wBAAA;AACE,4BAAA,OAAO,EAAE,iBAAiB;AAC1B,4BAAA,WAAW,EAAE,UAAU,CAAC,oCAAoC,CAAC;AAC7D,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA;AACF,qBAAA;iBACF,CAAA;iGAcK,KAAK,EAAA,CAAA;sBADR,KAAK;uBAAC,OAAO,CAAA;gBAMsB,KAAK,EAAA,CAAA;sBAAxC,KAAK;uBAAC,uBAAuB,CAAA;gBAOS,WAAW,EAAA,CAAA;sBAAjD,MAAM;uBAAC,6BAA6B,CAAA;gBAEpB,MAAM,EAAA,CAAA;sBAAtB,KAAK;uBAAC,QAAQ,CAAA;gBAEf,SAAS,EAAA,CAAA;sBADR,KAAK;uBAAC,WAAW,CAAA;gBAIlB,KAAK,EAAA,CAAA;sBADJ,YAAY;uBAAC,OAAO,EAAE,CAAC,qBAAqB,CAAC,CAAA;gBAoC9C,OAAO,EAAA,CAAA;sBADN,YAAY;uBAAC,MAAM,CAAA;gBAWpB,OAAO,EAAA,CAAA;sBADN,YAAY;uBAAC,OAAO,CAAA;;;ACrFjB,MAAO,sBAAuB,SAAQ,wBAAwB,CAAA;AASlE,IAAA,WAAA,GAAA;AACE,QAAA,KAAK,EAAE,CAAC;AARH,QAAA,IAAS,CAAA,SAAA,GAAG,GAAG,CAAC;KAStB;AAED,IAAA,iBAAiB,MAAW;;mHAbjB,sBAAsB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,sBAAsB,oICVnC,4wCAgCA,EAAA,MAAA,EAAA,CAAA,+EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAD,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,+CAAA,EAAA,MAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,+CAAA,EAAA,MAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAa,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,4BAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,kBAAA,EAAA,oBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,8BAAA,EAAA,QAAA,EAAA,8BAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,uBAAA,EAAA,QAAA,EAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,6BAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDtBa,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBANlC,SAAS;+BACE,iBAAiB,EAAA,aAAA,EAGZ,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,4wCAAA,EAAA,MAAA,EAAA,CAAA,+EAAA,CAAA,EAAA,CAAA;0EAI9B,SAAS,EAAA,CAAA;sBADf,KAAK;gBAIC,MAAM,EAAA,CAAA;sBADZ,KAAK;;;MELK,qBAAqB,CAAA;;kHAArB,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,YAFtB,gBAAgB,EAAE,mBAAmB,CADrC,EAAA,OAAA,EAAA,CAAA,gBAAgB,EAAE,mBAAmB,CAAA,EAAA,CAAA,CAAA;AAGpC,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,YAFtB,gBAAgB,EAAE,mBAAmB,EADrC,gBAAgB,EAAE,mBAAmB,CAAA,EAAA,CAAA,CAAA;2FAGpC,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBALjC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE,EAAE;AAChB,oBAAA,OAAO,EAAE,CAAC,gBAAgB,EAAE,mBAAmB,CAAC;AAChD,oBAAA,OAAO,EAAE,CAAC,gBAAgB,EAAE,mBAAmB,CAAC;iBACjD,CAAA;;;MCiBY,mBAAmB,CAAA;;gHAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,EAZf,YAAA,EAAA,CAAA,sBAAsB,EAAE,8BAA8B,aAGnE,YAAY;QACZ,qBAAqB;QACrB,cAAc;QACd,mBAAmB;QACnB,aAAa;QACb,yBAAyB,CAAA,EAAA,OAAA,EAAA,CAPjB,sBAAsB,EAAE,8BAA8B,CAAA,EAAA,CAAA,CAAA;AAWrD,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,EAFnB,SAAA,EAAA,CAAC,WAAW,CAAC,YAPtB,YAAY;QACZ,qBAAqB;QACrB,cAAc;QACd,mBAAmB;QACnB,aAAa;QACb,yBAAyB,CAAA,EAAA,CAAA,CAAA;2FAIhB,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAb/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE,CAAC,sBAAsB,EAAE,8BAA8B,CAAC;AACtE,oBAAA,OAAO,EAAE,CAAC,sBAAsB,EAAE,8BAA8B,CAAC;AACjE,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,qBAAqB;wBACrB,cAAc;wBACd,mBAAmB;wBACnB,aAAa;wBACb,yBAAyB;AAC1B,qBAAA;oBACD,SAAS,EAAE,CAAC,WAAW,CAAC;iBACzB,CAAA;;;ACdK,MAAO,uBAAwB,SAAQ,wBAAwB,CAAA;AAOnE,IAAA,WAAA,GAAA;AACE,QAAA,KAAK,EAAE,CAAC;AANH,QAAA,IAAS,CAAA,SAAA,GAAG,GAAG,CAAC;KAOtB;AAED,IAAA,iBAAiB,MAAW;;oHAXjB,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,uBAAuB,qICVpC,kpCA4BA,EAAA,MAAA,EAAA,CAAA,gFAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAlB,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,iGAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,+CAAA,EAAA,MAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,+CAAA,EAAA,MAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAa,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,4BAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,kBAAA,EAAA,oBAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDlBa,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBANnC,SAAS;+BACE,kBAAkB,EAAA,aAAA,EAGb,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,kpCAAA,EAAA,MAAA,EAAA,CAAA,gFAAA,CAAA,EAAA,CAAA;0EAI9B,SAAS,EAAA,CAAA;sBADf,KAAK;gBAIC,MAAM,EAAA,CAAA;sBADZ,KAAK;;;MESK,oBAAoB,CAAA;;iHAApB,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;kHAApB,oBAAoB,EAAA,YAAA,EAAA,CAXhB,uBAAuB,CAAA,EAAA,OAAA,EAAA,CAGpC,YAAY;QACZ,qBAAqB;QACrB,cAAc;QACd,mBAAmB;QACnB,aAAa;QACb,yBAAyB,aAPjB,uBAAuB,CAAA,EAAA,CAAA,CAAA;AAUtB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,YAR7B,YAAY;QACZ,qBAAqB;QACrB,cAAc;QACd,mBAAmB;QACnB,aAAa;QACb,yBAAyB,CAAA,EAAA,CAAA,CAAA;2FAGhB,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAZhC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,uBAAuB,CAAC;oBACvC,OAAO,EAAE,CAAC,uBAAuB,CAAC;AAClC,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,qBAAqB;wBACrB,cAAc;wBACd,mBAAmB;wBACnB,aAAa;wBACb,yBAAyB;AAC1B,qBAAA;iBACF,CAAA;;;ACRK,MAAO,uBAAwB,SAAQ,wBAAwB,CAAA;AAsCnE,IAAA,WAAA,GAAA;AACE,QAAA,KAAK,EAAE,CAAC;AAjCV,QAAA,IAAQ,CAAA,QAAA,GAAY,IAAI,CAAC;AAGzB,QAAA,IAAa,CAAA,aAAA,GAAuB,QAAQ,CAAC;AAG7C,QAAA,IAAI,CAAA,IAAA,GAAW,qBAAqB,CAAC;AAGrC,QAAA,IAAO,CAAA,OAAA,GAAY,KAAK,CAAC;AAMzB,QAAA,IAAa,CAAA,aAAA,GAAY,KAAK,CAAC;AAe/B,QAAA,IAAS,CAAA,SAAA,GAAW,QAAQ,CAAC;KAI5B;IAEQ,QAAQ,GAAA;AACf,QAAA,mBAAmB,CAAC,IAAI,CAAC,gBAAgB,EAAE,kBAAkB,CAAC,CAAC;AAC/D,QAAA,mBAAmB,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;KAC1C;AAES,IAAA,iBAAiB,MAAK;;oHA/CrB,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,uBAAuB,qXCdpC,y4BAmBA,EAAA,MAAA,EAAA,CAAA,sPAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAf,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,QAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAU,4BAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,kBAAA,EAAA,oBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAX,IAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDLa,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBANnC,SAAS;+BACE,kBAAkB,EAAA,aAAA,EAGb,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,y4BAAA,EAAA,MAAA,EAAA,CAAA,sPAAA,CAAA,EAAA,CAAA;0EAKrC,KAAK,EAAA,CAAA;sBADJ,KAAK;gBAIN,QAAQ,EAAA,CAAA;sBADP,KAAK;gBAIN,aAAa,EAAA,CAAA;sBADZ,KAAK;gBAIN,IAAI,EAAA,CAAA;sBADH,KAAK;gBAIN,OAAO,EAAA,CAAA;sBADN,KAAK;gBAIN,UAAU,EAAA,CAAA;sBADT,KAAK;gBAIN,aAAa,EAAA,CAAA;sBADZ,KAAK;gBAIN,EAAE,EAAA,CAAA;sBADD,KAAK;gBAIN,KAAK,EAAA,CAAA;sBADJ,KAAK;gBAIN,gBAAgB,EAAA,CAAA;sBADf,KAAK;gBAIN,aAAa,EAAA,CAAA;sBADZ,KAAK;gBAIN,SAAS,EAAA,CAAA;sBADR,KAAK;;;MExBK,oBAAoB,CAAA;;iHAApB,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;kHAApB,oBAAoB,EAAA,YAAA,EAAA,CAhBhB,uBAAuB,CAAA,EAAA,OAAA,EAAA,CAGpC,mBAAmB;QACnB,YAAY;QACZ,WAAW;QACX,cAAc;QACd,yBAAyB,aANjB,uBAAuB,CAAA,EAAA,CAAA,CAAA;AAetB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,EAPpB,SAAA,EAAA;AACT,QAAA;AACE,YAAA,OAAO,EAAE,yBAAyB;AAClC,YAAA,QAAQ,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE;AAC/B,SAAA;KACF,EAAA,OAAA,EAAA,CAXC,mBAAmB;QACnB,YAAY;QACZ,WAAW;QACX,cAAc;QACd,yBAAyB,CAAA,EAAA,CAAA,CAAA;2FAShB,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAjBhC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,uBAAuB,CAAC;oBACvC,OAAO,EAAE,CAAC,uBAAuB,CAAC;AAClC,oBAAA,OAAO,EAAE;wBACP,mBAAmB;wBACnB,YAAY;wBACZ,WAAW;wBACX,cAAc;wBACd,yBAAyB;AAC1B,qBAAA;AACD,oBAAA,SAAS,EAAE;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,yBAAyB;AAClC,4BAAA,QAAQ,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE;AAC/B,yBAAA;AACF,qBAAA;iBACF,CAAA;;;ACXK,MAAO,0BAA2B,SAAQ,wBAAwB,CAAA;AAkBtE,IAAA,WAAA,GAAA;AACE,QAAA,KAAK,EAAE,CAAC;AAjBV,QAAA,IAAQ,CAAA,QAAA,GAAY,KAAK,CAAC;AAS1B,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,YAAY,EAAE,CAAC;AAGrC,QAAA,IAAI,CAAA,IAAA,GAAW,EAAE,CAAC;AAElB,QAAA,IAAW,CAAA,WAAA,GAAU,EAAE,CAAC;KAIvB;IAEQ,QAAQ,GAAA;;QACf,uBAAuB,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAEzE,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE;YACzC,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AACrD,SAAA;QAED,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,IAAW,KAAI;AAC/C,YAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AAC1B,SAAC,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,CAAA,EAAA,GAAA,IAAI,CAAC,QAAQ,EAAE,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAC/C,SAAA;KACF;IAED,KAAK,GAAA;AACH,QAAA,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;KACzB;AAED,IAAA,iBAAiB,MAAW;;uHA1CjB,0BAA0B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA1B,0BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,0BAA0B,2PCbvC,8tBAqBA,EAAA,MAAA,EAAA,CAAA,2BAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAD,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,QAAA,EAAA,YAAA,EAAA,YAAA,EAAA,UAAA,EAAA,WAAA,EAAA,WAAA,EAAA,eAAA,EAAA,cAAA,EAAA,WAAA,EAAA,kBAAA,EAAA,aAAA,EAAA,kBAAA,EAAA,SAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,wBAAA,EAAA,cAAA,EAAA,QAAA,EAAA,SAAA,EAAA,aAAA,EAAA,YAAA,EAAA,WAAA,EAAA,kBAAA,EAAA,UAAA,EAAA,cAAA,EAAA,YAAA,EAAA,UAAA,EAAA,UAAA,EAAA,sBAAA,EAAA,aAAA,EAAA,WAAA,EAAA,YAAA,EAAA,UAAA,EAAA,aAAA,EAAA,eAAA,EAAA,oBAAA,EAAA,WAAA,EAAA,eAAA,EAAA,kBAAA,EAAA,WAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,OAAA,EAAA,IAAA,EAAA,aAAA,EAAA,UAAA,EAAA,mBAAA,EAAA,YAAA,EAAA,iBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,OAAA,EAAA,KAAA,EAAA,QAAA,EAAA,QAAA,EAAA,aAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAc,4BAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,kBAAA,EAAA,oBAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDRa,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBANtC,SAAS;+BACE,qBAAqB,EAAA,aAAA,EAGhB,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,8tBAAA,EAAA,MAAA,EAAA,CAAA,2BAAA,CAAA,EAAA,CAAA;0EAIrC,QAAQ,EAAA,CAAA;sBADP,KAAK;gBAIC,aAAa,EAAA,CAAA;sBADnB,KAAK;gBAIN,iBAAiB,EAAA,CAAA;sBADhB,KAAK;gBAIN,eAAe,EAAA,CAAA;sBADd,MAAM;gBAIP,IAAI,EAAA,CAAA;sBADH,KAAK;;;MENK,uBAAuB,CAAA;;oHAAvB,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;qHAAvB,uBAAuB,EAAA,YAAA,EAAA,CAXnB,0BAA0B,CAAA,EAAA,OAAA,EAAA,CAGvC,mBAAmB;QACnB,YAAY;QACZ,WAAW;QACX,kBAAkB;QAClB,eAAe;QACf,yBAAyB,aAPjB,0BAA0B,CAAA,EAAA,CAAA,CAAA;AAUzB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,YARhC,mBAAmB;QACnB,YAAY;QACZ,WAAW;QACX,kBAAkB;QAClB,eAAe;QACf,yBAAyB,CAAA,EAAA,CAAA,CAAA;2FAGhB,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBAZnC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,0BAA0B,CAAC;oBAC1C,OAAO,EAAE,CAAC,0BAA0B,CAAC;AACrC,oBAAA,OAAO,EAAE;wBACP,mBAAmB;wBACnB,YAAY;wBACZ,WAAW;wBACX,kBAAkB;wBAClB,eAAe;wBACf,yBAAyB;AAC1B,qBAAA;iBACF,CAAA;;;ACNK,MAAO,kBAAmB,SAAQ,wBAAwB,CAAA;AAmB9D,IAAA,WAAA,GAAA;AACE,QAAA,KAAK,EAAE,CAAC;AAZV,QAAA,IAAW,CAAA,WAAA,GAAa,KAAK,CAAC;AAG9B,QAAA,IAAU,CAAA,UAAA,GAAa,IAAI,CAAC;AAGrB,QAAA,IAAQ,CAAA,QAAA,GAAa,KAAK,CAAC;AAGlC,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,YAAY,EAAE,CAAC;KAIpC;IAEQ,QAAQ,GAAA;QACf,uBAAuB,CACrB,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,EACzD,CAAC,mBAAmB,EAAE,aAAa,EAAE,UAAU,CAAC,CACjD,CAAC;QAEF,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE;YACzC,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AACrD,SAAA;QAED,IAAI,CAAC,QAAQ,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,IAAG;AAC7C,YAAA,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,EAAE,EAAE;AACvC,gBAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACrB,aAAA;;AAED,YAAA,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,QAAQ,KAAI,KAAK,aAAL,KAAK,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAL,KAAK,CAAE,KAAK,CAAA,EAAE;AACtD,gBAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC5B,aAAA;;AAED,YAAA,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE;AACnG,gBAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAsB,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;AACjE,aAAA;AACH,SAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qCAAqC,EAAE,CAAC;QAE7C,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;IAEO,qCAAqC,GAAA;;AAC3C,QAAA,IAAI,IAAI,CAAC,UAAU,IAAI,KAAK,CAAC,OAAO,CAAC,CAAA,EAAA,GAAA,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,CAAC,EAAE;AAClE,YAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACrB,SAAA;KACF;IAEO,cAAc,GAAA;;QACpB,IAAI,IAAI,CAAC,UAAU,EAAE;AACnB,YAAA,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,IAAI,EAAC,MAAA,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,CAAA,EAAE;AAC1D,gBAAA,MAAM,IAAI,KAAK,CACb,gGAAgG,CACjG,CAAC;AACH,aAAA;AACF,SAAA;aAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;AACxB,YAAA,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,EAAE;AAClE,gBAAA,MAAM,IAAI,KAAK,CAAC,kEAAkE,CAAC,CAAC;AACrF,aAAA;AACF,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,KAAK,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,KAAK,IAAI,EAAE;AAC/E,gBAAA,MAAM,IAAI,KAAK,CAAC,gEAAgE,CAAC,CAAC;AACnF,aAAA;AACF,SAAA;KACF;IAED,eAAe,CAAC,EAAO,EAAE,EAAO,EAAA;QAC9B,IAAI,IAAI,GAAG,CAAA,EAAE,aAAF,EAAE,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAF,EAAE,CAAE,KAAK,IAAG,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC;QACrC,IAAI,IAAI,GAAG,CAAA,EAAE,aAAF,EAAE,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAF,EAAE,CAAE,KAAK,IAAG,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC;QACrC,OAAO,IAAI,KAAK,IAAI,CAAC;KACtB;AAED,IAAA,iBAAiB,MAAW;;+GAlFjB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,kBAAkB,gRCb/B,syCA2BA,EAAA,MAAA,EAAA,CAAA,yCAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAnB,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,EAAA,8BAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAQ,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,4BAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,kBAAA,EAAA,oBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAd,IAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDda,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAN9B,SAAS;+BACE,YAAY,EAAA,aAAA,EAGP,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,syCAAA,EAAA,MAAA,EAAA,CAAA,yCAAA,CAAA,EAAA,CAAA;0EAIrC,QAAQ,EAAA,CAAA;sBADP,KAAK;gBAIN,iBAAiB,EAAA,CAAA;sBADhB,KAAK;gBAIN,WAAW,EAAA,CAAA;sBADV,KAAK;gBAIN,UAAU,EAAA,CAAA;sBADT,KAAK;gBAIC,QAAQ,EAAA,CAAA;sBADd,KAAK;gBAIN,eAAe,EAAA,CAAA;sBADd,MAAM;;;MEPI,eAAe,CAAA;;4GAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;6GAAf,eAAe,EAAA,YAAA,EAAA,CAZX,kBAAkB,CAAA,EAAA,OAAA,EAAA,CAG/B,mBAAmB;QACnB,YAAY;QACZ,WAAW;QACX,eAAe;QACf,kBAAkB;QAClB,gBAAgB;QAChB,yBAAyB,aARjB,kBAAkB,CAAA,EAAA,CAAA,CAAA;AAWjB,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,YATxB,mBAAmB;QACnB,YAAY;QACZ,WAAW;QACX,eAAe;QACf,kBAAkB;QAClB,gBAAgB;QAChB,yBAAyB,CAAA,EAAA,CAAA,CAAA;2FAGhB,eAAe,EAAA,UAAA,EAAA,CAAA;kBAb3B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,kBAAkB,CAAC;oBAClC,OAAO,EAAE,CAAC,kBAAkB,CAAC;AAC7B,oBAAA,OAAO,EAAE;wBACP,mBAAmB;wBACnB,YAAY;wBACZ,WAAW;wBACX,eAAe;wBACf,kBAAkB;wBAClB,gBAAgB;wBAChB,yBAAyB;AAC1B,qBAAA;iBACF,CAAA;;;ACVK,MAAO,uBAAwB,SAAQ,wBAAwB,CAAA;AAgBnE,IAAA,WAAA,GAAA;AACE,QAAA,KAAK,EAAE,CAAC;KACT;AAED,IAAA,iBAAiB,CAAC,KAAY,EAAA;;AAC5B,QAAA,OAAO,MAAA,IAAI,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAE,CAAA,QAAQ,CAAE,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC,CAAC;KAC7F;AAED,IAAA,cAAc,CAAC,KAAY,EAAA;QACzB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAE,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC,CAAC;KAC1E;AAED,IAAA,iBAAiB,MAAW;;oHA5BjB,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,uBAAuB,iMCXpC,sWAIA,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAD,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,eAAA,EAAA,UAAA,EAAA,UAAA,EAAA,eAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,aAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,sDAAA,EAAA,QAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDOa,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBANnC,SAAS;+BACE,kBAAkB,EAAA,aAAA,EAGb,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,sWAAA,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,CAAA;0EAIrC,GAAG,EAAA,CAAA;sBADF,KAAK;gBAIN,GAAG,EAAA,CAAA;sBADF,KAAK;gBAIN,IAAI,EAAA,CAAA;sBADH,KAAK;gBAIN,UAAU,EAAA,CAAA;sBADT,KAAK;gBAIN,gBAAgB,EAAA,CAAA;sBADf,KAAK;;;MEbK,oBAAoB,CAAA;;iHAApB,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;kHAApB,oBAAoB,EAAA,YAAA,EAAA,CAJhB,uBAAuB,CAE5B,EAAA,OAAA,EAAA,CAAA,mBAAmB,EAAE,YAAY,EAAE,eAAe,CAAA,EAAA,OAAA,EAAA,CADlD,uBAAuB,CAAA,EAAA,CAAA,CAAA;AAGtB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,EAFrB,OAAA,EAAA,CAAA,mBAAmB,EAAE,YAAY,EAAE,eAAe,CAAA,EAAA,CAAA,CAAA;2FAEjD,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBALhC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,uBAAuB,CAAC;oBACvC,OAAO,EAAE,CAAC,uBAAuB,CAAC;AAClC,oBAAA,OAAO,EAAE,CAAC,mBAAmB,EAAE,YAAY,EAAE,eAAe,CAAC;iBAC9D,CAAA;;;ACAK,MAAO,wBAAyB,SAAQ,wBAAwB,CAAA;AAIpE,IAAA,WAAA,GAAA;AACE,QAAA,KAAK,EAAE,CAAC;KACT;AAED,IAAA,iBAAiB,MAAW;;qHARjB,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAxB,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,wBAAwB,gHCVrC,mKAGA,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAF,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDOa,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBANpC,SAAS;+BACE,mBAAmB,EAAA,aAAA,EAGd,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,mKAAA,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,CAAA;0EAIrC,OAAO,EAAA,CAAA;sBADN,KAAK;;;MEAK,qBAAqB,CAAA;;kHAArB,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;mHAArB,qBAAqB,EAAA,YAAA,EAAA,CAJjB,wBAAwB,CAE7B,EAAA,OAAA,EAAA,CAAA,mBAAmB,EAAE,YAAY,EAAE,oBAAoB,CAAA,EAAA,OAAA,EAAA,CADvD,wBAAwB,CAAA,EAAA,CAAA,CAAA;AAGvB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,EAFtB,OAAA,EAAA,CAAA,mBAAmB,EAAE,YAAY,EAAE,oBAAoB,CAAA,EAAA,CAAA,CAAA;2FAEtD,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBALjC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,wBAAwB,CAAC;oBACxC,OAAO,EAAE,CAAC,wBAAwB,CAAC;AACnC,oBAAA,OAAO,EAAE,CAAC,mBAAmB,EAAE,YAAY,EAAE,oBAAoB,CAAC;iBACnE,CAAA;;;ACAK,MAAO,kBAAmB,SAAQ,wBAAwB,CAAA;AAgB9D,IAAA,WAAA,GAAA;AACE,QAAA,KAAK,EAAE,CAAC;KACT;AAED,IAAA,iBAAiB,MAAW;;+GApBjB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,kBAAkB,2KCV/B,8PASA,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAF,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,eAAA,EAAA,UAAA,EAAA,UAAA,EAAA,eAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,aAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,OAAA,EAAA,CAAA,aAAA,EAAA,WAAA,EAAA,SAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDCa,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAN9B,SAAS;+BACE,YAAY,EAAA,aAAA,EAGP,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,8PAAA,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,CAAA;0EAIrC,QAAQ,EAAA,CAAA;sBADP,KAAK;gBAIN,GAAG,EAAA,CAAA;sBADF,KAAK;gBAIN,GAAG,EAAA,CAAA;sBADF,KAAK;gBAIN,IAAI,EAAA,CAAA;sBADH,KAAK;gBAIN,UAAU,EAAA,CAAA;sBADT,KAAK;;;MEZK,eAAe,CAAA;;4GAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;6GAAf,eAAe,EAAA,YAAA,EAAA,CAJX,kBAAkB,CAEvB,EAAA,OAAA,EAAA,CAAA,mBAAmB,EAAE,YAAY,EAAE,eAAe,CAAA,EAAA,OAAA,EAAA,CADlD,kBAAkB,CAAA,EAAA,CAAA,CAAA;AAGjB,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,EAFhB,OAAA,EAAA,CAAA,mBAAmB,EAAE,YAAY,EAAE,eAAe,CAAA,EAAA,CAAA,CAAA;2FAEjD,eAAe,EAAA,UAAA,EAAA,CAAA;kBAL3B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,kBAAkB,CAAC;oBAClC,OAAO,EAAE,CAAC,kBAAkB,CAAC;AAC7B,oBAAA,OAAO,EAAE,CAAC,mBAAmB,EAAE,YAAY,EAAE,eAAe,CAAC;iBAC9D,CAAA;;;MCJY,oBAAoB,CAAA;;iHAApB,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,oBAAoB,oDCNjC,EAAA,EAAA,CAAA,CAAA;2FDMa,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAJhC,SAAS;+BACE,cAAc,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA;;;MESb,iBAAiB,CAAA;;8GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,iBALb,oBAAoB,CAAA,EAAA,OAAA,EAAA,CAEzB,YAAY,EAAE,uBAAuB,gCADrC,oBAAoB,CAAA,EAAA,CAAA,CAAA;+GAInB,iBAAiB,EAAA,OAAA,EAAA,CAHlB,YAAY,EAAE,uBAAuB,EAAE,YAAY,CAAC,OAAO,EAAE,CAAA,EAAA,CAAA,CAAA;2FAG5D,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAN7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,oBAAoB,CAAC;oBACpC,OAAO,EAAE,CAAC,oBAAoB,CAAC;oBAC/B,OAAO,EAAE,CAAC,YAAY,EAAE,uBAAuB,EAAE,YAAY,CAAC,OAAO,EAAE,CAAC;oBACxE,eAAe,EAAE,CAAC,oBAAoB,CAAC;iBACxC,CAAA;;;MCNY,iBAAiB,CAAA;AAC5B,IAAA,WAAA,CAAoB,OAAgB,EAAA;AAAhB,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAS;KAAI;AACxC,IAAA,aAAa,CAAC,MAAqB,EAAA;QACjC,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;KACpC;AACD,IAAA,oBAAoB,CAAC,UAAsB,EAAE,WAA6B,EAAE,KAAuB,EAAA;QACjG,IAAI,cAAc,GAAG,IAAI,cAAc,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;;AAE5D,QAAA,UAAU,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;KACnC;IACD,sBAAsB,GAAA;AACpB,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,MAAM,EAAE,CAAC,kBAAkB,EAAE,CAAC,gBAAgB,EAAE,CAAC;KACjF;;8GAZU,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAF,IAAA,CAAA,OAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;kHAAjB,iBAAiB,EAAA,CAAA,CAAA;2FAAjB,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAD7B,UAAU;;;MCAE,iBAAiB,CAAA;AAG5B,IAAA,WAAA,GAAA;AAFQ,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,OAAO,EAAW,CAAC;KAEzB;IAEhB,IAAI,GAAA;AACF,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACzB;IAED,IAAI,GAAA;QACF,UAAU,CAAC,MAAK;AACd,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC1B,EAAE,GAAG,CAAC,CAAC;KACT;IAED,KAAK,GAAA;AACH,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;KACjE;;8GAjBU,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;kHAAjB,iBAAiB,EAAA,CAAA,CAAA;2FAAjB,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAD7B,UAAU;;;MCUE,mBAAmB,CAAA;AAe9B,IAAA,WAAA,CACU,KAAuB,EACvB,cAAiC,EACjC,cAAiC,EACjC,eAAkC,EAAA;AAHlC,QAAA,IAAK,CAAA,KAAA,GAAL,KAAK,CAAkB;AACvB,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAmB;AACjC,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAmB;AACjC,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAmB;AAjBnC,QAAA,IAAQ,CAAA,QAAA,GAAY,GAAG,CAAC;AACxB,QAAA,IAAI,CAAA,IAAA,GAAwB,aAAa,CAAC;AAE1C,QAAA,IAAe,CAAA,eAAA,GAAG,IAAI,CAAC;AACvB,QAAA,IAAsB,CAAA,sBAAA,GAAG,IAAI,CAAC;AAC9B,QAAA,IAAsB,CAAA,sBAAA,GAAY,KAAK,CAAC;KAa7C;AAEJ,IAAA,QAAQ,MAAW;IAEnB,eAAe,GAAA;;QAEb,IAAI,CAAC,4BAA4B,GAAG;YAClC,WAAW,EAAE,IAAI,CAAC,eAAe;SAClC,CAAC;QACF,IAAI,IAAI,CAAC,sBAAsB,EAAE;AAC/B,YAAA,IAAI,CAAC,4BAA4B,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,sBAAsB,EAAE,CAAC;AACtG,SAAA;;AAED,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;;QAEvF,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,CAAC,QAAiB,KAAI;;;;AAI1D,YAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;AAC7B,SAAC,CAAC,CAAC;KACJ;IACD,SAAS,GAAA;;;KAGR;AAED,IAAA,WAAW,CAAC,GAAa,EAAA;;AACvB,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,EAAE,CAAC;AAC1B,QAAA,IAAI,GAAG,IAAI,IAAI,CAAC,kBAAkB,EAAE;AAClC,YAAA,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AAChG,SAAA;KACF;;gHApDU,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAoB,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,mBAAmB,qYCbhC,yLAGA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAnB,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,mCAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,MAAA,EAAA,OAAA,EAAA,UAAA,EAAA,aAAA,CAAA,EAAA,QAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDUa,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAL/B,SAAS;+BACE,aAAa,EAAA,aAAA,EAER,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,yLAAA,EAAA,CAAA;iMAG5B,KAAK,EAAA,CAAA;sBAAb,KAAK;gBACG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBACG,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBACG,KAAK,EAAA,CAAA;sBAAb,KAAK;gBACG,eAAe,EAAA,CAAA;sBAAvB,KAAK;gBACG,sBAAsB,EAAA,CAAA;sBAA9B,KAAK;gBACG,sBAAsB,EAAA,CAAA;sBAA9B,KAAK;gBAGE,kBAAkB,EAAA,CAAA;sBADzB,SAAS;uBAAC,oBAAoB,CAAA;;;ME6FpB,gBAAgB,CAAA;;6GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;8GAAhB,gBAAgB,EAAA,YAAA,EAAA,CA7DZ,mBAAmB,CAAA,EAAA,OAAA,EAAA,CAGhC,mBAAmB;QACnB,YAAY;QACZ,wBAAwB;QACxB,aAAa;QACb,uBAAuB;QACvB,kBAAkB;QAClB,eAAe;QACf,aAAa;QACb,gBAAgB;QAChB,cAAc;QACd,aAAa;QACb,cAAc;QACd,qBAAqB;QACrB,cAAc;QACd,oBAAoB;QACpB,eAAe;QACf,qBAAqB;QACrB,cAAc;QACd,iBAAiB;QACjB,gBAAgB;QAChB,eAAe;QACf,gBAAgB;QAChB,kBAAkB;QAClB,iBAAiB;QACjB,aAAa;QACb,cAAc;QACd,iBAAiB;QACjB,aAAa;QACb,mBAAmB;QACnB,kBAAkB;QAClB,wBAAwB;QACxB,wBAAwB;QACxB,cAAc;QACd,eAAe;QACf,eAAe;QACf,gBAAgB;QAChB,gBAAgB;QAChB,oBAAoB;QACpB,iBAAiB;QACjB,aAAa;QACb,cAAc;QACd,cAAc;QACd,gBAAgB;QAChB,gBAAgB;QAChB,aAAa;QACb,aAAa;QACb,YAAY;QACZ,eAAe;QACf,YAAY;QACZ,mBAAmB;QACnB,uBAAuB;QACvB,uBAAuB;QACvB,aAAa;QACb,aAAa;QACb,cAAc,aAxDN,mBAAmB,CAAA,EAAA,CAAA,CAAA;AA4DlB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,aAFhB,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,YAxD/C,mBAAmB;QACnB,YAAY;QACZ,wBAAwB;QACxB,aAAa;QACb,uBAAuB;QACvB,kBAAkB;QAClB,eAAe;QACf,aAAa;QACb,gBAAgB;QAChB,cAAc;QACd,aAAa;QACb,cAAc;QACd,qBAAqB;QACrB,cAAc;QACd,oBAAoB;QACpB,eAAe;QACf,qBAAqB;QACrB,cAAc;QACd,iBAAiB;QACjB,gBAAgB;QAChB,eAAe;QACf,gBAAgB;QAChB,kBAAkB;QAClB,iBAAiB;QACjB,aAAa;QACb,cAAc;QACd,iBAAiB;QACjB,aAAa;QACb,mBAAmB;QACnB,kBAAkB;QAClB,wBAAwB;QACxB,wBAAwB;QACxB,cAAc;QACd,eAAe;QACf,eAAe;QACf,gBAAgB;QAChB,gBAAgB;QAChB,oBAAoB;QACpB,iBAAiB;QACjB,aAAa;QACb,cAAc;QACd,cAAc;QACd,gBAAgB;QAChB,gBAAgB;QAChB,aAAa;QACb,aAAa;QACb,YAAY;QACZ,eAAe;QACf,YAAY;QACZ,mBAAmB;QACnB,uBAAuB;QACvB,uBAAuB;QACvB,aAAa;QACb,aAAa;QACb,cAAc,CAAA,EAAA,CAAA,CAAA;2FAIL,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBA9D5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,mBAAmB,CAAC;oBACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC;AAC9B,oBAAA,OAAO,EAAE;wBACP,mBAAmB;wBACnB,YAAY;wBACZ,wBAAwB;wBACxB,aAAa;wBACb,uBAAuB;wBACvB,kBAAkB;wBAClB,eAAe;wBACf,aAAa;wBACb,gBAAgB;wBAChB,cAAc;wBACd,aAAa;wBACb,cAAc;wBACd,qBAAqB;wBACrB,cAAc;wBACd,oBAAoB;wBACpB,eAAe;wBACf,qBAAqB;wBACrB,cAAc;wBACd,iBAAiB;wBACjB,gBAAgB;wBAChB,eAAe;wBACf,gBAAgB;wBAChB,kBAAkB;wBAClB,iBAAiB;wBACjB,aAAa;wBACb,cAAc;wBACd,iBAAiB;wBACjB,aAAa;wBACb,mBAAmB;wBACnB,kBAAkB;wBAClB,wBAAwB;wBACxB,wBAAwB;wBACxB,cAAc;wBACd,eAAe;wBACf,eAAe;wBACf,gBAAgB;wBAChB,gBAAgB;wBAChB,oBAAoB;wBACpB,iBAAiB;wBACjB,aAAa;wBACb,cAAc;wBACd,cAAc;wBACd,gBAAgB;wBAChB,gBAAgB;wBAChB,aAAa;wBACb,aAAa;wBACb,YAAY;wBACZ,eAAe;wBACf,YAAY;wBACZ,mBAAmB;wBACnB,uBAAuB;wBACvB,uBAAuB;wBACvB,aAAa;wBACb,aAAa;wBACb,cAAc;AACf,qBAAA;AACD,oBAAA,SAAS,EAAE,CAAC,iBAAiB,EAAE,iBAAiB,CAAC;iBAClD,CAAA;;;MC3GY,yBAAyB,CAAA;AAMpC,IAAA,WAAA,GAAA;AAFA,QAAA,IAAK,CAAA,KAAA,GAAW,EAAE,CAAC;KAEH;AAEhB,IAAA,QAAQ,MAAK;;sHARF,yBAAyB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;0GAAzB,yBAAyB,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,eAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EACzB,WAAW,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECRxB,sDAGA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDIa,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBALrC,SAAS;+BACE,qBAAqB,EAAA,aAAA,EAEhB,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,sDAAA,EAAA,CAAA;0EAI9B,aAAa,EAAA,CAAA;sBADnB,SAAS;uBAAC,WAAW,CAAA;gBAGtB,KAAK,EAAA,CAAA;sBADJ,KAAK;;;MEFK,oBAAoB,CAAA;AALjC,IAAA,WAAA,GAAA;AASW,QAAA,IAAK,CAAA,KAAA,GAAW,EAAE,CAAC;KAO7B;;iHAXY,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,oBAAoB,EAEjB,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,OAAA,EAAA,SAAA,EAAA,OAAA,EAAA,SAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,WAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,yBAAyB,EAD5B,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,WAAW,gDCTxB,sGAGA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDKa,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBALhC,SAAS;+BACE,eAAe,EAAA,aAAA,EAEV,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,sGAAA,EAAA,CAAA;8BAGN,eAAe,EAAA,CAAA;sBAA7C,SAAS;uBAAC,WAAW,CAAA;gBAC0B,SAAS,EAAA,CAAA;sBAAxD,YAAY;uBAAC,yBAAyB,CAAA;gBAE9B,KAAK,EAAA,CAAA;sBAAb,KAAK;gBAEN,OAAO,EAAA,CAAA;sBADN,KAAK;gBAGN,OAAO,EAAA,CAAA;sBADN,KAAK;gBAGN,OAAO,EAAA,CAAA;sBADN,KAAK;;;AELF,MAAO,qBAAsB,SAAQ,wBAAwB,CAAA;AANnE,IAAA,WAAA,GAAA;;AAOkB,QAAA,IAAQ,CAAA,QAAA,GAAG,MAAM,CAAC;AAElB,QAAA,IAAM,CAAA,MAAA,GAAG,KAAK,CAAC;AAEf,QAAA,IAAW,CAAA,WAAA,GAAuB,YAAY,CAAC;AAE/C,QAAA,IAAU,CAAA,UAAA,GAAG,KAAK,CAAC;AAEnB,QAAA,IAAQ,CAAA,QAAA,GAAqB,KAAK,CAAC;AAEnC,QAAA,IAAa,CAAA,aAAA,GAAqB,QAAQ,CAAC;AAE3C,QAAA,IAAU,CAAA,UAAA,GAAG,KAAK,CAAC;AAGnC,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,YAAY,EAAO,CAAC;KAoBrC;IAfC,kBAAkB,GAAA;AAChB,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;KACnC;AAED,IAAA,eAAe,CAAC,GAA0B,EAAA;AACxC,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC1B;AAED,IAAA,IAAI,CAAC,OAAY,EAAA;QACf,IAAI,OAAO,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YAC5C,OAAO,CAAC,gBAAgB,EAAE,CAAC;AAC5B,SAAA;KACF;AAED,IAAA,iBAAiB,MAAW;;kHAnCjB,qBAAqB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;sGAArB,qBAAqB,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,QAAA,EAAA,WAAA,EAAA,aAAA,EAAA,UAAA,EAAA,YAAA,EAAA,QAAA,EAAA,UAAA,EAAA,aAAA,EAAA,eAAA,EAAA,UAAA,EAAA,YAAA,EAAA,EAAA,OAAA,EAAA,EAAA,SAAA,EAAA,WAAA,EAAA,EAAA,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,cAAA,EAAA,SAAA,EAkBf,oBAAoB,EAAA,CAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EC9BvC,87BAqBA,EAAA,MAAA,EAAA,CAAA,2BAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAF,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,EAAA,0BAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,yEAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,eAAA,EAAA,OAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,mBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,YAAA,EAAA,oBAAA,EAAA,sBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,wBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,4BAAA,EAAA,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,6BAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,6GAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDTa,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBANjC,SAAS;+BACE,gBAAgB,EAAA,aAAA,EAGX,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,87BAAA,EAAA,MAAA,EAAA,CAAA,2BAAA,CAAA,EAAA,CAAA;8BAGrB,QAAQ,EAAA,CAAA;sBAAvB,KAAK;gBAEU,MAAM,EAAA,CAAA;sBAArB,KAAK;gBAEU,WAAW,EAAA,CAAA;sBAA1B,KAAK;gBAEU,UAAU,EAAA,CAAA;sBAAzB,KAAK;gBAEU,QAAQ,EAAA,CAAA;sBAAvB,KAAK;gBAEU,aAAa,EAAA,CAAA;sBAA5B,KAAK;gBAEU,UAAU,EAAA,CAAA;sBAAzB,KAAK;gBAGN,SAAS,EAAA,CAAA;sBADR,MAAM;gBAGwC,YAAY,EAAA,CAAA;sBAA1D,eAAe;uBAAC,oBAAoB,CAAA;;;MEvB1B,2BAA2B,CAAA;;wHAA3B,2BAA2B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA3B,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,2BAA2B,6DCPxC,mEAGA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDIa,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBALvC,SAAS;+BACE,uBAAuB,EAAA,aAAA,EAElB,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,mEAAA,EAAA,CAAA;;;MEW1B,gBAAgB,CAAA;;6GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;8GAAhB,gBAAgB,EAAA,YAAA,EAAA,CAJZ,qBAAqB,EAAE,oBAAoB,EAAE,yBAAyB,EAAE,2BAA2B,CAExG,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,cAAc,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,eAAe,CAAA,EAAA,OAAA,EAAA,CADpF,qBAAqB,EAAE,oBAAoB,EAAE,yBAAyB,EAAE,2BAA2B,CAAA,EAAA,CAAA,CAAA;8GAGlG,gBAAgB,EAAA,OAAA,EAAA,CAFjB,YAAY,EAAE,cAAc,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,eAAe,CAAA,EAAA,CAAA,CAAA;2FAEnF,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAL5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,qBAAqB,EAAE,oBAAoB,EAAE,yBAAyB,EAAE,2BAA2B,CAAC;oBACnH,OAAO,EAAE,CAAC,qBAAqB,EAAE,oBAAoB,EAAE,yBAAyB,EAAE,2BAA2B,CAAC;oBAC9G,OAAO,EAAE,CAAC,YAAY,EAAE,cAAc,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,eAAe,CAAC;iBAChG,CAAA;;;MCPY,yBAAyB,CAAA;AAMpC,IAAA,WAAA,GAAA;AAFA,QAAA,IAAK,CAAA,KAAA,GAAW,EAAE,CAAC;KAEH;AAEhB,IAAA,QAAQ,MAAK;;sHARF,yBAAyB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;0GAAzB,yBAAyB,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,gBAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EACzB,WAAW,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECTxB,oFAGA,EAAA,MAAA,EAAA,CAAA,0CAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDKa,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBANrC,SAAS;+BACE,qBAAqB,EAAA,aAAA,EAGhB,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,oFAAA,EAAA,MAAA,EAAA,CAAA,0CAAA,CAAA,EAAA,CAAA;0EAI9B,cAAc,EAAA,CAAA;sBADpB,SAAS;uBAAC,WAAW,CAAA;gBAGtB,KAAK,EAAA,CAAA;sBADJ,KAAK;;;MEFK,mBAAmB,CAAA;AAI9B,IAAA,WAAA,GAAA;AADS,QAAA,IAAK,CAAA,KAAA,GAAW,EAAE,CAAC;KACZ;AAEhB,IAAA,QAAQ,MAAW;;gHANR,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,mBAAmB,EAEhB,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,YAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,yBAAyB,EAD5B,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,WAAW,gDCVxB,oGAGA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDMa,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAN/B,SAAS;+BACE,cAAc,EAAA,aAAA,EAGT,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,oGAAA,EAAA,CAAA;0EAGN,eAAe,EAAA,CAAA;sBAA7C,SAAS;uBAAC,WAAW,CAAA;gBAC0B,UAAU,EAAA,CAAA;sBAAzD,YAAY;uBAAC,yBAAyB,CAAA;gBAC9B,KAAK,EAAA,CAAA;sBAAb,KAAK;;;MESK,oBAAoB,CAAA;AAU/B,IAAA,WAAA,GAAA;AALmC,QAAA,IAAA,CAAA,uBAAuB,GAAyB,IAAI,YAAY,EAAU,CAAC;AAC/E,QAAA,IAAA,CAAA,mBAAmB,GAAyB,IAAI,YAAY,EAAU,CAAC;KAItF;IAEhB,kBAAkB,GAAA;AAChB,QAAA,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAK;AACtB,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;AACpC,SAAC,CAAC,CAAC;KACJ;AAED,IAAA,SAAS,CAAC,MAAc,EAAA;AACtB,QAAA,IAAI,CAAC,QAAQ,CAAC,aAAa,GAAG,MAAM,CAAC;KACtC;IAED,gBAAgB,GAAA;;QACd,OAAO,CAAA,MAAA,IAAI,CAAC,QAAQ,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,aAAa,KAAI,CAAC,CAAC;KAC1C;AAED,IAAA,iBAAiB,CAAC,MAAyB,EAAA;QACzC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAChD,IAAI,IAAI,CAAC,kBAAkB,EAAE;AAC3B,YAAA,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACvC,SAAA;KACF;;iHA/BU,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,oBAAoB,EACd,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,EAAA,kBAAA,EAAA,CAAA,mBAAA,EAAA,oBAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA,uBAAA,EAAA,yBAAA,EAAA,mBAAA,EAAA,qBAAA,EAAA,EAAA,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,cAAA,EAAA,SAAA,EAAA,mBAAmB,EAOzB,CAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,UAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,WAAW,gDC7BxB,ycAUA,EAAA,MAAA,EAAA,CAAA,iQAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAF,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,EAAA,0BAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,WAAA,EAAA,QAAA,EAAA,gCAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,MAAA,EAAA,QAAA,EAAA,SAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,WAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,eAAA,EAAA,oBAAA,EAAA,kBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDWa,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBANhC,SAAS;+BACE,eAAe,EAAA,aAAA,EAGV,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,ycAAA,EAAA,MAAA,EAAA,CAAA,iQAAA,CAAA,EAAA,CAAA;0EAGS,YAAY,EAAA,CAAA;sBAAzD,eAAe;uBAAC,mBAAmB,CAAA;gBAGR,kBAAkB,EAAA,CAAA;sBAA7C,KAAK;uBAAC,mBAAmB,CAAA;gBACS,uBAAuB,EAAA,CAAA;sBAAzD,MAAM;uBAAC,yBAAyB,CAAA;gBACF,mBAAmB,EAAA,CAAA;sBAAjD,MAAM;uBAAC,qBAAqB,CAAA;gBAEL,QAAQ,EAAA,CAAA;sBAA/B,SAAS;uBAAC,WAAW,CAAA;;;MErBX,0BAA0B,CAAA;AACrC,IAAA,WAAA,GAAA,GAAgB;AAEhB,IAAA,QAAQ,MAAW;;uHAHR,0BAA0B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA1B,0BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,0BAA0B,4DCRvC,mEAGA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDKa,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBANtC,SAAS;+BACE,sBAAsB,EAAA,aAAA,EAGjB,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,mEAAA,EAAA,CAAA;;;MEQ1B,YAAY,CAAA;;yGAAZ,YAAY,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;0GAAZ,YAAY,EAAA,YAAA,EAAA,CAJR,mBAAmB,EAAE,0BAA0B,EAAE,yBAAyB,EAAE,oBAAoB,CAErG,EAAA,OAAA,EAAA,CAAA,mBAAmB,EAAE,YAAY,EAAE,aAAa,CADhD,EAAA,OAAA,EAAA,CAAA,mBAAmB,EAAE,0BAA0B,EAAE,yBAAyB,EAAE,oBAAoB,CAAA,EAAA,CAAA,CAAA;AAG/F,YAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,EAFb,OAAA,EAAA,CAAA,mBAAmB,EAAE,YAAY,EAAE,aAAa,CAAA,EAAA,CAAA,CAAA;2FAE/C,YAAY,EAAA,UAAA,EAAA,CAAA;kBALxB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,mBAAmB,EAAE,0BAA0B,EAAE,yBAAyB,EAAE,oBAAoB,CAAC;oBAChH,OAAO,EAAE,CAAC,mBAAmB,EAAE,0BAA0B,EAAE,yBAAyB,EAAE,oBAAoB,CAAC;AAC3G,oBAAA,OAAO,EAAE,CAAC,mBAAmB,EAAE,YAAY,EAAE,aAAa,CAAC;iBAC5D,CAAA;;;ACJK,MAAO,qBAAsB,SAAQ,wBAAwB,CAAA;AAUjE,IAAA,WAAA,GAAA;AACE,QAAA,KAAK,EAAE,CAAC;AATH,QAAA,IAAS,CAAA,SAAA,GAAG,GAAG,CAAC;AAMhB,QAAA,IAAQ,CAAA,QAAA,GAAY,KAAK,CAAC;KAIhC;AACD,IAAA,iBAAiB,MAAW;;kHAbjB,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,qBAAqB,yJCTlC,gvCA8BA,EAAA,MAAA,EAAA,CAAA,uDAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAD,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,+CAAA,EAAA,MAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,+CAAA,EAAA,MAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAa,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,4BAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,kBAAA,EAAA,oBAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDrBa,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBALjC,SAAS;+BACE,gBAAgB,EAAA,QAAA,EAAA,gvCAAA,EAAA,MAAA,EAAA,CAAA,uDAAA,CAAA,EAAA,CAAA;0EAMnB,SAAS,EAAA,CAAA;sBADf,KAAK;gBAIC,MAAM,EAAA,CAAA;sBADZ,KAAK;gBAIC,QAAQ,EAAA,CAAA;sBADd,KAAK;;;MEOK,kBAAkB,CAAA;;+GAAlB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;gHAAlB,kBAAkB,EAAA,YAAA,EAAA,CAXd,qBAAqB,CAAA,EAAA,OAAA,EAAA,CAGlC,YAAY;QACZ,qBAAqB;QACrB,cAAc;QACd,mBAAmB;QACnB,aAAa;QACb,yBAAyB,aAPjB,qBAAqB,CAAA,EAAA,CAAA,CAAA;AAUpB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,YAR3B,YAAY;QACZ,qBAAqB;QACrB,cAAc;QACd,mBAAmB;QACnB,aAAa;QACb,yBAAyB,CAAA,EAAA,CAAA,CAAA;2FAGhB,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAZ9B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,qBAAqB,CAAC;oBACrC,OAAO,EAAE,CAAC,qBAAqB,CAAC;AAChC,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,qBAAqB;wBACrB,cAAc;wBACd,mBAAmB;wBACnB,aAAa;wBACb,yBAAyB;AAC1B,qBAAA;iBACF,CAAA;;;ACZK,MAAO,oBAAqB,SAAQ,wBAAwB,CAAA;AAOhE,IAAA,WAAA,GAAA;AACE,QAAA,KAAK,EAAE,CAAC;AAHH,QAAA,IAAS,CAAA,SAAA,GAAW,CAAC,CAAC;AAI3B,QAAA,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;KAC1B;AAED,IAAA,iBAAiB,MAAW;;iHAZjB,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,oBAAoB,uICVjC,u+BA0BA,EAAA,MAAA,EAAA,CAAA,2BAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAf,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAY,4BAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,kBAAA,EAAA,oBAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDhBa,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBANhC,SAAS;+BACE,cAAc,EAAA,aAAA,EAGT,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,u+BAAA,EAAA,MAAA,EAAA,CAAA,2BAAA,CAAA,EAAA,CAAA;0EAI9B,SAAS,EAAA,CAAA;sBADf,KAAK;gBAIC,SAAS,EAAA,CAAA;sBADf,KAAK;;;MEOK,iBAAiB,CAAA;;8GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;+GAAjB,iBAAiB,EAAA,YAAA,EAAA,CAVb,oBAAoB,CAAA,EAAA,OAAA,EAAA,CAGjC,YAAY;QACZ,qBAAqB;QACrB,cAAc;QACd,mBAAmB;QACnB,yBAAyB,aANjB,oBAAoB,CAAA,EAAA,CAAA,CAAA;AASnB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,YAP1B,YAAY;QACZ,qBAAqB;QACrB,cAAc;QACd,mBAAmB;QACnB,yBAAyB,CAAA,EAAA,CAAA,CAAA;2FAGhB,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAX7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,oBAAoB,CAAC;oBACpC,OAAO,EAAE,CAAC,oBAAoB,CAAC;AAC/B,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,qBAAqB;wBACrB,cAAc;wBACd,mBAAmB;wBACnB,yBAAyB;AAC1B,qBAAA;iBACF,CAAA;;;MCbY,mBAAmB,CAAA;AALhC,IAAA,WAAA,GAAA;AAWY,QAAA,IAAA,CAAA,YAAY,GAAsB,IAAI,YAAY,EAAE,CAAC;KAOhE;AALC,IAAA,QAAQ,MAAW;AAEnB,IAAA,iBAAiB,CAAC,IAAS,EAAA;AACzB,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC9B;;gHAZU,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;oGAAnB,mBAAmB,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,EAAA,YAAA,EAAA,cAAA,EAAA,EAAA,OAAA,EAAA,EAAA,YAAA,EAAA,cAAA,EAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,aAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,aAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECPhC,28BAkBA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAb,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,WAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,MAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,6CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EDXa,mBAAmB,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,OAAA,EAAA,CAAA,cAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FAAnB,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAL/B,SAAS;+BACE,aAAa,EAAA,QAAA,EAAA,28BAAA,EAAA,CAAA;8BAMvB,YAAY,EAAA,CAAA;sBADX,KAAK;gBAG2B,WAAW,EAAA,CAAA;sBAA3C,SAAS;uBAAC,aAAa,CAAA;gBAEd,YAAY,EAAA,CAAA;sBAArB,MAAM;;;MEHI,mBAAmB,CAAA;IAe9B,WAA2B,CAAA,MAAc,EAAU,gBAAkC,EAAA;AAA1D,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;AAAU,QAAA,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;AARrE,QAAA,IAAU,CAAA,UAAA,GAAgC,QAAQ,CAAC;AAInD,QAAA,IAAkB,CAAA,kBAAA,GAAY,IAAI,CAAC;AAElC,QAAA,IAAA,CAAA,aAAa,GAAsB,IAAI,YAAY,EAAE,CAAC;KAEkB;AAElF,IAAA,eAAe,CAAC,IAAS,EAAA;QAC9B,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AACzC,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,KAAK,EAAE,CAAC;AACd,SAAA;KACF;AAEM,IAAA,UAAU,CAAC,IAAS,EAAA;;QACzB,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7C,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,gBAAgB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,aAAa,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;QAExD,IAAI,IAAI,CAAC,kBAAkB;YAAE,QAAQ,CAAC,MAAM,EAAE,CAAC;AAE/C,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC/B;AAEM,IAAA,QAAQ,MAAW;;gHAlCf,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAF,IAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,mBAAmB,8PCVhC,61EA6DA,EAAA,MAAA,EAAA,CAAA,uxBAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAE,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAQ,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,WAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,MAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,6CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAP,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,6GAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAe,mBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,OAAA,EAAA,CAAA,cAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDnDa,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAN/B,SAAS;+BACE,aAAa,EAAA,aAAA,EAGR,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,61EAAA,EAAA,MAAA,EAAA,CAAA,uxBAAA,CAAA,EAAA,CAAA;8HAGrB,SAAS,EAAA,CAAA;sBAAxB,KAAK;gBAEU,SAAS,EAAA,CAAA;sBAAxB,KAAK;gBAEU,KAAK,EAAA,CAAA;sBAApB,KAAK;gBAEU,UAAU,EAAA,CAAA;sBAAzB,KAAK;gBAEU,IAAI,EAAA,CAAA;sBAAnB,KAAK;gBAEU,kBAAkB,EAAA,CAAA;sBAAjC,KAAK;gBAEW,aAAa,EAAA,CAAA;sBAA7B,MAAM;;;MERI,gBAAgB,CAAA;;6GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,iBAJZ,mBAAmB,EAAE,mBAAmB,CAE7C,EAAA,OAAA,EAAA,CAAA,mBAAmB,EAAE,YAAY,EAAE,gBAAgB,EAAE,aAAa,EAAE,aAAa,EAAE,eAAe,CADlG,EAAA,OAAA,EAAA,CAAA,mBAAmB,EAAE,mBAAmB,CAAA,EAAA,CAAA,CAAA;8GAGvC,gBAAgB,EAAA,OAAA,EAAA,CAFjB,mBAAmB,EAAE,YAAY,EAAE,gBAAgB,EAAE,aAAa,EAAE,aAAa,EAAE,eAAe,CAAA,EAAA,CAAA,CAAA;2FAEjG,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAL5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE,CAAC,mBAAmB,EAAE,mBAAmB,CAAC;AACxD,oBAAA,OAAO,EAAE,CAAC,mBAAmB,EAAE,mBAAmB,CAAC;AACnD,oBAAA,OAAO,EAAE,CAAC,mBAAmB,EAAE,YAAY,EAAE,gBAAgB,EAAE,aAAa,EAAE,aAAa,EAAE,eAAe,CAAC;iBAC9G,CAAA;;;MCNY,uBAAuB,CAAA;AAgBlC,IAAA,WAAA,GAAA;AARA,QAAA,IAAQ,CAAA,QAAA,GAAY,IAAI,CAAC;AAElB,QAAA,IAAa,CAAA,aAAA,GAAW,EAAE,CAAC;AAI3B,QAAA,IAAY,CAAA,YAAA,GAAY,KAAK,CAAC;KAErB;AAEhB,IAAA,QAAQ,MAAW;AAEnB,IAAA,WAAW,CAAC,KAAU,EAAA;;QACpB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;AACxC,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,CAAA,EAAA,GAAA,IAAI,CAAC,aAAa,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,CAAC,CAAC;KAC9D;IAED,YAAY,GAAA;AACV,QAAA,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;AACxB,QAAA,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;AAC1B,QAAA,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;KAC5B;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAEzB,IAAI,IAAI,CAAC,aAAa,EAAE;AACtB,YAAA,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;AAChC,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAClD,gBAAA,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,aAAA;AAED,YAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AACvB,SAAA;KACF;AAED,IAAA,MAAM,CAAC,KAAe,EAAA;AACpB,QAAA,IAAI,KAAK,EAAE;AACT,YAAA,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,KAAI;AACpD,gBAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACrB,gBAAA,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;AACxB,gBAAA,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;AAC5B,aAAC,CAAC,CAAC;AACJ,SAAA;KACF;AAED,IAAA,WAAW,CAAC,GAAQ,EAAA;AAClB,QAAA,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,WAAW,GAAG,UAAU,CAAC;AAC/C,QAAA,MAAM,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;AACxB,QAAA,OAAO,KAAK,CAAC;KACd;;oHA1DU,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,uBAAuB,4HCRpC,g6CAqCA,EAAA,MAAA,EAAA,CAAA,6MAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAtB,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,6GAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAAA,aAAA,EAAA,MAAA,CAAA,EAAA,OAAA,EAAA,CAAA,cAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FD7Ba,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBANnC,SAAS;+BACE,kBAAkB,EAAA,aAAA,EAGb,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,g6CAAA,EAAA,MAAA,EAAA,CAAA,6MAAA,CAAA,EAAA,CAAA;0EAIrC,MAAM,EAAA,CAAA;sBADL,KAAK;gBAIN,KAAK,EAAA,CAAA;sBADJ,KAAK;gBAIN,QAAQ,EAAA,CAAA;sBADP,KAAK;;;MENK,6BAA6B,CAAA;IAGxC,WAGS,CAAA,IAON,EACmB,WAAwD,EAAA;AARrE,QAAA,IAAI,CAAA,IAAA,GAAJ,IAAI,CAOV;AACmB,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAA6C;KAC1E;IAEG,MAAM,GAAA;AACX,QAAA,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACnB;AACM,IAAA,KAAK,CAAC,KAAc,EAAA;AACzB,QAAA,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KAC/B;IACM,OAAO,GAAA;AACZ,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;KAClB;IAEM,KAAK,GAAA;AACV,QAAA,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACnB;;AA7BU,6BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,6BAA6B,kBAK9B,eAAe,EAAA,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAAL,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AALd,6BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,6BAA6B,gJCT1C,qkBAcA,EAAA,MAAA,EAAA,CAAA,kHAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,6GAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAqB,uBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDLa,6BAA6B,EAAA,UAAA,EAAA,CAAA;kBANzC,SAAS;+BACE,yBAAyB,EAAA,aAAA,EAGpB,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,qkBAAA,EAAA,MAAA,EAAA,CAAA,kHAAA,CAAA,EAAA,CAAA;;;8BAMlC,QAAQ;;8BACR,MAAM;+BAAC,eAAe,CAAA;;8BAStB,QAAQ;;yBAbF,MAAM,EAAA,CAAA;sBAAd,KAAK;gBA0BC,KAAK,EAAA,CAAA;sBADX,YAAY;uBAAC,aAAa,CAAA;;;MEpBhB,oBAAoB,CAAA;;iHAApB,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,EAJhB,YAAA,EAAA,CAAA,uBAAuB,CAE5B,EAAA,OAAA,EAAA,CAAA,WAAW,EAAE,YAAY,EAAE,aAAa,EAAE,eAAe,EAAE,oBAAoB,aAD/E,uBAAuB,CAAA,EAAA,CAAA,CAAA;kHAGtB,oBAAoB,EAAA,OAAA,EAAA,CAFrB,WAAW,EAAE,YAAY,EAAE,aAAa,EAAE,eAAe,EAAE,oBAAoB,CAAA,EAAA,CAAA,CAAA;2FAE9E,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBALhC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,uBAAuB,CAAC;oBACvC,OAAO,EAAE,CAAC,uBAAuB,CAAC;oBAClC,OAAO,EAAE,CAAC,WAAW,EAAE,YAAY,EAAE,aAAa,EAAE,eAAe,EAAE,oBAAoB,CAAC;iBAC3F,CAAA;;;MCGY,0BAA0B,CAAA;;uHAA1B,0BAA0B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAA1B,0BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,0BAA0B,EAJtB,YAAA,EAAA,CAAA,6BAA6B,CAElC,EAAA,OAAA,EAAA,CAAA,WAAW,EAAE,YAAY,EAAE,aAAa,EAAE,eAAe,EAAE,oBAAoB,EAAE,oBAAoB,aADrG,6BAA6B,CAAA,EAAA,CAAA,CAAA;wHAG5B,0BAA0B,EAAA,OAAA,EAAA,CAF3B,WAAW,EAAE,YAAY,EAAE,aAAa,EAAE,eAAe,EAAE,oBAAoB,EAAE,oBAAoB,CAAA,EAAA,CAAA,CAAA;2FAEpG,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBALtC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,6BAA6B,CAAC;oBAC7C,OAAO,EAAE,CAAC,6BAA6B,CAAC;AACxC,oBAAA,OAAO,EAAE,CAAC,WAAW,EAAE,YAAY,EAAE,aAAa,EAAE,eAAe,EAAE,oBAAoB,EAAE,oBAAoB,CAAC;iBACjH,CAAA;;;MCdY,gBAAgB,CAAA;AAEzB,IAAA,OAAO,aAAa,CAAC,GAAW,EAAE,IAAY,EAAA;QAC1C,OAAO,CAAC,OAAwB,KAAqC;YAEjE,IAAI,IAAI,IAAI,OAAO,IAAI,OAAO,CAAC,KAAK,KAAK,SAAS,KAAK,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC,EAAE;AACxG,gBAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC;AAC/B,aAAA;AACD,YAAA,OAAO,IAAI,CAAC;AAChB,SAAC,CAAC;KACL;AAED,IAAA,OAAO,aAAa,CAAC,GAAW,EAAE,IAAY,EAAA;QAC1C,OAAO,CAAC,OAAwB,KAAqC;YAEjE,IAAI,IAAI,IAAI,OAAO,IAAI,OAAO,CAAC,KAAK,KAAK,SAAS,KAAK,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC,EAAE;AACxG,gBAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC;AAC/B,aAAA;AACD,YAAA,OAAO,IAAI,CAAC;AAChB,SAAC,CAAC;KACL;AAED,IAAA,OAAO,gBAAgB,CAAC,MAAe,EAAE,IAAY,EAAA;QACjD,OAAO,CAAC,OAAwB,KAAqC;AACjE,YAAA,IAAI,OAAO,CAAC,KAAK,KAAK,SAAS,IAAI,MAAM,KAAK,sBAAsB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;AAClF,gBAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC;AAC/B,aAAA;AACD,YAAA,OAAO,IAAI,CAAC;AAChB,SAAC,CAAC;KACL;AAED,IAAA,OAAO,sBAAsB,CAAC,GAAW,EAAE,IAAY,EAAA;QACnD,OAAO,CAAC,OAAwB,KAAqC;YACjE,IAAI,IAAI,IAAI,QAAQ,IAAI,OAAO,CAAC,KAAK,KAAK,SAAS,KAAK,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,KAAK,IAAI,GAAG,CAAC,EAAE;AACnG,gBAAA,OAAO,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC;AACvC,aAAA;AACD,YAAA,OAAO,IAAI,CAAC;AAChB,SAAC,CAAC;KACL;AAED,IAAA,OAAO,sBAAsB,CAAC,GAAW,EAAE,IAAY,EAAA;QACnD,OAAO,CAAC,OAAwB,KAAqC;YACjE,IAAI,IAAI,IAAI,QAAQ,IAAI,OAAO,CAAC,KAAK,KAAK,SAAS,KAAK,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,KAAK,IAAI,GAAG,CAAC,EAAE;AACnG,gBAAA,OAAO,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC;AACvC,aAAA;AACD,YAAA,OAAO,IAAI,CAAC;AAChB,SAAC,CAAC;KACL;AAED,IAAA,OAAO,aAAa,CAAC,GAAW,EAAE,IAAY,EAAA;QAC1C,OAAO,CAAC,OAAwB,KAAoC;AAChE,YAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,KAAK,IAAI,GAAG,CAAC,CAAC;YAE1D,IAAI,IAAI,IAAI,QAAQ,IAAI,OAAO,CAAC,KAAK,KAAK,SAAS,KAAK,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC,EAAE;AAClG,gBAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;AAC9B,aAAA;AACD,YAAA,OAAO,IAAI,CAAC;AAChB,SAAC,CAAC;KACL;AAED,IAAA,OAAO,aAAa,CAAC,GAAW,EAAE,IAAY,EAAA;QAC1C,OAAO,CAAC,OAAwB,KAAmC;YAC/D,IAAI,IAAI,IAAI,QAAQ,IAAI,OAAO,CAAC,KAAK,KAAK,SAAS,KAAK,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC,EAAE;AAClG,gBAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;AAC9B,aAAA;AACD,YAAA,OAAO,IAAI,CAAC;AAChB,SAAC,CAAC;KACL;AAED,IAAA,OAAO,gBAAgB,CAAC,QAAgB,EAAE,IAAY,EAAA;QAClD,OAAO,CAAC,OAAwB,KAAmC;YAC/D,IAAI,IAAI,IAAI,QAAQ,IAAI,OAAO,CAAC,KAAK,KAAK,SAAS,KAAK,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,KAAK,GAAG,QAAQ,IAAI,CAAC,CAAC,EAAE;AAC5G,gBAAA,OAAO,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC;AACjC,aAAA;AACD,YAAA,OAAO,IAAI,CAAC;AAChB,SAAC,CAAC;KACL;AAEJ,CAAA;AAED,SAAS,sBAAsB,CAAC,GAAO,EAAA;IACnC,OAAO,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,GAAG,CAAC,MAAM,CAAC;AAC3C;;MC9Ea,gBAAgB,CAAA;AAC3B,IAAA,WAAA,GAAA,GAAuB;AAEvB;;AAEG;IACI,YAAY,CAAC,YAAiB,EAAE,iBAAsB,EAAA;;QAC3D,MAAM,gBAAgB,GAAQ,EAAE,CAAC;AACjC,QAAA,IAAI,YAAY,EAAE;AAChB,YAAA,MAAM,SAAS,GAAG,MAAM,CAAC,mBAAmB,CAAC,YAAY,KAAZ,IAAA,IAAA,YAAY,KAAZ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,YAAY,CAAE,UAAU,CAAC,CAAC;AACvE,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzC,IAAI,MAAM,IAAI,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;;AAEnD;;AAEM;oBACN,SAAS;AACV,iBAAA;AAED,gBAAA,IACE,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,OAAO;AACtD,oBAAA,EAAE,MAAM,IAAI,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EACxD;AACA,oBAAA,IAAI,CAAA,EAAA,GAAA,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,EAAE;AAC3D,wBAAA,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG;AAC/B,4BAAA,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,iBAAiB,CAAC;yBAClF,CAAC;AACH,qBAAA;AAAM,yBAAA;wBACL,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC;AAC/F,qBAAA;oBACD,SAAS;AACV,iBAAA;AAED,gBAAA,IACE,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,QAAQ;AACvD,oBAAA,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAC7D;oBACA,IAAI,cAAc,GAAQ,IAAI,CAAC;oBAC/B,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;wBACvE,cAAc,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,qBAAA;AACD,oBAAA,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,iBAAiB,CACrD,SAAS,CAAC,CAAC,CAAC,EACZ,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EACrC,YAAY,EACZ,cAAc,CACf,CAAC;oBACF,SAAS;AACV,iBAAA;AACD,gBAAA,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAC5C,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAC5E,CAAC;AACH,aAAA;AACF,SAAA;AAED,QAAA,OAAO,gBAAgB,CAAC;KACzB;AAED,IAAA,iBAAiB,CAAC,QAAa,EAAA;AAC7B,QAAA,QACE,QAAQ,CAAC,IAAI,KAAK,QAAQ;AAC1B,YAAA,QAAQ,CAAC,UAAU,CAAC,cAAc,CAAC,OAAO,CAAC;AAC3C,YAAA,QAAQ,CAAC,UAAU,CAAC,cAAc,CAAC,aAAa,CAAC;YACjD,QAAQ,CAAC,UAAU,CAAC,cAAc,CAAC,cAAc,CAAC,EAClD;KACH;IAEO,QAAQ,CAAC,kBAAwB,EAAE,YAAkB,EAAA;QAC3D,MAAM,GAAG,GAAQ,EAAE,CAAC;AACpB,QAAA,MAAM,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC;QAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAC5B,YAAA,KAAK,MAAM,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE;gBAC5B,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;oBAClC,GAAG,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,iBAAA;AACF,aAAA;AACF,SAAA;AACD,QAAA,OAAO,GAAG,CAAC;KACZ;AAEO,IAAA,iBAAiB,CAAC,QAAa,EAAE,UAAe,EAAE,MAAW,EAAE,iBAA6B,EAAA;QAClG,IAAI,eAAe,GAAe,EAAE,CAAC;AAErC,QAAA,IAAI,iBAAiB,EAAE;YACrB,eAAe,GAAG,iBAAiB,CAAC;AACrC,SAAA;QACD,IAAI,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAE;AAC9C,YAAA,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AAC3C,SAAA;AACD,QAAA,IAAI,UAAU,CAAC,WAAW,CAAC,IAAI,IAAI,EAAE;AACnC,YAAA,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AACrE,SAAA;AACD,QAAA,IAAI,UAAU,CAAC,WAAW,CAAC,EAAE;AAC3B,YAAA,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AACrE,SAAA;AACD,QAAA,IAAI,UAAU,CAAC,SAAS,CAAC,EAAE;AACzB,YAAA,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAC7D,SAAA;AACD,QAAA,IAAI,UAAU,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE;AACjC,YAAA,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAC7D,SAAA;AAED,QAAA,IAAI,UAAU,CAAC,UAAU,CAAC,EAAE;AAC1B,YAAA,eAAe,CAAC,IAAI,CAAC,CAAC,OAAoB,KAAI;AAC5C,gBAAA,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;AAC3B,aAAC,CAAC,CAAC;AACJ,SAAA;AAED,QAAA,IAAI,UAAU,CAAC,QAAQ,CAAC,EAAE;AACxB,YAAA,IAAI,UAAU,CAAC,QAAQ,CAAC,KAAK,OAAO,EAAE;gBACpC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,2CAA2C,CAAC,CAAC,CAAC;AACvF,aAAA;;;AAGF,SAAA;AAED,QAAA,IAAI,UAAU,CAAC,SAAS,CAAC,EAAE;AACzB,YAAA,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACjE,SAAA;AAED,QAAA,IAAI,UAAU,CAAC,UAAU,CAAC,EAAE;AAC1B,YAAA,eAAe,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAClG,SAAA;AAED,QAAA,IAAI,UAAU,CAAC,UAAU,CAAC,EAAE;AAC1B,YAAA,eAAe,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAClG,SAAA;AAED,QAAA,IAAI,UAAU,CAAC,aAAa,CAAC,EAAE;AAC7B,YAAA,eAAe,CAAC,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACxG,SAAA;AAED,QAAA,IAAI,UAAU,CAAC,kBAAkB,CAAC,EAAE;AAClC,YAAA,eAAe,CAAC,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,UAAU,CAAC,kBAAkB,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACnH,SAAA;AAED,QAAA,IAAI,UAAU,CAAC,kBAAkB,CAAC,EAAE;AAClC,YAAA,eAAe,CAAC,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,UAAU,CAAC,kBAAkB,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACnH,SAAA;AAED,QAAA,IAAI,UAAU,CAAC,YAAY,CAAC,EAAE;AAC5B,YAAA,eAAe,CAAC,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACvG,SAAA;AAED,QAAA,OAAO,CAAC,EAAE,EAAE,eAAe,CAAC,CAAC;KAC9B;AAED;;;AAGG;IACK,mBAAmB,CAAC,MAAW,EAAE,QAAa,EAAA;AACpD,QAAA,OAAO,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;KACpE;IAEM,0BAA0B,CAAC,KAAU,EAAE,MAAW,EAAA;AACvD,QAAA,IAAI,MAAM,EAAE;YACV,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;AAC5C,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;AAClC,SAAA;KACF;;6GAjKU,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;iHAAhB,gBAAgB,EAAA,CAAA,CAAA;2FAAhB,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAD5B,UAAU;;;MCAW,WAAW,CAAA;AAG/B,IAAA,WAAA,GAAA;QAFU,IAAA,CAAA,KAAK,GAA4C,IAAI,eAAe,CAAyB,SAAS,CAAC,CAAC;KAE3F;;IAQhB,MAAM,CAAC,UAAkB,EAAE,WAAmB,EAAA;;AAEnD,QAAA,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;KACnB;AAED;;;AAGG;IACI,OAAO,GAAA;AACZ,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;KAClC;AAED;;;AAGG;AACI,IAAA,UAAU,CAAC,KAAe,EAAA;AAC/B,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QACrC,OAAO,WAAW,KAAK,SAAS,IAAI,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;KACzG;;wGA/BmB,WAAW,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;4GAAX,WAAW,EAAA,CAAA,CAAA;2FAAX,WAAW,EAAA,UAAA,EAAA,CAAA;kBADhC,UAAU;;;ACOX,MAAM,SAAS,GAAW,eAAe,CAAC;AAC1C,MAAM,WAAW,GAAW,gBAAgB,CAAC;AAC7C,MAAM,gCAAgC,GAAW,qCAAqC,CAAC;AACvF,MAAM,mBAAmB,GAAW,qBAAqB,CAAC;AAC1D,MAAM,KAAK,GAAW,OAAO,CAAC;AAC9B,MAAM,KAAK,GAAW,OAAO,CAAC;AAC9B;AACA;AACA;AAGM,MAAO,iBAAkB,SAAQ,WAAW,CAAA;;;IAIhD,WACU,CAAA,SAA2B,EAC3B,cAA8B,EAC9B,MAAc,EACZ,WAA0B,EAC5B,aAA4B,EAAA;AAEpC,QAAA,KAAK,EAAE,CAAC;AANA,QAAA,IAAS,CAAA,SAAA,GAAT,SAAS,CAAkB;AAC3B,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;AAC9B,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;AACZ,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAAe;AAC5B,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAGpC,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;IAEM,WAAW,GAAA;QAChB,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,IAAG;YAC3F,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;AAC/B,YAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAClD,SAAC,CAAC,CAAC;QAEH,MAAM,aAAa,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AACtD,QAAA,IAAI,aAAa,EAAE;AACjB,YAAA,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;AAC9B,SAAA;KACF;IAEM,QAAQ,GAAA;AACb,QAAA,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;KAC3B;AAED;;AAEG;AACI,IAAA,KAAK,CAAC,GAAW,EAAE,SAAiB,EAAE,UAAkB,EAAE,WAAoB,EAAA;;;;;;;;;;;;;;;;;AAmBnF,QAAA,MAAM,WAAW,GAAG,WAAW,GAAG,WAAW,GAAG,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAEzF,MAAM,eAAe,GAAG,CAAG,EAAA,UAAU,6BAA6B,SAAS,CAAA,KAAA,EAAQ,WAAW,CAAA,CAAE,CAAC;;AAEjG,QAAA,IAAI,SAAS,EAAE;AACb,YAAA,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;AACrC,YAAA,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,eAAe,CAAC;AACxC,SAAA;KACF;AAED;;AAEG;IACa,MAAM,CAAC,UAAkB,EAAE,WAAmB,EAAA;AAC5D,QAAA,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;AAEtC,QAAA,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;AACnC,QAAA,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QACrC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;AAE7C,QAAA,MAAM,WAAW,GAAG,WAAW,GAAG,WAAW,GAAG,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACzF,QAAA,MAAM,UAAU,GAAG,CAAA,EAAG,UAAU,CAAuB,oBAAA,EAAA,WAAW,EAAE,CAAC;AAErE,QAAA,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,UAAU,CAAC;KACnC;AAEM,IAAA,QAAQ,CAAC,KAAa,EAAA;AAC3B,QAAA,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACvB,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;AAC/C,QAAA,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;KAChC;AAEM,IAAA,QAAQ,CAAC,MAAc,EAAE,KAAa,EAAE,GAAY,EAAA;AACzD,QAAA,MAAM,WAAW,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,MAAM,CAAE,CAAC;AAClC,QAAA,OAAO,WAAW,CAAC,KAAK,CAAC,CAAC;QAE1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,KAAA,IAAA,IAAH,GAAG,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAH,GAAG,CAAE,KAAK,CAAC,GAAG,CAAE,CAAA,CAAC,CAAC,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,CAAC;KAC7D;AAEO,IAAA,UAAU,CAAC,KAAa,EAAA;AAC9B,QAAA,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;KACxC;IAEM,gBAAgB,GAAA;QACrB,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAC9C,IAAI,CAAC,KAAK,EAAE;YACV,KAAK,GAAG,UAAU,CAAC;AACpB,SAAA;AACD,QAAA,OAAO,KAAK,CAAC;KACd;IAEM,gBAAgB,GAAA;QACrB,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,gCAAgC,CAAC,CAAC;QACnE,IAAI,CAAC,KAAK,EAAE;YACV,KAAK,GAAG,UAAU,CAAC;AACpB,SAAA;AACD,QAAA,OAAO,KAAK,CAAC;KACd;IAEM,qBAAqB,GAAA;QAC1B,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;QACtD,IAAI,CAAC,KAAK,EAAE;YACV,KAAK,GAAG,UAAU,CAAC;AACpB,SAAA;AACD,QAAA,OAAO,KAAK,CAAC;KACd;IAEM,QAAQ,GAAA;QACb,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAC5C,IAAI,CAAC,KAAK,EAAE;YACV,KAAK,GAAG,UAAU,CAAC;AACpB,SAAA;AACD,QAAA,OAAO,KAAK,CAAC;KACd;IAEM,QAAQ,GAAA;QACb,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACxC,IAAI,CAAC,KAAK,EAAE;YACV,KAAK,GAAG,WAAW,CAAC;AACrB,SAAA;AACD,QAAA,OAAO,KAAK,CAAC;KACd;IACM,QAAQ,GAAA;QACb,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACxC,IAAI,CAAC,KAAK,EAAE;YACV,KAAK,GAAG,WAAW,CAAC;AACrB,SAAA;AACD,QAAA,OAAO,KAAK,CAAC;KACd;AAEM,IAAA,kBAAkB,CAAC,KAAoB,EAAA;AAC5C,QAAA,IAAI,KAAK,EAAE;AACT,YAAA,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;AAC1C,SAAA;KACF;AAEM,IAAA,qCAAqC,CAAC,KAAoB,EAAA;AAC/D,QAAA,IAAI,KAAK,EAAE;AACT,YAAA,YAAY,CAAC,OAAO,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;AAC/D,SAAA;KACF;AAEM,IAAA,eAAe,CAAC,KAAc,EAAA;AACnC,QAAA,IAAI,KAAK,EAAE;AACT,YAAA,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AACpC,SAAA;KACF;AAEM,IAAA,eAAe,CAAC,KAAc,EAAA;AACnC,QAAA,IAAI,KAAK,EAAE;AACT,YAAA,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AACpC,SAAA;KACF;AAEM,IAAA,uBAAuB,CAAC,KAAoB,EAAA;AACjD,QAAA,IAAI,KAAK,EAAE;AACT,YAAA,YAAY,CAAC,OAAO,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;AAClD,SAAA;KACF;AAEO,IAAA,gBAAgB,CAAC,KAAa,EAAA;QACpC,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KAC1C;AAEO,IAAA,cAAc,CAAC,IAAgC,EAAA;AACrD,QAAA,IAAI,IAAI,EAAE;AACR,YAAA,MAAM,IAAI,GAAG;gBACX,MAAM,EAAE,IAAI,CAAC,UAAU;gBACvB,SAAS,EAAE,IAAI,CAAC,WAAW;gBAC3B,KAAK,EAAE,IAAI,CAAC,KAAK;AACjB,gBAAA,KAAK,EAAE,IAAI,CAAC,GAAG,IAAI,EAAE;aACtB,CAAC;AACF,YAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACvB,SAAA;KACF;AAEM,IAAA,qBAAqB,CAAC,IAAY,EAAA;QACvC,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,GAAG,iCAAiC,CAAC,CAAC;KACvE;IAEM,cAAc,CAAC,SAAiB,EAAE,UAAkB,EAAA;QACzD,IAAI,SAAS,IAAI,UAAU,EAAE;AAC3B,YAAA,IAAI,KAAK,GAAG;AACV,gBAAA,YAAY,EAAE,SAAS;gBACvB,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,8BAA8B,CAAC;aACjE,CAAC;AAEF,YAAA,IAAI,CAAC,WAAW;iBACb,IAAI,CAAC,UAAU,GAAG,mCAAmC,EAAE,KAAK,CAAC;AAC7D,iBAAA,IAAI,CACHC,KAAG,CAAC,CAAC,KAAU,KAAI;AACjB,gBAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;;gBAE5B,IAAI,KAAK,CAAC,QAAQ,EAAE;AAClB,oBAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AAC/B,iBAAA;aACF,CAAC,EACF,UAAU,CAAC,CAAC,GAAG,EAAE,MAAM,KAAI;AACzB,gBAAA,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACjB,gBAAA,OAAO,KAAK,CAAC;AACf,aAAC,CAAC,CACH;AACA,iBAAA,SAAS,EAAE,CAAC;AAChB,SAAA;KACF;;8GAzNU,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAxB,IAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAAwB,aAAA,EAAA,EAAA,EAAA,KAAA,EAAApB,IAAA,CAAA,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;kHAAjB,iBAAiB,EAAA,CAAA,CAAA;2FAAjB,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAD7B,UAAU;;;ACZJ,MAAM,SAAS,GAAG,IAAI,gBAAgB,CAAC,MAAM,EAAE,EAAE;AACjD,MAAM,UAAU,GAAG,IAAI,gBAAgB,CAAC,MAAM,EAAE,EAAE;AAClD,MAAM,SAAS,GAAG,IAAI,gBAAgB,CAAC,MAAM,IAAI,EAAE;AACnD,MAAM,WAAW,GAAG,IAAI,gBAAgB,CAAC,MAAM,EAAE,EAAE;AACnD,MAAM,UAAU,GAAG,IAAI,gBAAgB,CAAC,MAAM,EAAE,EAAE;AAClD,MAAM,MAAM,GAAG,IAAI,gBAAgB,CAAC,MAAM,IAAI,EAAE;MAG1C,4BAA4B,CAAA;IACvC,WACU,CAAA,IAAuB,EACd,QAAkB,EAC3B,SAA2B,EAC3B,iBAAmC,EACnC,aAA4B,EAAA;AAJ5B,QAAA,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAmB;AACd,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;AAC3B,QAAA,IAAS,CAAA,SAAA,GAAT,SAAS,CAAkB;AAC3B,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAkB;AACnC,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;KAClC;IAEG,SAAS,CAAC,OAAyB,EAAE,IAAiB,EAAA;;AAC3D,QAAA,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE;YACjC,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;AAC/B,gBAAA,IACE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,8BAA8B,CAAC;AACxD,oBAAA,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;AAC9B,oBAAA,CAAC,IAAI,CAAC,cAAc,EAAE,EACtB;oBACA,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;AAC3F,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,IAAI,CAAC,KAAK,CACb,OAAO,CAAC,GAAG,EACX,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,EAC9B,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,EAC/B,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CACjC,CAAC;AACH,iBAAA;AACF,aAAA;AACF,SAAA;QACD,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;;AAEhC,YAAA,MAAM,aAAa,GAAG,OAAO,CAAC,KAAK,CAAC;gBAClC,OAAO,EAAE,OAAO,CAAC,OAAO;qBACrB,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;qBACrD,GAAG,CAAC,uCAAuC,EAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;qBAC1E,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC;qBAC/D,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;qBACtD,GAAG,CAAC,kBAAkB,EAAE,CAAA,MAAA,IAAI,CAAC,iBAAiB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,aAAa,EAAE,KAAI,IAAI,GAAG,OAAO,GAAG,OAAO,CAAC;AAChG,aAAA,CAAC,CAAC;AACH,YAAA,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;AACnC,SAAA;AACD,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KAC7B;AAEO,IAAA,eAAe,CAAC,OAAyB,EAAA;AAC/C,QAAA,MAAM,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,UAAU,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;;;AAGpF,QAAA,OAAO,eAAe,CAAC;KACxB;IAEO,cAAc,GAAA;QACpB,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,UAAU,EAAE;AACvC,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;AACD,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;KAC5D;;yHAvDU,4BAA4B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAqB,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,QAAA,EAAA,EAAA,EAAA,KAAA,EAAAzB,IAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAG,IAAA,CAAA,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;6HAA5B,4BAA4B,EAAA,CAAA,CAAA;2FAA5B,4BAA4B,EAAA,UAAA,EAAA,CAAA;kBADxC,UAAU;;;ACdX;;AAEG;MAEmB,OAAO,CAAA;AAC3B,IAAA,WAAA,GAAA,GAAgB;IAEN,gBAAgB,CAAC,IAAY,EAAE,MAAkB,EAAA;QACzD,OAAO,IAAI,GAAG,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;KACnD;IAES,uBAAuB,CAAC,IAAY,EAAE,MAAkB,EAAA;QAChE,OAAO,IAAI,GAAG,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;KAC1D;;oGATmB,OAAO,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;wGAAP,OAAO,EAAA,CAAA,CAAA;2FAAP,OAAO,EAAA,UAAA,EAAA,CAAA;kBAD5B,UAAU;;;ACLX,MAAM,aAAa,GAAW,GAAG,CAAC;MAErB,wBAAwB,CAAA;IAGnC,WAAoB,CAAA,QAA4B,EAAU,MAA0B,EAAA;AAAhE,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAoB;AAAU,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAoB;AAFpF,QAAA,IAAS,CAAA,SAAA,GAAW,CAAC,CAAC;KAEkE;IAEjF,UAAU,CAAC,OAA2B,EAAE,KAAyB,EAAA;QACtE,IAAI,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QACvC,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,KAAK,OAAO,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC;QAClH,IAAI,CAAC,MAAM,EAAE;YACX,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AAC5C,SAAA;QACD,OAAO,CAAC,MAAM,CAAC;KAChB;AAEO,IAAA,QAAQ,CAAC,WAAmB,EAAE,OAA2B,EAAE,KAAyB,EAAA;AAC1F,QAAA,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;AAC7B,QAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AACxB,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;AACF;;MCbY,kBAAkB,CAAA;AAY7B,IAAA,WAAA,CAAoB,MAAqB,EAAA;AAArB,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAe;QAXzC,IAAA,CAAA,cAAc,GAAuB;AACnC,YAAA,WAAW,EAAE,IAAI;AACjB,YAAA,WAAW,EAAE,IAAI;AACjB,YAAA,aAAa,EAAE,oBAAoB;SACpC,CAAC;QAEF,IAAW,CAAA,WAAA,GAA6B,IAAI,wBAAwB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QAC3F,IAAS,CAAA,SAAA,GAA6B,IAAI,wBAAwB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QACzF,IAAQ,CAAA,QAAA,GAA6B,IAAI,wBAAwB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QACxF,IAAW,CAAA,WAAA,GAA6B,IAAI,wBAAwB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;KAE9C;AAE7C,IAAA,WAAW,CAAC,OAA2B,EAAE,KAAyB,EAAE,OAAwC,EAAA;QAC1G,IAAI,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE;YAC/C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,GAAG,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC;AAC9E,SAAA;KACF;AAED,IAAA,SAAS,CAAC,OAA2B,EAAE,KAAyB,EAAE,OAAwC,EAAA;QACxG,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE;YAC7C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,GAAG,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC;AAC5E,SAAA;KACF;AAED,IAAA,QAAQ,CAAC,OAA2B,EAAE,KAAyB,EAAE,OAAwC,EAAA;QACvG,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE;YAC5C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,GAAG,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC;AAC3E,SAAA;KACF;AAED,IAAA,WAAW,CAAC,OAA2B,EAAE,KAAyB,EAAE,OAAwC,EAAA;QAC1G,IAAI,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE;YAC/C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,GAAG,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC;AAC9E,SAAA;KACF;;+GApCU,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAL,IAAA,CAAA,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,cAFjB,MAAM,EAAA,CAAA,CAAA;2FAEP,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAH9B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;MCEY,OAAO,GAAG,IAAI,cAAc,CAAS,SAAS,EAAE;MAChD,OAAO,GAAG,IAAI,cAAc,CAAS,SAAS,EAAE;AAGvD,MAAO,aAAc,SAAQ,OAAO,CAAA;AAWjC,IAAA,YAAY,CAAC,MAAY,EAAA;AAC9B,QAAA,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;KACnE;AAEM,IAAA,MAAM,CAAC,QAAiB,EAAA;AAC7B,QAAA,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;KAC7D;AAEM,IAAA,WAAW,CAAC,QAAc,EAAA;AAC/B,QAAA,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;KAClE;AAED,IAAA,WAAA,CACY,aAAiC,EACjC,UAAuB,EACvB,cAAmC,EAAA;AAE7C,QAAA,KAAK,EAAE,CAAC;AAJE,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAoB;AACjC,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAa;AACvB,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAqB;AAG7C,QAAA,IAAI,CAAC,QAAQ,GAAG,aAAa,GAAG,aAAa,GAAG,MAAM,CAAC,iBAAiB,CAAC,CAAC;AAC1E,QAAA,IAAI,CAAC,KAAK,GAAG,UAAU,GAAG,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;AAC1D,QAAA,IAAI,CAAC,SAAS,GAAG,cAAc,GAAG,cAAc,GAAG,MAAM,CAAC,kBAAkB,CAAC,CAAC;KAC/E;AAEO,IAAA,YAAY,CAAC,MAAwB,EAAA;AAC3C,QAAA,OAAO,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC;AAC1B,aAAA,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK,CAAG,EAAA,GAAG,CAAI,CAAA,EAAA,KAAK,EAAE,CAAC;aACxC,IAAI,CAAC,GAAG,CAAC,CAAC;KACd;AAED;;;;AAIG;AACI,IAAA,GAAG,CAAC,GAAW,EAAE,MAAyB,EAAE,aAAmB,EAAA;AACpE,QAAA,IAAI,IAAI,GAAG,IAAI,UAAU,EAAE,CAAC;QAC5B,MAAM,IAAI,GAAG,aAAa,GAAG,aAAa,GAAG,MAAM,CAAC;AAEpD,QAAA,IAAI,aAAa,IAAI,CAAC,CAAC,aAAa,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;AACrF,YAAA,OAAO,CAAC,KAAK,CAAC,8FAA8F,CAAC,CAAC;YAC9G,OAAO,EAAE,EAAE,CAAC;AACb,SAAA;AAED,QAAA,IAAI,GAAG,EAAE;AACP,YAAA,IAAI,MAAM,EAAE;gBACV,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;AACxC,aAAA;YAED,IAAI,CAAC,UAAU,EAAE,CAAC;AAClB,YAAA,IAAI,GAAG,IAAI,UAAU,CAAC,QAAQ,IAAG;AAC/B,gBAAA,IAAI,CAAC,KAAK;qBACP,GAAG,CAAC,GAAG,EAAE;;AAER,oBAAA,YAAY,EAAE,IAAI;oBAClB,OAAO,EAAE,IAAI,WAAW,EAAE;AACvB,yBAAA,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC;AAC9B,yBAAA,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC;AAChC,yBAAA,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC;AAC9B,yBAAA,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC;AACxB,yBAAA,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC;AAClC,yBAAA,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC;iBACpC,CAAC;AACD,qBAAA,SAAS,CAAC;oBACT,IAAI,EAAE,MAAM,IAAG;wBACb,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;qBAC7C;oBACD,KAAK,EAAE,KAAK,IAAG;AACb,wBAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;qBACnC;AACF,iBAAA,CAAC,CAAC;AACP,aAAC,CAAC,CAAC;AACJ,SAAA;AACD,QAAA,OAAO,IAAI,CAAC;KACb;AAED;;;;AAIG;IACI,OAAO,CAAC,GAAW,EAAE,MAAyB,EAAA;AACnD,QAAA,IAAI,IAAI,GAAG,IAAI,UAAU,EAAE,CAAC;AAC5B,QAAA,IAAI,GAAG,EAAE;AACP,YAAA,IAAI,MAAM,EAAE;AACV,gBAAA,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;AAClC,aAAA;YAED,IAAI,CAAC,UAAU,EAAE,CAAC;AAClB,YAAA,IAAI,GAAG,IAAI,UAAU,CAAC,QAAQ,IAAG;AAC/B,gBAAA,IAAI,CAAC,KAAK;qBACP,GAAG,CAAC,GAAG,EAAE;AACR,oBAAA,OAAO,EAAE,UAAU;AACnB,oBAAA,YAAY,EAAE,MAAM;oBACpB,OAAO,EAAE,IAAI,WAAW,EAAE;AACvB,yBAAA,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC;AAC9B,yBAAA,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC;AAChC,yBAAA,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC;AAC9B,yBAAA,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC;AACxB,yBAAA,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC;AAClC,yBAAA,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC;iBACpC,CAAC;AACD,qBAAA,SAAS,CAAC;oBACT,IAAI,EAAE,MAAM,IAAG;wBACb,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;qBAC7C;oBACD,KAAK,EAAE,KAAK,IAAG;AACb,wBAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;qBACnC;AACF,iBAAA,CAAC,CAAC;AACP,aAAC,CAAC,CAAC;AACJ,SAAA;AACD,QAAA,OAAO,IAAI,CAAC;KACb;AAED;;;;AAIG;AACI,IAAA,IAAI,CAAC,GAAW,EAAE,IAAS,EAAE,aAAmB,EAAA;AACrD,QAAA,IAAI,GAAG,GAAG,IAAI,UAAU,EAAE,CAAC;QAC3B,MAAM,IAAI,GAAG,aAAa,GAAG,aAAa,GAAG,MAAM,CAAC;AAEpD,QAAA,IAAI,aAAa,IAAI,CAAC,CAAC,aAAa,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;AACrF,YAAA,OAAO,CAAC,KAAK,CAAC,6FAA6F,CAAC,CAAC;YAC7G,OAAO,EAAE,EAAE,CAAC;AACb,SAAA;AAED,QAAA,IAAI,GAAG,EAAE;YACP,IAAI,CAAC,UAAU,EAAE,CAAC;AAClB,YAAA,GAAG,GAAG,IAAI,UAAU,CAAC,QAAQ,IAAG;AAC9B,gBAAA,IAAI,CAAC,KAAK;AACP,qBAAA,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE;;AAEf,oBAAA,YAAY,EAAE,IAAI;oBAClB,OAAO,EAAE,IAAI,WAAW,EAAE;AACvB,yBAAA,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC;AAC9B,yBAAA,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC;AAChC,yBAAA,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC;AAC9B,yBAAA,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC;AACxB,yBAAA,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC;AAClC,yBAAA,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC;iBACpC,CAAC;AACD,qBAAA,SAAS,CAAC;oBACT,IAAI,EAAE,MAAM,IAAG;wBACb,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;qBAC5C;oBACD,KAAK,EAAE,KAAK,IAAG;AACb,wBAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;qBACnC;AACF,iBAAA,CAAC,CAAC;AACP,aAAC,CAAC,CAAC;AACJ,SAAA;AACD,QAAA,OAAO,GAAG,CAAC;KACZ;AAED;;;;AAIG;IACI,KAAK,CAAC,GAAW,EAAE,IAAS,EAAA;AACjC,QAAA,IAAI,GAAG,GAAG,IAAI,UAAU,EAAE,CAAC;AAC3B,QAAA,IAAI,GAAG,EAAE;YACP,IAAI,CAAC,UAAU,EAAE,CAAC;AAClB,YAAA,GAAG,GAAG,IAAI,UAAU,CAAC,QAAQ,IAAG;AAC9B,gBAAA,IAAI,CAAC,KAAK;AACP,qBAAA,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE;oBAChB,OAAO,EAAE,IAAI,WAAW,EAAE;AACvB,yBAAA,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC;AAC9B,yBAAA,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC;AAChC,yBAAA,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC;AAC9B,yBAAA,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC;AACxB,yBAAA,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC;AAClC,yBAAA,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC;iBACpC,CAAC;AACD,qBAAA,SAAS,CAAC;oBACT,IAAI,EAAE,MAAM,IAAG;wBACb,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;qBAC5C;oBACD,KAAK,EAAE,KAAK,IAAG;AACb,wBAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;qBACnC;AACF,iBAAA,CAAC,CAAC;AACP,aAAC,CAAC,CAAC;AACJ,SAAA;AACD,QAAA,OAAO,GAAG,CAAC;KACZ;AAED;;;;AAIG;IACI,GAAG,CAAC,GAAW,EAAE,IAAS,EAAA;AAC/B,QAAA,IAAI,GAAG,GAAG,IAAI,UAAU,EAAE,CAAC;AAC3B,QAAA,IAAI,GAAG,EAAE;YACP,IAAI,CAAC,UAAU,EAAE,CAAC;AAClB,YAAA,GAAG,GAAG,IAAI,UAAU,CAAC,QAAQ,IAAG;AAC9B,gBAAA,IAAI,CAAC,KAAK;AACP,qBAAA,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE;oBACd,OAAO,EAAE,IAAI,WAAW,EAAE;AACvB,yBAAA,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC;AAC9B,yBAAA,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC;AAChC,yBAAA,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC;AAC9B,yBAAA,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC;AACxB,yBAAA,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC;AAClC,yBAAA,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC;iBACpC,CAAC;AACD,qBAAA,SAAS,CAAC;oBACT,IAAI,EAAE,MAAM,IAAG;wBACb,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;qBAC5C;oBACD,KAAK,EAAE,KAAK,IAAG;AACb,wBAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;qBACnC;AACF,iBAAA,CAAC,CAAC;AACP,aAAC,CAAC,CAAC;AACJ,SAAA;AACD,QAAA,OAAO,GAAG,CAAC;KACZ;AAED;;;;AAIG;IACI,MAAM,CAAC,GAAW,EAAE,IAAS,EAAA;AAClC,QAAA,IAAI,GAAG,GAAG,IAAI,UAAU,EAAE,CAAC;AAC3B,QAAA,IAAI,GAAG,EAAE;YACP,IAAI,CAAC,UAAU,EAAE,CAAC;AAClB,YAAA,GAAG,GAAG,IAAI,UAAU,CAAC,QAAQ,IAAG;AAC9B,gBAAA,IAAI,CAAC,KAAK;AACP,qBAAA,MAAM,CAAC,GAAG,GAAG,CAAI,CAAA,EAAA,IAAI,EAAE,EAAE;oBACxB,OAAO,EAAE,IAAI,WAAW,EAAE;AACvB,yBAAA,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC;AAC9B,yBAAA,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC;AAChC,yBAAA,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC;AAC9B,yBAAA,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC;AACxB,yBAAA,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC;AAClC,yBAAA,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC;iBACpC,CAAC;AACD,qBAAA,SAAS,CAAC;oBACT,IAAI,EAAE,MAAM,IAAG;wBACb,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;qBAC5C;oBACD,KAAK,EAAE,KAAK,IAAG;AACb,wBAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;qBACnC;AACF,iBAAA,CAAC,CAAC;AACP,aAAC,CAAC,CAAC;AACJ,SAAA;AACD,QAAA,OAAO,GAAG,CAAC;KACZ;IAEO,UAAU,GAAA;;;AAGhB,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;KACtB;AAEO,IAAA,aAAa,CAAC,QAAyB,EAAE,MAAW,EAAE,UAAmB,EAAA;AAC/E,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;AACrB,QAAA,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACtB,QAAQ,CAAC,QAAQ,EAAE,CAAC;AACpB,QAAA,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,+BAA+B,EAAE,EAAE,CAAC,CAAC;AACjE,SAAA;KACF;IAEO,WAAW,CAAC,QAAyB,EAAE,KAAwB,EAAA;;AACrE,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;AACrB,QAAA,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACtB,QAAA,IAAI,KAAK,KAAL,IAAA,IAAA,KAAK,uBAAL,KAAK,CAAE,KAAK,EAAE;AAChB,YAAA,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAA,CAAA,EAAA,GAAA,KAAK,KAAL,IAAA,IAAA,KAAK,uBAAL,KAAK,CAAE,KAAK,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,IAAG,IAAI,IAAG,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,KAAK,KAAL,IAAA,IAAA,KAAK,uBAAL,KAAK,CAAE,KAAK,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,CAAC,GAAG,CAAC,CAAA,EAAE,OAAO,CAAC,CAAC;AACnG,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;AACvD,SAAA;KACF;;0GAjSU,aAAa,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA2B,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAA1B,IAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA2B,kBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;8GAAb,aAAa,EAAA,CAAA,CAAA;2FAAb,aAAa,EAAA,UAAA,EAAA,CAAA;kBADzB,UAAU;;;MCAE,iBAAiB,CAAA;IAQ5B,WAAsB,CAAA,cAAgC,EAAY,WAA2B,EAAA;AAAvE,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAkB;AAAY,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAAgB;AANtF,QAAA,IAAO,CAAA,OAAA,GAAW,EAAE,CAAC;AAGrB,QAAA,IAAA,CAAA,SAAS,GAAkB,IAAI,OAAO,EAAE,CAAC;AAI9C,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;QACrC,IAAI,CAAC,QAAQ,EAAE,CAAC;KACjB;AAED,IAAA,QAAQ,MAAW;IAEnB,eAAe,GAAA;AACb,QAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,CAAC,WAAW,EAAE,CAAC;AACpB,SAAA;KACF;IAEM,QAAQ,GAAA;AACb,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAClD,IAAI,CAAC,IAAI,CAAC,QAAQ;AAChB,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC;AAC3D,kBAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAE;AAChD,kBAAE,IAAI,CAAC,QAAQ,CAAC;QACpB,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,aAAa,EAAE,CAAC;AACtB,SAAA;aAAM,IAAI,IAAI,CAAC,WAAW,EAAE;AAC3B,YAAA,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,MAAW,KAAI;AAC/D,gBAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACrB,IAAI,CAAC,aAAa,EAAE,CAAC;AACvB,aAAC,CAAC,CAAC;AACJ,SAAA;KACF;IAES,aAAa,GAAA;;AACrB,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,wBAAwB,EAAE,CAAC,CAAC;QACnG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;AACpD,QAAA,IAAI,CAAC,cAAc,CAAC,0BAA0B,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AAC7E,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,sBAAsB,EAAE,CAAC;QACzC,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;AAED,IAAA,gBAAgB,CAAC,WAAgB,EAAA;AAC/B,QAAA,IAAI,YAAY,GAAG,IAAI,WAAW,EAAE,CAAC;QACrC,IAAI,MAAM,GAAc,YAAY,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;AACxD,QAAA,IAAI,QAAkC,CAAC;QACvC,KAAK,QAAQ,IAAI,WAAW,EAAE;AAC5B,YAAA,IAAI,KAAK,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC;AAClC,YAAA,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE;gBAChC,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;AACpD,aAAA;AAAM,iBAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAChC,IAAI,YAAY,GAAc,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;AAC3D,gBAAA,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;AAC3C,aAAA;AACF,SAAA;AACD,QAAA,OAAO,MAAM,CAAC;KACf;AAED,IAAA,gBAAgB,CAAC,KAAU,EAAA;QACzB,IAAI,CAAC,KAAK,EAAE;AACV,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;QACD,OAAO,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;KACrH;AAES,IAAA,WAAW,MAAW;AAEhC;;;AAGG;IACO,wBAAwB,GAAA;QAChC,MAAM,UAAU,GAAW,EAAE,CAAC;AAC9B,QAAA,OAAO,UAAU,CAAC;KACnB;AAEM,IAAA,QAAQ,CAAC,QAAmB,EAAE,MAAW,EAAE,eAAwB,IAAI,EAAA;AAC5E,QAAA,MAAM,mBAAmB,GAAG,CAAC,IAAe,EAAE,IAAS,KAAU;AAC/D,YAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAU,IAAG;;gBAC9C,MAAM,OAAO,GAAoB,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;gBAC3D,MAAM,KAAK,GAAG,CAAA,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAJ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,IAAI,CAAE,cAAc,CAAC,UAAU,CAAC,IAAG,IAAI,CAAC,UAAU,CAAC,GAAG,SAAS,CAAC;gBAC9E,IAAI,OAAO,YAAY,SAAS,EAAE;;AAEhC,oBAAA,mBAAmB,CAAC,OAAoB,EAAE,KAAK,CAAC,CAAC;AAClD,iBAAA;AAAM,qBAAA,IAAI,KAAK,KAAK,SAAS,IAAI,OAAO,EAAE;oBACzC,IAAI,cAAc,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAC,UAAU,CAAC,CAAC;;;oBAGzD,IAAI,CAAA,cAAc,KAAA,IAAA,IAAd,cAAc,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAd,cAAc,CAAE,KAAK,KAAI,CAAA,cAAc,KAAA,IAAA,IAAd,cAAc,KAAd,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,cAAc,CAAE,KAAK,KAAI,gBAAgB,IAAI,OAAO,KAAK,IAAI,QAAQ,EAAE;AAClG,wBAAA,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;AAC3D,qBAAA;AAAM,yBAAA;wBACL,OAAO,CAAC,UAAU,CAAC,KAAK,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;AACjD,qBAAA;AACF,iBAAA;AACH,aAAC,CAAC,CAAC;AACL,SAAC,CAAC;AACF,QAAA,mBAAmB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;AACtC,QAAA,IAAI,YAAY;AAAE,YAAA,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;AACxC,QAAA,OAAO,QAAQ,CAAC;KACjB;IAEM,UAAU,CAAC,QAAmB,EAAE,SAAmB,EAAA;QACxD,IAAI,MAAM,GAAW,EAAE,CAAC;AACxB,QAAA,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAU,IAAG;;YAClD,MAAM,OAAO,GAAoB,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YAE/D,IAAI,kBAAkB,GAAG,IAAI,CAAC;AAC9B,YAAA,IAAI,SAAS,EAAE;AACb,gBAAA,kBAAkB,GAAG,OAAO,CAAC,KAAK,CAAC;AACpC,aAAA;AAED,YAAA,IAAI,OAAO,YAAY,WAAW,IAAI,kBAAkB,EAAE;AACxD,gBAAA,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;gBAC1B,IAAI,cAAc,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAC,UAAU,CAAC,CAAC;AACzD,gBAAA,IAAI,CAAA,cAAc,KAAA,IAAA,IAAd,cAAc,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAd,cAAc,CAAE,UAAU,KAAI,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;AAClF,oBAAA,KAAK,GAAG,CAAA,CAAA,EAAA,GAAA,OAAO,CAAC,KAAK,0CAAE,KAAK,IAAG,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;AACrD,iBAAA;AACD,gBAAA,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,EAAE;AACxC,oBAAA,KAAK,EAAE,KAAK;AACZ,oBAAA,UAAU,EAAE,IAAI;AACjB,iBAAA,CAAC,CAAC;AACJ,aAAA;YAED,IAAI,OAAO,YAAY,SAAS,EAAE;AAChC,gBAAA,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,EAAE;AACxC,oBAAA,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,OAAoB,CAAC;AAC5C,oBAAA,UAAU,EAAE,IAAI;AACjB,iBAAA,CAAC,CAAC;AACJ,aAAA;SACF,EAAE,IAAI,CAAC,CAAC;AACT,QAAA,OAAO,SAAS,GAAG,MAAM,GAAQ,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,QAAQ,KAAR,IAAA,IAAA,QAAQ,uBAAR,QAAQ,CAAE,KAAK,CAAK,EAAA,MAAM,CAAE,CAAC;KAC/D;AAED;;AAEG;AACI,IAAA,mBAAmB,CAAC,OAAe,EAAA;QACxC,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;KACzC;AAED;;AAEG;AACI,IAAA,cAAc,CAAC,UAAkB,EAAA;QACtC,OAAO,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;KAChE;AAED;;AAEG;IACI,sBAAsB,CAAC,IAAe,EAAE,UAAkB,EAAA;AAC/D,QAAA,IAAI,WAAW,GAAgB,IAAI,WAAW,EAAE,CAAC;AAEjD,QAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAU,IAAG;YAC9C,MAAM,OAAO,GAAoB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YACrE,IAAI,OAAO,CAAC,WAAW,CAAC,IAAI,KAAK,aAAa,IAAI,UAAU,IAAI,UAAU,EAAE;gBAC1E,WAAW,GAAG,OAAsB,CAAC;AACtC,aAAA;AAAM,iBAAA,IAAI,OAAO,CAAC,WAAW,CAAC,IAAI,KAAK,WAAW,EAAE;AACnD,gBAAA,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;AACjC,aAAA;SACF,EAAE,IAAI,CAAC,CAAC;AAET,QAAA,OAAO,WAAW,CAAC;KACpB;AAED;;AAEG;IACO,SAAS,CAAC,IAAe,EAAE,MAAgB,EAAA;AACnD,QAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAU,IAAG;YAC9C,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SAC3C,EAAE,IAAI,CAAC,CAAC;;QAET,MAAM,CAAC,IAAI,EAAE,CAAC;;QAEd,IAAI,gBAAgB,GAAW,EAAE,CAAC;QAClC,IAAI,SAAS,GAA2B,EAAE,CAAC;AAC3C,QAAA,KAAK,IAAI,QAAQ,GAAW,CAAC,EAAE,QAAQ,GAAG,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE;YACnE,MAAM,aAAa,GAAW,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAC5F,YAAA,MAAM,eAAe,GAAW,aAAa,CAAC,SAAS,CAAC,CAAC,EAAE,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;AACvF,YAAA,MAAM,iBAAiB,GAAW,aAAa,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;YACjG,IAAI,QAAQ,IAAI,CAAC,EAAE;gBACjB,gBAAgB,GAAG,eAAe,CAAC;AACpC,aAAA;YACD,IAAI,gBAAgB,KAAK,eAAe,EAAE;;;gBAGxC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;;gBAErD,gBAAgB,GAAG,eAAe,CAAC;gBACnC,SAAS,GAAG,EAAE,CAAC;AAChB,aAAA;;AAED,YAAA,SAAS,CAAC,mBAAmB,GAAG,QAAQ,CAAC,GAAG,iBAAiB,CAAC;;AAE9D,YAAA,IAAI,QAAQ,KAAK,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBAClC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;AACtD,aAAA;AACF,SAAA;KACF;AAED;;;;;AAKG;AACO,IAAA,wBAAwB,CAAC,IAAe,EAAA;AAChD,QAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAU,IAAG;;;;YAI9C,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,MAAM,IAAI,SAAS,EAAE;AACjD,gBAAA,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,sBAAsB,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AACtE,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;AAES,IAAA,iBAAiB,CAAC,IAAe,EAAA;AACzC,QAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAU,IAAG;YAC9C,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,aAAa,EAAE,CAAC;AAC5C,SAAC,CAAC,CAAC;;;AAGH,QAAA,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;KACrC;AAED;;;;AAIG;AACO,IAAA,eAAe,CAAC,SAAoB,EAAA;AAC5C,QAAA,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,WAAW,IAAG;YACpD,MAAM,OAAO,GAAG,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;YAChD,IAAI,OAAO,YAAY,SAAS,EAAE;AAChC,gBAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;AAC/B,aAAA;AAAM,iBAAA;gBACL,OAAO,CAAC,aAAa,EAAE,CAAC;gBACxB,OAAO,CAAC,WAAW,EAAE,CAAC;gBACtB,OAAO,CAAC,sBAAsB,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;AACtD,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;;8GAtPU,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,iBAAiB,gEAFlB,EAAE,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,CAAA;2FAED,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAJ7B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,0BAA0B;AACpC,oBAAA,QAAQ,EAAE,EAAE;iBACb,CAAA;;;ACCK,MAAO,2BAA4B,SAAQ,iBAAiB,CAAA;AAWhE,IAAA,WAAA,CAA4B,cAAgC,EAAA;QAC1D,KAAK,CAAC,cAAc,CAAC,CAAC;AADI,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAkB;AAN5C,QAAA,IAAS,CAAA,SAAA,GAAW,OAAO,CAAC;AAU5C,QAAA,IAAa,CAAA,aAAA,GAAmB,EAAE,CAAC;KAFlC;IAIQ,QAAQ,GAAA;QACf,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAM,KAAI;AAC7B,YAAA,IAAI,CAAC,CAAC,UAAU,KAAK,SAAS,EAAE;AAC9B,gBAAA,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC;AACrB,aAAA;AACD,YAAA,IAAI,CAAC,CAAC,UAAU,KAAK,SAAS,EAAE;AAC9B,gBAAA,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC;AACrB,aAAA;AACD,YAAA,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;AAEtB,YAAA,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;AACpD,YAAA,IAAI,MAAM,IAAI,EAAE,IAAI,MAAM,IAAI,IAAI,EAAE;AAClC,gBAAA,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC,CAAC;AACrC,aAAA;AACD,YAAA,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE;AAChB,gBAAA,CAAC,CAAC,SAAS,GAAG,OAAO,CAAC;AACvB,aAAA;AACH,SAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAM,KAAI;YAC7B,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,KAAU,KAAI;AACnE,gBAAA,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,KAAK,EAAE;AACxC,oBAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAC1B,iBAAA;aACF,CAAC,CACH,CAAC;AACF,YAAA,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;YACpD,IAAI,CAAC,CAAC,IAAI,EAAE;AACV,gBAAA,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC,CAAC;AACrC,aAAA;AACH,SAAC,CAAC,CAAC;QACH,IAAI,IAAI,CAAC,WAAW,EAAE;AACpB,YAAA,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,MAAK;gBAC9B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAM,KAAI;oBAC7B,IAAI,CAAC,CAAC,IAAI,EAAE;AACV,wBAAA,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC,CAAC;AACrC,qBAAA;AACH,iBAAC,CAAC,CAAC;AACL,aAAC,CAAC,CAAC;AACJ,SAAA;KACF;AAEO,IAAA,2BAA2B,CAAC,CAAM,EAAA;QACxC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAQ,KAAI;AAC/B,YAAA,IAAI,CAAC,CAAC,IAAI,IAAI,GAAG,CAAC,EAAE,EAAE;gBACpB,IAAI,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;gBACpD,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;;AAEzC,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;IAED,SAAS,CAAC,KAAU,EAAE,IAAS,EAAA;QAC7B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAQ,KAAI;AAC/B,YAAA,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC,EAAE,EAAE;gBACvB,IAAI,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;gBACpD,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;AACxC,gBAAA,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC5B,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;AAED,IAAA,iBAAiB,CAAC,EAAU,EAAA;QAC1B,IAAI,MAAM,GAAQ,EAAE,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAQ,KAAI;AAC/B,YAAA,IAAI,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE;AACf,gBAAA,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;gBACnD,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAA,KAAK,KAAL,IAAA,IAAA,KAAK,KAAL,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,KAAK,CAAE,KAAK,IAAG,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;AAC1D,aAAA;AACH,SAAC,CAAC,CAAC;AACH,QAAA,OAAO,MAAM,CAAC;KACf;AAED,IAAA,SAAS,CAAC,IAAS,EAAE,MAAA,GAAkB,KAAK,EAAA;QAC1C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAQ,KAAI;AAC/B,YAAA,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC,EAAE,EAAE;AACvB,gBAAA,IAAI,MAAM;AAAE,oBAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;AACtD,gBAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAChD,IAAI,GAAG,CAAC,IAAI,EAAE;AACZ,oBAAA,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AACrB,iBAAA;AACF,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;IAED,WAAW,CAAC,GAAQ,EAAE,IAAS,EAAA;AAC7B,QAAA,MAAM,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;QAE7B,IAAI,GAAG,IAAI,EAAE,EAAE;AACb,YAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AACtB,SAAA;KACF;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;KAClD;;wHAjHU,2BAA2B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAD,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA3B,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,2BAA2B,+LCZxC,o8DAiDA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA5B,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA8B,kBAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,mBAAA,EAAA,aAAA,EAAA,YAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,wBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,uBAAA,EAAA,wBAAA,EAAA,YAAA,EAAA,aAAA,EAAA,MAAA,EAAA,SAAA,EAAA,WAAA,EAAA,YAAA,EAAA,aAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,eAAA,EAAA,mBAAA,EAAA,OAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDrCa,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBANvC,SAAS;+BACE,sBAAsB,EAAA,aAAA,EAGjB,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,o8DAAA,EAAA,CAAA;oGAG5B,MAAM,EAAA,CAAA;sBAAd,KAAK;gBAEgB,KAAK,EAAA,CAAA;sBAA1B,KAAK;uBAAC,MAAM,CAAA;gBAEG,SAAS,EAAA,CAAA;sBAAxB,KAAK;gBAEU,WAAW,EAAA,CAAA;sBAA1B,KAAK;;;MENK,wBAAwB,CAAA;;qHAAxB,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;sHAAxB,wBAAwB,EAAA,YAAA,EAAA,CAJpB,2BAA2B,CAAA,EAAA,OAAA,EAAA,CAEhC,YAAY,EAAE,mBAAmB,EAAE,eAAe,EAAE,qBAAqB,CAAA,EAAA,OAAA,EAAA,CADzE,2BAA2B,CAAA,EAAA,CAAA,CAAA;AAG1B,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,YAFzB,YAAY,EAAE,mBAAmB,EAAE,eAAe,EAAE,qBAAqB,CAAA,EAAA,CAAA,CAAA;2FAExE,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBALpC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,2BAA2B,CAAC;oBAC3C,OAAO,EAAE,CAAC,2BAA2B,CAAC;oBACtC,OAAO,EAAE,CAAC,YAAY,EAAE,mBAAmB,EAAE,eAAe,EAAE,qBAAqB,CAAC;iBACrF,CAAA;;;MCLY,gBAAgB,CAAA;AAG3B,IAAA,WAAA,GAAA;AAFO,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,OAAO,EAAQ,CAAC;KAEnB;IAEhB,WAAW,GAAA;AAChB,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;AACzB,QAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;KAC9B;;6GARU,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,gBAAgB,0DAFjB,EAAE,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,CAAA;2FAED,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAJ5B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,oBAAoB;AAC9B,oBAAA,QAAQ,EAAE,EAAE;iBACb,CAAA;;;ACIK,MAAO,yBAA0B,SAAQ,iBAAiB,CAAA;AAJhE,IAAA,WAAA,GAAA;;AAoKS,QAAA,IAAqB,CAAA,qBAAA,GAAG,MAI3B;YACF,MAAM,mBAAmB,GAAG,CAC1B,OAA2B,EAC3B,eAAyB,GAAA,EAAE,KACQ;AACnC,gBAAA,OAAO,IAAI,UAAU,CAAC,UAAU,IAAG;AACjC,oBAAA,EAAE,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC;AAC5B,wBAAA,IAAI,EAAE,CAAC,KAAU,KAAI;4BACnB,MAAM,UAAU,GAAG,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;AAC/C,4BAAA,MAAM,QAAQ,GAAG,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC;4BAC3C,MAAM,cAAc,GAAG,KAAK,CAAC,KAAK,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AACzD,4BAAA,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AAC1D,4BAAA,MAAM,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC;AACnC,4BAAA,MAAM,gBAAgB,GAAG,cAAc,CAAC,MAAM,CAAC;AAC/C,4BAAA,MAAM,iBAAiB,GAAwB;AAC7C,gCAAA,OAAO,EAAE,cAAc;AACvB,gCAAA,QAAQ,EAAE;AACR,oCAAA,IAAI,EAAE;AACJ,wCAAA,MAAM,EAAE,KAAK;AACb,wCAAA,QAAQ,EAAE,IAAI;AACd,wCAAA,KAAK,EAAE,IAAI;AACZ,qCAAA;AACD,oCAAA,MAAM,EAAE,UAAU;oCAClB,UAAU,EAAE,OAAO,CAAC,IAAI;oCACxB,QAAQ,EAAE,OAAO,CAAC,IAAI;AACtB,oCAAA,OAAO,EAAE,KAAK;AACd,oCAAA,KAAK,EAAE,IAAI;AACZ,iCAAA;AACD,gCAAA,IAAI,EAAE,OAAO,CAAC,IAAI,KAAK,UAAU;AACjC,gCAAA,UAAU,EAAE,UAAU;AACtB,gCAAA,aAAa,EAAE,aAAa;gCAC5B,IAAI,EAAE,OAAO,CAAC,IAAI;AAClB,gCAAA,MAAM,EAAE,OAAO,CAAC,IAAI,GAAG,CAAC;AACxB,gCAAA,IAAI,EAAE;AACJ,oCAAA,MAAM,EAAE,KAAK;AACb,oCAAA,QAAQ,EAAE,IAAI;AACd,oCAAA,KAAK,EAAE,IAAI;AACZ,iCAAA;AACD,gCAAA,KAAK,EAAE,OAAO,CAAC,IAAI,KAAK,CAAC;AACzB,gCAAA,gBAAgB,EAAE,gBAAgB;gCAClC,KAAK,EAAE,gBAAgB,KAAK,CAAC;6BAC9B,CAAC;AACF,4BAAA,UAAU,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;4BACnC,UAAU,CAAC,QAAQ,EAAE,CAAC;yBACvB;AACF,qBAAA,CAAC,CAAC;AACL,iBAAC,CAAC,CAAC;AACL,aAAC,CAAC;YAEF,MAAM,OAAO,GAAG,CAAC,GAAQ,EAAE,WAAqB,GAAA,EAAE,KAAU;gBAC1D,IAAI,GAAG,CAAC,MAAM,EAAE;AACd,oBAAA,WAAW,CAAC,IAAI,CAAM,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,GAAG,CAAE,EAAA,EAAA,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,IAAG,CAAC;AAC9D,iBAAA;AAAM,qBAAA;AACL,oBAAA,MAAM,QAAQ,GAAG,WAAW,CAAC,SAAS,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC;oBAChE,WAAW,CAAC,QAAQ,CAAC,GAAQ,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,GAAG,KAAE,MAAM,EAAE,KAAK,EAAA,CAAE,CAAC;AACnD,iBAAA;AACH,aAAC,CAAC;YACF,MAAM,SAAS,GAAG,CAAC,GAAQ,EAAE,aAAuB,GAAA,EAAE,KAAU;gBAC9D,aAAa,CAAC,MAAM,CAClB,aAAa,CAAC,SAAS,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,EAChD,CAAC,CACF,CAAC;AACJ,aAAC,CAAC;AACF,YAAA,OAAO,EAAE,eAAe,EAAE,OAAO,EAAE,WAAW,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,SAAS,EAAE,CAAC;AACtG,SAAC,CAAC;KACH;IAlOoB,aAAa,GAAA;;AAC9B,QAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,wBAAwB,EAAE,CAAC,CAAC;AAClG,QAAA,IAAI,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/E,IAAI,CAAC,SAAS,GAAG,IAAI,SAAS,CAAC,SAAS,CAAC,CAAC;AAC1C,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,sBAAsB,EAAE,CAAC;QACzC,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;IAEM,gBAAgB,CAAC,QAAmB,EAAE,MAAW,EAAA;AACtD,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;KACjE;IAEM,kBAAkB,CAAC,QAAmB,EAAE,eAAqB,EAAA;AAClE,QAAA,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;KAClF;AAEO,IAAA,iBAAiB,CACvB,QAAmB,EACnB,UAAA,GAAkB,IAAI,CAAC,MAAM,CAAC,UAAU,EACxC,eAAqB,EACrB,iBAAyB,GAAA,EAAE,EAC3B,MAAe,EAAA;QAEf,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,IAAG;YAClC,MAAM,WAAW,GAAG,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAC9D,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,QAAQ,EAAE;gBACnC,iBAAiB,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACZ,iBAAiB,CAAA,EAAA,EACpB,CAAC,CAAC,GAAC,MAAA,CAAA,MAAA,CAAA,EAAA,EACE,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,eAAe,EAAE,EAAE,EAAE,WAAW,CAAC,CAAA,EAAA,CAElG,CAAC;AACH,aAAA;iBAAM,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,OAAO,EAAE;AACzC,gBAAA,IAAI,eAAe,IAAI,eAAe,CAAC,CAAC,CAAC,EAAE;AACzC,oBAAA,iBAAiB,GACZ,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,iBAAiB,CACpB,EAAA,EAAA,CAAC,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC,EAAA,CACxB,CAAC;AACH,iBAAA;gBACD,IAAI,CAAC,iBAAiB,CACpB,QAAQ,EACR,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,EAC9B,eAAe,EACf,iBAAiB,EACjB,WAAW,CACZ,CAAC;AACH,aAAA;AAAM,iBAAA;AACL,gBAAA,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,IAAG;oBACpD,IAAI,WAAW,KAAK,OAAO,EAAE;AAC3B,wBAAA,iBAAiB,GAAQ,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,iBAAiB,CAAE,EAAA,EAAA,CAAC,CAAC,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,GAAE,CAAC;AACpF,qBAAA;AACH,iBAAC,CAAC,CAAC;AACJ,aAAA;AACH,SAAC,CAAC,CAAC;AACH,QAAA,OAAO,iBAAiB,CAAC;KAC1B;AAEM,IAAA,mBAAmB,CACxB,UAAe,EACf,IAAS,EACT,WAAA,GAAmB,IAAI,CAAC,WAAW,EACnC,SAAiB,GAAA,EAAE,EACnB,MAAe,EAAA;QAEf,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAS,KAAI;YAC5C,MAAM,WAAW,GAAG,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAC9D,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,QAAQ,EAAE;AACnC,gBAAA,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAClC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,EACxB,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,EAC1B,WAAW,CAAC,CAAC,CAAC,EACd,SAAS,EACT,WAAW,CACZ,CAAC;AACH,aAAA;iBAAM,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,OAAO,EAAE;AACzC,gBAAA,SAAS,mCACJ,SAAS,CAAA,EAAA,EACZ,CAAC,WAAW,GAAG,IAAI,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GACpG,CAAC;AACH,aAAA;AACH,SAAC,CAAC,CAAC;AACH,QAAA,OAAO,SAAS,CAAC;KAClB;AAEO,IAAA,SAAS,CAAC,QAAmB,EAAE,UAAe,EAAE,IAAS,EAAE,MAAe,EAAA;QAChF,UAAU;YACR,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAS,KAAI;gBAC5C,MAAM,WAAW,GAAG,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC9D,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,QAAQ,EAAE;oBACnC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;AAClF,iBAAA;qBAAM,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,OAAO,EAAE;AACzC,oBAAA,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,OAAO,IAAG;;wBAC/C,IAAI,WAAW,KAAK,OAAO,EAAE;4BAC3B,IAAI,CAAA,MAAA,UAAU,CAAC,CAAC,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,KAAI,gBAAgB,IAAI,IAAI,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,QAAQ,EAAE;AAClF,gCAAA,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,6BAAA;AAAM,iCAAA;gCACL,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;AAC5E,6BAAA;AACF,yBAAA;AACH,qBAAC,CAAC,CAAC;AACJ,iBAAA;AACH,aAAC,CAAC,CAAC;AACL,QAAA,OAAO,QAAQ,CAAC;KACjB;AACM,IAAA,iBAAiB,CAAC,IAAS,EAAA;AAChC,QAAA,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;KAC9D;IAEO,kBAAkB,CACxB,UAAe,EACf,IAAS,EACT,cAAgD,GAAA,EAAE,EAClD,MAAe,EAAA;QAEf,UAAU;YACR,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAS,KAAI;gBAC5C,MAAM,WAAW,GAAG,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC9D,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,QAAQ,EAAE;oBACnC,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,cAAc,EAAE,WAAW,CAAC,CAAC;AACjG,iBAAA;qBAAM,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,OAAO,EAAE;AACzC,oBAAA,cAAc,GAAQ,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,cAAc,CAAE,EAAA,EAAA,CAAC,CAAC,GAAG,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,EAAA,CAAE,CAAC;AACjF,oBAAA,IAAI,CAAC,kBAAkB,CACrB,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,EAC9B,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,EAC1B,cAAc,EACd,WAAW,CACZ,CAAC;AACH,iBAAA;AACH,aAAC,CAAC,CAAC;AACL,QAAA,OAAO,cAAc,CAAC;KACvB;IACM,iBAAiB,GAAA;AACtB,QAAA,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;KAC1E;AACO,IAAA,kBAAkB,CACxB,UAAe,EACf,WAAmB,GAAA,IAAI,CAAC,WAAW,EACnC,cAAA,GAA+C,EAAE,EACjD,MAAe,EAAA;QAEf,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAS,KAAI;YAC5C,MAAM,WAAW,GAAG,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAC9D,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,QAAQ,EAAE;gBACnC,cAAc,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC,CAAC,EAAE,cAAc,EAAE,WAAW,CAAC,CAAC;AACjH,aAAA;iBAAM,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,OAAO,EAAE;AACzC,gBAAA,IAAI,SAAS,GAAG,IAAI,CAAC,mBAAmB,CACtC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,EAC9B,SAAS,EACT,WAAW,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CACxC,CAAC;AACF,gBAAA,cAAc,GAAQ,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,cAAc,CAAE,EAAA,EAAA,CAAC,CAAC,GAAG,IAAI,SAAS,CAAC,SAAS,CAAC,GAAE,CAAC;AACtE,gBAAA,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,EAAE,WAAW,EAAE,cAAc,EAAE,WAAW,CAAC,CAAC;AACnG,aAAA;AACH,SAAC,CAAC,CAAC;AACH,QAAA,OAAO,cAAc,CAAC;KACvB;;sHA9JU,yBAAyB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAzB,yBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,yBAAyB,wFAF1B,EAAE,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,CAAA;2FAED,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBAJrC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,2BAA2B;AACrC,oBAAA,QAAQ,EAAE,EAAE;iBACb,CAAA;;;MCCY,cAAc,CAAA;;2GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;4GAAd,cAAc,EAAA,YAAA,EAAA,CAJV,iBAAiB,EAAC,yBAAyB,CAAA,EAAA,OAAA,EAAA,CAEhD,mBAAmB,EAAE,YAAY,CAAA,EAAA,OAAA,EAAA,CADjC,iBAAiB,EAAC,yBAAyB,CAAA,EAAA,CAAA,CAAA;4GAG1C,cAAc,EAAA,OAAA,EAAA,CAFf,mBAAmB,EAAE,YAAY,CAAA,EAAA,CAAA,CAAA;2FAEhC,cAAc,EAAA,UAAA,EAAA,CAAA;kBAL1B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE,CAAC,iBAAiB,EAAC,yBAAyB,CAAC;AAC3D,oBAAA,OAAO,EAAE,CAAC,iBAAiB,EAAC,yBAAyB,CAAC;AACtD,oBAAA,OAAO,EAAE,CAAC,mBAAmB,EAAE,YAAY,CAAC;iBAC7C,CAAA;;;MCDY,sBAAsB,CAAA;AACjC,IAAA,WAAA,GAAA;AAEQ,QAAA,IAAA,CAAA,kBAAkB,GAAsB,MAAM,CAAC,iBAAiB,CAAC,CAAC;KAF1D;AAIT,IAAA,gBAAgB,CAAC,MAAqB,EAAA;AAC3C,QAAA,IAAI,MAAM,EAAE;YACV,MAAM,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,CAAC,GAAQ,KAAI;AACrC,gBAAA,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAA,EAAG,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAE,CAAA,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;AAC/E,aAAC,CAAC,CAAC;AACJ,SAAA;KACF;AAEO,IAAA,aAAa,CAAC,OAAiB,EAAE,QAAgB,EAAE,WAAmB,EAAA;QAC5E,MAAM,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AACtC,QAAA,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;QACxD,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;AACnC,QAAA,CAAC,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACtB,CAAC,CAAC,KAAK,EAAE,CAAC;KACX;AAEM,IAAA,wBAAwB,CAAC,OAAwB,EAAE,WAAA,GAAuB,IAAI,EAAA;AACnF,QAAA,IAAI,WAAW,EAAE;AACf,YAAA,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;AAChC,SAAA;QACD,OAAO,QAAQ,CACb,OAAO,CAAC,GAAG,CAAC,CAAC,MAAqB,KAChC,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAClB,GAAG,CAAC,CAAC,GAAQ,KAAI;AACf,YAAA,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAA,EAAG,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAE,CAAA,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;SAC9E,CAAC,CACH,CACF,CACF,CAAC,IAAI,CACJ,QAAQ,CAAC,MAAK;AACZ,YAAA,IAAI,WAAW,EAAE;AACf,gBAAA,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;AAChC,aAAA;SACF,CAAC,CACH,CAAC;KACH;;mHAxCU,sBAAsB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sBAAsB,cAFrB,MAAM,EAAA,CAAA,CAAA;2FAEP,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAHlC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;MCEY,2BAA2B,CAAA;AACtC,IAAA,WAAA,CAAoB,MAAiB,EAAA;AAAjB,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;KAAI;AAGlC,IAAA,IAAI,CAAC,OAOX,EAAA;QACC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6BAA6B,EAAE;AAC/D,YAAA,IAAI,EAAE;gBACJ,SAAS,EAAE,OAAO,CAAC,SAAS;gBAC5B,UAAU,EAAE,OAAO,CAAC,UAAU;gBAC9B,UAAU,EAAE,OAAO,CAAC,UAAU;gBAC9B,WAAW,EAAE,OAAO,CAAC,WAAW;gBAChC,MAAM,EAAE,OAAO,CAAC,MAAM;gBACtB,KAAK,EAAE,OAAO,CAAC,KAAK;AACrB,aAAA;AACF,SAAA,CAAC,CAAC;KACJ;IACM,SAAS,GAAA;AACd,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,IAAI,CACtC,IAAI,CAAC,CAAC,CAAC,EACPR,KAAG,CAAC,GAAG,IAAG;AACR,YAAA,OAAO,GAAG,CAAC;SACZ,CAAC,CACH,CAAC;KACH;IAEM,KAAK,GAAA;AACV,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACxB;;wHAlCU,2BAA2B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAxB,IAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAA3B,2BAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,2BAA2B,cAF1B,MAAM,EAAA,CAAA,CAAA;2FAEP,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBAHvC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;MCyCY,aAAa,CAAA;IAExB,WACY,CAAA,WAAuB,EACV,IAAiB,EAAA;AAD9B,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAAY;AACV,QAAA,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAa;KACrC;AAEG,IAAA,kBAAkB,CAAC,OAAgC,EAAA;QACzD,IAAG,CAAC,OAAO,EAAE;AACX,YAAA,OAAO,GAAG,IAAI,WAAW,EAAE,CAAA;AAC5B,SAAA;AACD,QAAA,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAA;AACpD,QAAA,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;AAC9C,QAAA,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;AAC7C,QAAA,OAAO,OAAO,CAAA;KACf;AA8MM,IAAA,OAAO,CAAI,MAAW,EAAE,GAAS,EAAE,UAAe,EAAE,EAAA;;AAEzD,QAAA,OAAO,GACF,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,OAAO,CACV,EAAA,EAAA,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,OAAO,CAAC,GAClD,CAAA;AACD,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAI,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC,CAAA;KACzD;AA6KM,IAAA,MAAM,CAAI,GAAQ,EAAE,OAAA,GAAe,EAAE,EAAA;;AAE1C,QAAA,OAAO,GACF,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,OAAO,CACV,EAAA,EAAA,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,OAAO,CAAC,GAClD,CAAA;QACD,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAI,GAAG,EAAE,OAAO,CAAC,CAAA;KAChD;AA8KM,IAAA,GAAG,CAAI,GAAQ,EAAE,OAAA,GAAe,EAAE,EAAA;;AAEvC,QAAA,OAAO,GACF,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,OAAO,CACV,EAAA,EAAA,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,OAAO,CAAC,GAClD,CAAA;QACD,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAI,GAAG,EAAE,OAAO,CAAC,CAAA;KAC7C;AAkLM,IAAA,IAAI,CAAI,GAAQ,EAAE,OAAA,GAAe,EAAE,EAAA;;AAExC,QAAA,OAAO,GACF,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,OAAO,CACV,EAAA,EAAA,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,OAAO,CAAC,GAClD,CAAA;QACD,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAI,GAAG,EAAE,OAAO,CAAC,CAAA;KAC9C;IA0BM,KAAK,CAAI,GAAQ,EAAE,aAAkB,EAAA;;QAE1C,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAI,GAAG,EAAE,aAAa,CAAC,CAAA;KACrD;AAiLM,IAAA,OAAO,CAAI,GAAQ,EAAE,OAAA,GAAe,EAAE,EAAA;;AAE1C,QAAA,OAAO,GACH,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,OAAO,CACV,EAAA,EAAA,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,OAAO,CAAC,GAClD,CAAA;QACA,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAI,GAAG,EAAE,OAAO,CAAC,CAAA;KAClD;AAiMM,IAAA,KAAK,CAAI,GAAQ,EAAE,IAAS,EAAE,UAAe,EAAE,EAAA;;AAEpD,QAAA,OAAO,GACF,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,OAAO,CACV,EAAA,EAAA,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,OAAO,CAAC,GAClD,CAAA;AACD,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAI,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA;KACrD;AAiMM,IAAA,IAAI,CAAI,GAAQ,EAAE,IAAS,EAAE,UAAe,EAAE,EAAA;;AAEnD,QAAA,OAAO,GACF,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,OAAO,CACV,EAAA,EAAA,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,OAAO,CAAC,GAClD,CAAA;AACD,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAI,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA;KACpD;AAgMM,IAAA,GAAG,CAAI,GAAQ,EAAE,IAAS,EAAE,UAAe,EAAE,EAAA;;AAElD,QAAA,OAAO,GACF,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,OAAO,CACV,EAAA,EAAA,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,OAAO,CAAC,GAClD,CAAA;AACD,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAI,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA;KACnD;;AAljDU,aAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,8CAId,KAAK,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAJJ,aAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,cAFZ,MAAM,EAAA,CAAA,CAAA;2FAEP,aAAa,EAAA,UAAA,EAAA,CAAA;kBAHzB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;8BAKI,MAAM;+BAAC,KAAK,CAAA;;;;AC7CjB,MAAM,iBAAiB,GAAG;;AAExB,IAAA,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,iBAAiB,EAAE;;AAG3D,IAAA;AACE,QAAA,OAAO,EAAE,iBAAiB;AAC1B,QAAA,QAAQ,EAAE,4BAA4B;AACtC,QAAA,KAAK,EAAE,IAAI;AACZ,KAAA;CACF,CAAC;SAEc,iBAAiB,GAAA;IAC/B,OAAO;;AAEL,QAAA,WAAW,EAAE,WAAW;KACzB,CAAC;AACJ,CAAC;SAEe,WAAW,GAAA;AACzB,IAAA,OAAO,YAAY,CAAC,OAAO,CAAC,eAAe,CAAE,CAAC;AAChD,CAAC;MAkBY,gBAAgB,CAAA;AAC3B,IAAA,OAAO,OAAO,GAAA;QACZ,OAAO;AACL,YAAA,QAAQ,EAAE,gBAAgB;AAC1B,YAAA,SAAS,EAAE,iBAAiB;SAC7B,CAAC;KACH;;6GANU,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,YAZzB,mBAAmB;QACnB,YAAY;QACZ,WAAW;AACX,QAAA,gBAAgB,EAAAA,IAAA,CAAA,SAAA,CAAA,EAAA,CAAA,CAAA;AASP,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,YAZzB,mBAAmB;QACnB,YAAY;QACZ,WAAW;QACX,gBAAgB;QAChB,SAAS,CAAC,OAAO,CAAC;AAChB,YAAA,kBAAkB,EAAE;AAClB,gBAAA,OAAO,EAAE,WAAW;AACpB,gBAAA,UAAU,EAAE,iBAAiB;AAC9B,aAAA;SACF,CAAC,CAAA,EAAA,CAAA,CAAA;2FAGO,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAhB5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE,EAAE;AAChB,oBAAA,OAAO,EAAE,EAAE;AACX,oBAAA,OAAO,EAAE;wBACP,mBAAmB;wBACnB,YAAY;wBACZ,WAAW;wBACX,gBAAgB;wBAChB,SAAS,CAAC,OAAO,CAAC;AAChB,4BAAA,kBAAkB,EAAE;AAClB,gCAAA,OAAO,EAAE,WAAW;AACpB,gCAAA,UAAU,EAAE,iBAAiB;AAC9B,6BAAA;yBACF,CAAC;AACH,qBAAA;iBACF,CAAA;;;ACdD,MAAM,cAAc,GAAuB;AACzC,IAAA,UAAU,EAAE,MAAM;AAClB,IAAA,iBAAiB,EAAE,YAAY;AAC/B,IAAA,WAAW,EAAE,SAAS;AACtB,IAAA,YAAY,EAAE,cAAc;AAE5B,IAAA,OAAO,EAAE,EAAE;AACX,IAAA,oBAAoB,EAAE,KAAK;AAC3B,IAAA,cAAc,EAAE,EAAE;AAClB,IAAA,iBAAiB,EAAE,KAAK;AACxB,IAAA,aAAa,EAAE,KAAK;AAEpB,IAAA,QAAQ,EAAE,KAAK;AACf,IAAA,iBAAiB,EAAE,KAAK;AACxB,IAAA,QAAQ,EAAE,CAAC;AAEX,IAAA,YAAY,EAAE,KAAK;AAEnB,IAAA,YAAY,EAAE,GAAG,OAAM;AACvB,IAAA,QAAQ,EAAE,GAAG,OAAM;AACnB,IAAA,WAAW,EAAE,GAAG,OAAM;AACtB,IAAA,gBAAgB,EAAE,SAAS,OAAM;CAClC,CAAC;AAQI,MAAO,qBAAsB,SAAQ,gBAAgB,CAAA;AAgGzD,IAAA,WAAA,CACU,WAAwB,EACxB,aAA+B,EAC/B,iBAAoC,EAAA;AAE5C,QAAA,KAAK,EAAE,CAAC;AAJA,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;AACxB,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAkB;AAC/B,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAmB;;AAjGf,QAAA,IAAc,CAAA,cAAA,GAAgC,EAAE,CAAC;AAMhD,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,YAAY,EAAsB,CAAC;AAC1D,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,EAA2B,CAAC;AAG9D,QAAA,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;AACpB,QAAA,IAAiB,CAAA,iBAAA,GAAW,kBAAkB,CAAC;AACnD,QAAA,IAAa,CAAA,aAAA,GAAW,WAAW,CAAC;AACnC,QAAA,IAAc,CAAA,cAAA,GAAW,SAAS,CAAC;AACpC,QAAA,IAAa,CAAA,aAAA,GAAW,QAAQ,CAAC;AAC7B,QAAA,IAAiB,CAAA,iBAAA,GAAW,UAAU,CAAC;AACnD,QAAA,IAAK,CAAA,KAAA,GAAW,IAAI,CAAC;AAUrC,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,kBAAkB,EAAO,CAAC;AAC3C,QAAA,IAAgB,CAAA,gBAAA,GAAa,EAAE,CAAC;AAChC,QAAA,IAAW,CAAA,WAAA,GAAuB,cAAc,CAAC;AAEjD,QAAA,IAAW,CAAA,WAAA,GAAuB,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;AACvD,QAAA,IAAa,CAAA,aAAA,GAAW,CAAC,CAAC;AAC1B,QAAA,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;;AAGlB,QAAA,IAAK,CAAA,KAAA,GAAQ,EAAE,CAAC;AAChB,QAAA,IAAiB,CAAA,iBAAA,GAAW,EAAE,CAAC;AAC/B,QAAA,IAAY,CAAA,YAAA,GAAQ,EAAE,CAAC;QACvB,IAAA,CAAA,sBAAsB,GAAa,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;;AAG7D,QAAA,IAAoB,CAAA,oBAAA,GAAY,KAAK,CAAC;AAEtC,QAAA,IAAmB,CAAA,mBAAA,GAAQ,EAAE,CAAC;;AAG9B,QAAA,IAAY,CAAA,YAAA,GAAU,EAAE,CAAC;AACzB,QAAA,IAAA,CAAA,gBAAgB,GAAG,CAAC,GAAQ,KAAc,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC;;QAGlG,IAAW,CAAA,WAAA,GAAG,CAAC,CAAM,KAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAM,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;AAC1D,QAAA,IAAI,CAAA,IAAA,GAAG,CAAC,CAAM,KAAU,EAAE,CAAC,CAAC,CAAC,CAAC;AAC9B,QAAA,IAAS,CAAA,SAAA,GAAG,CAAC,KAAU,EAAE,IAAS,EAAE,IAAS,EAAE,IAAS,KAAS;;AACtE,YAAA,MAAM,WAAW,GAAG,IAAI,IAAI,IAAI,GAAG,cAAc,GAAG,aAAa,CAAC;AAClE,YAAA,IAAI,OAAO,CAAC;;AAGZ,YAAA,IAAI,CAAC,IAAI,IAAI,QAAQ,IAAI,IAAI,IAAI,cAAc,MAAK,KAAK,aAAL,KAAK,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAL,KAAK,CAAE,KAAK,CAAA,EAAE;AAChE,gBAAA,OAAO,KAAK,CAAC,WAAW,CAAC,CAAC;AAC3B,aAAA;AAED,YAAA,IAAI,IAAI,IAAI,QAAQ,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACpD,gBAAA,IAAI,CAAC,SAAS,CAAC,CAAC,CAAM,MAAM,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;AAC3C,aAAA;AAAM,iBAAA;gBACL,OAAO,GAAG,IAAI,CAAC;AAChB,aAAA;;AAGD,YAAA,QACE,CAAA,CAAA,EAAA,GAAA,OAAO,aAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,IAAI,CAAC,CAAC,CAAM,KAAI;AACvB,gBAAA,IAAI,CAAC,KAAK;AAAE,oBAAA,OAAO,KAAK,CAAC;;AACpB,oBAAA,OAAO,CAAC,OAAO,KAAK,KAAK,QAAQ,KAAK,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,CAAA;AAC3F,aAAC,CAAC,MAAG,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,CAAC,KAAI,KAAK,EAC1B;AACJ,SAAC,CAAC;QACK,IAAA,CAAA,OAAO,GAAG,CAAC,KAAU,EAAE,IAAS,KAAS;;;YAE9C,QACE,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAM,KAAI;AACnB,gBAAA,IAAI,CAAC,KAAK;AAAE,oBAAA,OAAO,KAAK,CAAC;;AACpB,oBAAA,OAAO,CAAC,CAAC,KAAK,KAAK,KAAK,CAAA;AAC/B,aAAC,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,GAAG,KAAI,KAAK,EAChB;AACJ,SAAC,CAAC;AAEK,QAAA,IAAQ,CAAA,QAAA,GAAG,KAAK,CAAC;KAevB;IAEM,eAAe,GAAA;QACpB,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;IAEM,QAAQ,GAAA;AACb,QAAA,IAAI,CAAC,EAAE,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,IAAI,CAAC,KAAK,CAAE,CAAC;AAC5B,QAAA,IAAI,CAAC,MAAM,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,IAAI,CAAC,KAAK,CAAE,CAAC;AAEhC,QAAA,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,IAAG;AAChC,YAAA,IAAI,GAAG,CAAC,UAAU,KAAK,SAAS,EAAE;AAChC,gBAAA,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,aAAA;AACD,YAAA,IAAI,GAAG,CAAC,UAAU,KAAK,SAAS,EAAE;AAChC,gBAAA,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,aAAA;AACD,YAAA,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE;AACrB,gBAAA,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC;AACzB,aAAA;YACD,IAAI,GAAG,CAAC,SAAS,EAAE;AACjB,gBAAA,GAAG,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,KAAK,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;AACjF,aAAA;YAED,IAAI,GAAG,CAAC,MAAM,EAAE;AACd,gBAAA,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAM,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;AAClD,aAAA;AAED,YAAA,IAAI,GAAG,CAAC,IAAI,IAAI,MAAM,EAAE;AACtB,gBAAA,GAAG,CAAC,UAAU,GAAG,KAAK,CAAC;AACvB,gBAAA,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC;AACtB,gBAAA,GAAG,CAAC,UAAU,GAAG,KAAK,CAAC;AACvB,gBAAA,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE;AAClB,oBAAA,OAAO,CAAC,KAAK,CAAC,8CAA8C,CAAC,CAAC;AAC/D,iBAAA;AACF,aAAA;AACH,SAAC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,cAAc;YAC3C,mBAAmB,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC;QAC9E,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;AAC9C,YAAA,mBAAmB,CAAC,IAAI,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;AACpD,YAAA,mBAAmB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,CAAC;AAC3D,SAAA;AACD,QAAA,mBAAmB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,CAAC;QAE1D,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC5B;AAEM,IAAA,WAAW,CAAC,OAAsB,EAAA;;AACvC,QAAA,IAAI,OAAO,EAAE;AACX,YAAA,IAAI,CAAC,gBAAgB,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc,MACvC,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,CAAC,CAAC,GAAQ,KAAK,GAAG,CAAC,QAAQ,IAAI,IAAI,CAC1C,CAAA,GAAG,CAAC,CAAC,GAAQ,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;AAC9B,YAAA,IAAI,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,WAAW,0CAAE,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,KAAI,EAAC,CAAA,EAAA,GAAA,IAAI,CAAC,WAAW,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,oBAAoB,CAAA;gBAAE,IAAI,CAAC,cAAc,EAAE,CAAC;YACxG,IACE,OAAO,CAAC,cAAc,CAAC;AACvB,gBAAA,OAAO,CAAC,cAAc,CAAC,CAAC,cAAc,CAAC;gBACvC,OAAO,CAAC,cAAc,CAAC,CAAC,cAAc,CAAC,CAAC,cAAc,CAAC,EACvD;AACA,gBAAA,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC,cAAc,CAAC,CAAC,cAAc,CAAC,CAAC;AACzF,gBAAA,IAAI,CAAC,WAAW,CAAC,YAAY,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC,cAAc,CAAC,CAAC,cAAc,CAAC,CAAC;AACxF,gBAAA,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,cAAc,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;AAC7E,aAAA;AACF,SAAA;KACF;IAEM,MAAM,GAAA;AACX,QAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvB;IAEM,OAAO,GAAA;AACZ,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;IAEM,MAAM,GAAA;QACX,OAAO,CAAC,GAAQ,KAAS;;AACvB,YAAA,GAAG,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC;AACzB,YAAA,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE;AACrB,gBAAA,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;oBAClD,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,KAAK,0CAAE,QAAQ,CAAC,GAAG,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;AACrE,iBAAA;AACF,aAAA;YACD,IAAI,IAAI,CAAC,WAAW,CAAC,gBAAgB,IAAI,IAAI,CAAC,KAAK,EAAE;gBACnD,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC9C,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;AACzD,aAAA;AACD,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,YAAA,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC;AACrB,SAAC,CAAC;KACH;IAEO,mBAAmB,GAAA;;QACzB,IAAI,CAAC,cAAc,EAAE,CAAC;AAEtB,QAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,IAAI,MAAM,IAAI,IAAI,CAAC,WAAW,CAAC,UAAU,IAAI,QAAQ,CAAC;AAEpG,QAAA,IAAI,CAAC,gBAAgB,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,CAAC,CAAC,GAAQ,KAAK,GAAG,CAAC,QAAQ,IAAI,IAAI,CAAE,CAAA,GAAG,CAAC,CAAC,GAAQ,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;AAEnH,QAAA,IAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,WAAW,CAAC,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,KAAI,CAAC,IAAI,CAAC,WAAW,CAAC,oBAAoB;YAAE,IAAI,CAAC,cAAc,EAAE,CAAC;QACtG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QAEpD,IAAI,IAAI,CAAC,WAAW,EAAE;AACpB,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CAAC;AAC5D,gBAAA,IAAI,EAAE,CAAC,GAAQ,KAAI;AACjB,oBAAA,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;oBACjC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC;AACnC,oBAAA,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,aAAa,CAAC;oBACvC,IAAI,CAAC,WAAW,EAAE,CAAC;iBACpB;AACD,gBAAA,KAAK,EAAE,MAAM,IAAI,CAAC,WAAW,EAAE;AAChC,aAAA,CAAC,CAAC;AACJ,SAAA;QAED,IAAI,IAAI,CAAC,YAAY;YAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;QAE/G,IAAI,CAAC,kBAAkB,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,WAAW,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,UAAU,CAAC;AAEvD,QAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,WAAW,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,CAAC,CAAC,OAA4B,KAAI;YAClE,IAAI,OAAO,CAAC,MAAM,EAAE;AAClB,gBAAA,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;AAChC,aAAA;AACH,SAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;IAEM,WAAW,GAAA;QAChB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC1B,QAAA,IAAI,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,MAAM,EAAE;YACxC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC5C,SAAA;AAAM,aAAA;YACL,IAAI,IAAI,CAAC,WAAW,EAAE;AACpB,gBAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,gBAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC;AAC/B,qBAAA,IAAI,CACH,QAAQ,CAAC,MAAK;AACZ,oBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,IAAI,CAAC,WAAW,EAAE,CAAC;AACrB,iBAAC,CAAC,CACH;qBACA,SAAS,CAAC,GAAG,IAAG;AACf,oBAAA,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;oBACjC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC;AACnC,oBAAA,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,aAAa,CAAC;AACzC,iBAAC,CAAC,CAAC;AACN,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC;AACnC,qBAAA,IAAI,CACH,QAAQ,CAAC,MAAK;AACZ,oBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,IAAI,CAAC,WAAW,EAAE,CAAC;AACrB,iBAAC,CAAC,CACH;qBACA,SAAS,CAAC,GAAG,IAAG;AACf,oBAAA,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;oBACjC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC;AACnC,oBAAA,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,aAAa,CAAC;AACzC,iBAAC,CAAC,CAAC;AACN,aAAA;AACF,SAAA;KACF;IAEO,YAAY,GAAA;AAClB,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACtB,QAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;KAC/B;IAEO,WAAW,GAAA;AACjB,QAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACvB,QAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;KAC/B;AAEO,IAAA,gBAAgB,CAAC,GAAwB,EAAA;AAC/C,QAAA,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,KAAK,KAAI;YAC9C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC;AAAE,gBAAA,MAAM,CAAC,EAAE,GAAG,KAAK,CAAC;AAC3D,YAAA,OAAO,MAAM,CAAC;AAChB,SAAC,CAAC,CAAC;AAEH,QAAA,OAAO,GAAG,CAAC;KACZ;IAEO,cAAc,GAAA;;QACpB,IAAI,CAAC,WAAW,GAAG;YACjB,UAAU,EAAE,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,IAAG,MAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,UAAU,GAAG,cAAc,CAAC,UAAU;AACrG,YAAA,iBAAiB,EAAE,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,0CAAE,iBAAiB;AACrD,kBAAE,IAAI,CAAC,YAAY,CAAC,iBAAiB;kBACnC,cAAc,CAAC,iBAAiB;YACpC,WAAW,EAAE,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,WAAW,IAAG,MAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,GAAG,cAAc,CAAC,WAAW;YACzG,YAAY,EAAE,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,YAAY,IAAG,MAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,YAAY,GAAG,cAAc,CAAC,YAAY;YAC7G,WAAW,EAAE,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,WAAW,IAAG,MAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,GAAG,cAAc,CAAC,WAAW;AACzG,YAAA,iBAAiB,EAAE,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,0CAAE,iBAAiB;AACrD,kBAAE,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,0CAAE,iBAAiB;kBACpC,cAAc,CAAC,iBAAiB;YACpC,WAAW,EAAE,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,WAAW,IAAG,MAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,GAAG,cAAc,CAAC,WAAW;AACzG,YAAA,iBAAiB,EAAE,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,0CAAE,iBAAiB;AACrD,kBAAE,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,0CAAE,iBAAiB;kBACpC,cAAc,CAAC,iBAAiB;YACpC,OAAO,EAAE,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,IAAG,MAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,GAAG,cAAc,CAAC,OAAO;AACzF,YAAA,oBAAoB,EAAE,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,0CAAE,oBAAoB;AAC3D,kBAAE,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,0CAAE,oBAAoB;kBACvC,cAAc,CAAC,oBAAoB;AACvC,YAAA,cAAc,EAAE,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,0CAAE,cAAc;AAC/C,kBAAE,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,0CAAE,cAAc;kBACjC,cAAc,CAAC,cAAc;AACjC,YAAA,iBAAiB,EAAE,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,0CAAE,iBAAiB;AACrD,kBAAE,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,0CAAE,iBAAiB;kBACpC,cAAc,CAAC,iBAAiB;YACpC,aAAa,EAAE,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,aAAa,IAAG,MAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,aAAa,GAAG,cAAc,CAAC,aAAa;AACjH,YAAA,iBAAiB,EAAE,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,0CAAE,iBAAiB;AACrD,kBAAE,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,0CAAE,iBAAiB;kBACpC,cAAc,CAAC,iBAAiB;AACpC,YAAA,cAAc,EAAE,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,0CAAE,cAAc;AAC/C,kBAAE,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,0CAAE,cAAc;kBACjC,cAAc,CAAC,cAAc;YACjC,QAAQ,EAAE,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,IAAG,MAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,GAAG,cAAc,CAAC,QAAQ;YAC7F,YAAY,EAAE,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,YAAY,IAAG,MAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,YAAY,GAAG,cAAc,CAAC,YAAY;YAC7G,QAAQ,EAAE,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,IAAG,OAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,GAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,GAAA,CAAA,QAAQ,GAAG,cAAc,CAAC,QAAQ;YAC7F,WAAW,EAAE,CAAA,CAAA,GAAA,GAAA,IAAI,CAAC,YAAY,MAAA,IAAA,IAAA,GAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,GAAA,CAAE,WAAW,IAAG,OAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,GAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,GAAA,CAAA,WAAW,GAAG,cAAc,CAAC,WAAW;AACzG,YAAA,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,cAAc,CAAC,YAAY;AAC3G,YAAA,gBAAgB,EAAE,CAAA,CAAA,GAAA,GAAA,IAAI,CAAC,YAAY,4CAAE,gBAAgB;AACnD,kBAAE,CAAA,GAAA,GAAA,IAAI,CAAC,YAAY,4CAAE,gBAAgB;kBACnC,cAAc,CAAC,gBAAgB;SACpC,CAAC;AAEF,QAAA,IAAI,OAAA,IAAI,CAAC,YAAY,MAAA,IAAA,IAAA,GAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,GAAA,CAAE,QAAQ,EAAE;YAC/B,IAAI,CAAC,QAAQ,GAAG,CAAA,GAAA,GAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,GAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,GAAA,CAAA,QAAQ,CAAC;AAC5C,YAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,GAA8B,KAAI;AAC7D,gBAAA,GAAG,CAAC,UAAU,GAAG,KAAK,CAAC;AACvB,gBAAA,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC;AACxB,aAAC,CAAC,CAAC;AACJ,SAAA;AAED,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,CAAA,CAAA,GAAA,GAAA,IAAI,CAAC,WAAW,MAAA,IAAA,IAAA,GAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,GAAA,CAAE,QAAQ,KAAI,CAAC,CAAC;KACzD;IAEO,eAAe,GAAA;QACrB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAChE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAC1D,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QACxD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QACxD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;AAChE,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,IAAY,EAAE,QAAgB,EAAE,MAAc,KAAS;AAC3F,YAAA,MAAM,KAAK,GAAG,IAAI,GAAG,QAAQ,GAAG,CAAC,CAAC;YAClC,MAAM,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,QAAQ,CAAC;YAClC,OAAO,CAAA,EAAG,KAAK,CAAA,GAAA,EAAM,GAAG,CAAA,CAAA,EAAI,IAAI,CAAC,KAAK,CAAA,CAAA,EAAI,MAAM,CAAA,CAAE,CAAC;AACrD,SAAC,CAAC;KACH;AAEM,IAAA,QAAQ,CAAC,KAAgB,EAAA;AAC9B,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;AACpD,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QAEnD,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;IAEM,WAAW,CAAC,IAAS,EAAE,KAAU,EAAA;AACtC,QAAA,IAAI,OAAO,CAAC;AACZ,QAAA,IAAI,IAAI,EAAE;AACR,YAAA,IAAI,OAAO,IAAI,IAAI,UAAU,EAAE;AAC7B,gBAAA,OAAO,IAAI,CAAC;AACb,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;oBACvB,OAAO,GAAG,IAAI,CAAC;AAChB,iBAAA;AAAM,qBAAA;AACL,oBAAA,IAAI,CAAC,SAAS,CAAC,CAAC,CAAM,MAAM,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;AAC3C,iBAAA;AACF,aAAA;AAED,YAAA,OAAO,OAAO,KAAP,IAAA,IAAA,OAAO,uBAAP,OAAO,CAAE,MAAM,CAAC,CAAC,CAAM,KAC5B,CAAC,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAC,OAAO,KAAK,IAAI,QAAQ,GAAG,KAAK,GAAG,KAAK,CAAC,WAAW,EAAE,WAAW,EAAE,CAAC,CAC3G,CAAC;AACH,SAAA;KACF;IAEM,OAAO,CAAC,GAAQ,EAAE,GAAQ,EAAA;AAC/B,QAAA,IAAI,OAAO,GAAG,CAAC,UAAU,IAAI,SAAS,EAAE;YACtC,OAAO,GAAG,CAAC,UAAU,CAAC;AACvB,SAAA;AAED,QAAA,OAAO,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;KAC5B;AAEM,IAAA,OAAO,CAAC,GAAQ,EAAA;AACrB,QAAA,IAAI,IAAI,GAAG,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC7C,IAAI,CAAC,sBAAsB,EAAE,CAAC;AAC9B,QAAA,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE;AACjC,YAAA,MAAM,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAM,GAAG,CAAA,EAAK,IAAI,CAAC,KAAK,CAAI,EAAA,IAAI,CAAC,CAAC;YACpF,IAAI,YAAY,YAAYiC,YAAU,EAAE;AACtC,gBAAA,YAAY,aAAZ,YAAY,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZ,YAAY,CAAE,SAAS,CAAC;oBACtB,IAAI,EAAE,MAAK;AACT,wBAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACtB,wBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AACxB,wBAAA,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC;AACnB,wBAAA,GAAG,CAAC,QAAQ,GAAG,KAAK,CAAC;wBACrB,IAAI,CAAC,WAAW,EAAE,CAAC;qBACpB;AACF,iBAAA,CAAC,CAAC;AACJ,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACtB,gBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AACxB,gBAAA,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC;AACnB,gBAAA,GAAG,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,WAAW,EAAE,CAAC;AACpB,aAAA;AACF,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;AAC5C,SAAA;KACF;IAEM,cAAc,CAAC,OAAgB,IAAI,EAAA;AACxC,QAAA,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,SAAS,CAAC;AAAE,gBAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACvF,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,IAAI,CAAC,WAAW,CAAC,oBAAoB;AACvC,gBAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,GAAW,KAAK,GAAG,KAAK,SAAS,CAAC,CAAC;AAC5F,SAAA;KACF;AAEM,IAAA,UAAU,CAAC,CAAU,EAAA;AAC1B,QAAA,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;QAEnB,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACtD,IAAI,IAAI,CAAC,QAAQ,EAAE;AACjB,YAAA,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,MAAM,CAAC;AACtC,SAAA;KACF;AAEM,IAAA,YAAY,CAAC,CAAM,EAAE,EAAU,EAAE,GAAW,EAAA;AACjD,QAAA,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;AAAE,YAAA,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACzC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KACzB;IAEM,SAAS,GAAA;AACd,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACrB,QAAA,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;AAEhC,QAAA,IAAI,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE;YACrC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC5C,SAAA;QAED,IAAI,EAAE,GAAQ,EAAE,CAAC;AACjB,QAAA,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;AACnB,QAAA,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC;AACjB,QAAA,EAAE,CAAC,QAAQ,GAAG,IAAI,CAAC;AACnB,QAAA,EAAE,CAAC,MAAM,GAAG,KAAK,CAAC;AAElB,QAAA,IAAI,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;AAClC,YAAA,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;AACrB,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YACjC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;AAC7C,SAAA;KACF;AAEM,IAAA,UAAU,CAAC,EAAO,EAAA;QACvB,MAAM,IAAI,GAAQ,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;AAEzF,QAAA,IAAI,IAAI,EAAE;AACR,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,KAAI;AACxE,gBAAA,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;oBAClC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;AAC7C,iBAAA;AACH,aAAC,CAAC,CAAC;AACJ,SAAA;AACD,QAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvB;IAEM,aAAa,CAAC,OAAgB,IAAI,EAAA;AACvC,QAAA,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,cAAc,CAAC;AAAE,gBAAA,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;AACpG,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,GAAW,KAAK,GAAG,KAAK,cAAc,CAAC,CAAC;AAC/F,SAAA;KACF;;IAGM,kBAAkB,CAAC,KAA2C,EAAE,GAAQ,EAAA;;AAC7E,QAAA,IAAI,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE;AACzC,YAAA,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;YAC9B,CAAA,EAAA,GAAA,IAAI,CAAC,WAAW,CAAC,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,CAAC,CAAC,MAAW,KAAI;gBAChD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;AAC/F,aAAC,CAAC,CAAC;AAEH,YAAA,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;YACjC,IAAI,CAAC,uBAAuB,GAAG;gBAC7B,CAAC,EAAE,KAAK,CAAC,OAAO;gBAChB,CAAC,EAAE,KAAK,CAAC,OAAO;aACjB,CAAC;AACH,SAAA;KACF;IAIM,KAAK,GAAA;AACV,QAAA,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;KACnC;;AAGM,IAAA,WAAW,CAAC,EAAsD,EAAA;QACvE,IAAI,IAAI,CAAC,UAAU;YAAE,OAAO;AAC5B,QAAA,IAAI,EAAE,CAAC,SAAS,KAAK,EAAE,EAAE;AACvB,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,EAAE,CAAC,MAAM,GAAG,GAAG,GAAG,EAAE,CAAC,SAAS,CAAC;AACxD,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;AAC9B,SAAA;QAED,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;;IAGM,aAAa,CAAC,EAAO,EAAE,GAAW,EAAA;AACvC,QAAA,IAAI,EAAE,CAAC,OAAO,KAAK,EAAE;YAAE,OAAO;AAE9B,QAAA,IAAI,EAAE,CAAC,MAAM,CAAC,KAAK,KAAK,EAAE,EAAE;YAC1B,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;AAC1C,YAAA,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,GAAG,CAAC;AAClC,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;AAC/B,YAAA,OAAO,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC;AACnC,SAAA;QAED,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;IAEM,eAAe,CAAC,GAAQ,EAAE,IAAS,EAAA;QACxC,IAAI,OAAO,GAAG,KAAK,QAAQ;AAAE,YAAA,MAAM,+BAA+B,CAAC;QACnE,IAAI,OAAO,IAAI,KAAK,QAAQ;AAAE,YAAA,MAAM,+BAA+B,CAAC;;QAGpE,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;AAElD,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,UAAU,IAA0B,EAAE,IAAqB,EAAA;AACvF,YAAA,OAAO,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;AACvC,SAAC,EAAE,GAAG,IAAI,IAAI,CAAC,CAAC;KACjB;IAEM,cAAc,GAAA;QACnB,IAAI,EAAE,GAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,GAA8B,KAAI;YAC7D,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,YAAY,CAAC;AACjC,SAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;KACnC;AAEM,IAAA,QAAQ,CAAC,GAAQ,EAAA;AACtB,QAAA,IAAI,IAAI,CAAC,UAAU,KAAK,GAAG,CAAC,EAAE;AAAE,YAAA,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;;AAChD,YAAA,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,EAAE,CAAC;QAE9B,IAAI,CAAC,WAAW,CAAC,QAAQ,IAAI,CAAC,GAAG,CAAC,MAAM;cACpC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC;AAChC,cAAE,OAAO,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;KAChD;;AAGM,IAAA,eAAe,CAAC,GAAQ,EAAA;AAC7B,QAAA,IAAI,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC;YAAE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC;;AAC9F,YAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAEjC,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,YAAY,EAAE,aAAa,EAAE,GAAG,EAAE,CAAC,CAAC;KAC7E;IAEM,kBAAkB,GAAA;AACvB,QAAA,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;AACvB,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,YAAY,EAAE,aAAa,EAAE,EAAE,EAAE,CAAC,CAAC;KAC5E;AAEM,IAAA,WAAW,CAAC,GAAS,EAAA;AAC1B,QAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AACxB,QAAA,IAAI,GAAG,EAAE;AACP,YAAA,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;AAC1B,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC3B,SAAA;KACF;IAEO,kBAAkB,GAAA;QACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAQ,KAAI;AACxC,YAAA,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;AAC3B,SAAC,CAAC,CAAC;KACJ;AAEO,IAAA,cAAc,CAAC,GAAQ,EAAA;AAC7B,QAAA,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC;AACnB,QAAA,GAAG,CAAC,QAAQ,GAAG,KAAK,CAAC;QACrB,IAAI,GAAG,CAAC,MAAM,EAAE;AACd,YAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;AAC9B,SAAA;AACD,QAAA,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC;KACpB;AAEM,IAAA,eAAe,CAAC,MAA2B,EAAA;QAChD,IAAI,MAAM,CAAC,MAAM,EAAE;AACjB,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACxB,SAAA;KACF;IAEM,aAAa,CAAC,MAA2B,EAAE,OAAY,EAAA;QAC5D,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACtC,IAAI,MAAM,YAAYA,YAAU,EAAE;AAChC,YAAA,MAAM,aAAN,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAN,MAAM,CAAE,SAAS,CAAC;AAChB,gBAAA,IAAI,EAAE,MAAM,IAAI,CAAC,WAAW,EAAE;AAC/B,aAAA,CAAC,CAAC;AACJ,SAAA;AACD,QAAA,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;KAC9B;;kHArmBU,qBAAqB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAjC,EAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAkC,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;sGAArB,qBAAqB,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,EAAA,cAAA,EAAA,CAAA,eAAA,EAAA,gBAAA,CAAA,EAAA,YAAA,EAAA,CAAA,aAAA,EAAA,cAAA,CAAA,EAAA,WAAA,EAAA,CAAA,YAAA,EAAA,aAAA,CAAA,EAAA,WAAA,EAAA,CAAA,YAAA,EAAA,aAAA,CAAA,EAAA,YAAA,EAAA,CAAA,aAAA,EAAA,cAAA,CAAA,EAAA,KAAA,EAAA,CAAA,MAAA,EAAA,OAAA,CAAA,EAAA,UAAA,EAAA,CAAA,WAAA,EAAA,YAAA,CAAA,EAAA,iBAAA,EAAA,mBAAA,EAAA,aAAA,EAAA,eAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,mBAAA,EAAA,KAAA,EAAA,OAAA,EAAA,eAAA,EAAA,CAAA,gBAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA,cAAA,EAAA,eAAA,EAAA,YAAA,EAAA,aAAA,EAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,gBAAA,EAAA,SAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,EAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,WAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EA0BrB,YAAY,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,eAAA,EAAA,IAAA,EAAA,aAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECxFzB,otqBAmeA,EAAA,MAAA,EAAA,CAAA,siDAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA9B,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA+B,kBAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,OAAA,EAAA,OAAA,EAAA,MAAA,EAAA,MAAA,EAAA,YAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,uBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,eAAA,CAAA,EAAA,OAAA,EAAA,CAAA,wBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,sBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,MAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,qBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,yBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,EAAA,UAAA,EAAA,cAAA,EAAA,WAAA,EAAA,eAAA,EAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,kBAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,mBAAA,EAAA,aAAA,EAAA,YAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,wBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,uBAAA,EAAA,wBAAA,EAAA,YAAA,EAAA,aAAA,EAAA,MAAA,EAAA,SAAA,EAAA,WAAA,EAAA,YAAA,EAAA,aAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,eAAA,EAAA,mBAAA,EAAA,OAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,0BAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,MAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,uBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,QAAA,EAAA,QAAA,EAAA,6BAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,uBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,aAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,wBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,YAAA,EAAA,QAAA,EAAA,oCAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,MAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,YAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,WAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,eAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,qBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,aAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,OAAA,EAAA,uBAAA,EAAA,cAAA,CAAA,EAAA,QAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,6GAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA9C,IAAA,CAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDraa,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBANjC,SAAS;+BACE,eAAe,EAAA,aAAA,EAGV,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,otqBAAA,EAAA,MAAA,EAAA,CAAA,siDAAA,CAAA,EAAA,CAAA;2JAIN,cAAc,EAAA,CAAA;sBAA5C,KAAK;uBAAC,eAAe,CAAA;gBACO,YAAY,EAAA,CAAA;sBAAxC,KAAK;uBAAC,aAAa,CAAA;gBAEQ,WAAW,EAAA,CAAA;sBAAtC,KAAK;uBAAC,YAAY,CAAA;gBACS,WAAW,EAAA,CAAA;sBAAtC,KAAK;uBAAC,YAAY,CAAA;gBACU,YAAY,EAAA,CAAA;sBAAxC,KAAK;uBAAC,aAAa,CAAA;gBACY,cAAc,EAAA,CAAA;sBAA7C,MAAM;uBAAC,eAAe,CAAA;gBACO,YAAY,EAAA,CAAA;sBAAzC,MAAM;uBAAC,aAAa,CAAA;gBAEC,KAAK,EAAA,CAAA;sBAA1B,KAAK;uBAAC,MAAM,CAAA;gBACc,UAAU,EAAA,CAAA;sBAApC,KAAK;uBAAC,WAAW,CAAA;gBACiB,iBAAiB,EAAA,CAAA;sBAAnD,KAAK;uBAAC,mBAAmB,CAAA;gBACK,aAAa,EAAA,CAAA;sBAA3C,KAAK;uBAAC,eAAe,CAAA;gBACU,cAAc,EAAA,CAAA;sBAA7C,KAAK;uBAAC,gBAAgB,CAAA;gBACQ,aAAa,EAAA,CAAA;sBAA3C,KAAK;uBAAC,eAAe,CAAA;gBACa,iBAAiB,EAAA,CAAA;sBAAnD,KAAK;uBAAC,mBAAmB,CAAA;gBACH,KAAK,EAAA,CAAA;sBAA3B,KAAK;uBAAC,OAAO,CAAA;gBAEkB,eAAe,EAAA,CAAA;sBAA9C,KAAK;uBAAC,gBAAgB,CAAA;gBAMS,SAAS,EAAA,CAAA;sBAAxC,SAAS;uBAAC,YAAY,CAAA;gBA2dhB,KAAK,EAAA,CAAA;sBAFX,YAAY;uBAAC,gBAAgB,CAAA;;sBAC7B,YAAY;uBAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,CAAA;;;AErhBvC,MAAO,kCAAmC,SAAQ,gBAAgB,CAAA;IAuBtE,WAA2B,CAAA,eAAkC,EAAU,EAAe,EAAA;AACpF,QAAA,KAAK,EAAE,CAAC;AADiB,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAmB;AAAU,QAAA,IAAE,CAAA,EAAA,GAAF,EAAE,CAAa;AArBtE,QAAA,IAAW,CAAA,WAAA,GAAuB,EAAE,CAAC;AAQrB,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,YAAY,EAAkD,CAAC;AAI7G,QAAA,IAAA,CAAA,WAAW,GAAuB,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,IAAI,CAAC,EAAE,CAAC;AAIpF,QAAA,IAAW,CAAA,WAAA,GAAG,KAAK,CAAC;KAO1B;IAEM,QAAQ,GAAA;;AACb,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,IAAG;AACjE,YAAA,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;AACrB,YAAA,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,YAAY,EAAE,CAAC;AAEpB,YAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AAC1B,SAAC,CAAC,CAAC;AAEH,QAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,WAAW,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,CAAC,CAAC,OAA4B,KAAI;YAClE,IAAI,OAAO,CAAC,MAAM,EAAE;AAClB,gBAAA,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;AAChC,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;AAEM,IAAA,WAAW,CAAC,MAAc,EAAA;AAC/B,QAAA,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AACzB,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AACrB,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,MAAM,CAAC,CAAC;QAClE,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,UAAU,CAAC,MAAK;AACd,YAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;;AAExB,YAAA,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,CAAC;YACrC,IAAI,IAAI,CAAC,oBAAoB,EAAE;AAC7B,gBAAA,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;AACnC,aAAA;SACF,EAAE,CAAC,CAAC,CAAC;KACP;AAEM,IAAA,WAAW,CAAC,OAA2B,EAAA;;QAC5C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,aAAa,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,KAAI,EAAE,EAAE,CAAC,CAAC;KAC/E;IAEM,MAAM,GAAA;QACX,OAAO,CAAC,GAAQ,KAAS;;AACvB,YAAA,GAAG,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC;AACzB,YAAA,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE;AACrB,gBAAA,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;AAClD,oBAAA,CAAA,EAAA,GAAA,MAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC,GAAG,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAChD,iBAAA;AACF,aAAA;AACD,YAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACpB,YAAA,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC;AACrB,SAAC,CAAC;KACH;IAEM,YAAY,GAAA;;QACjB,IAAI,CAAC,MAAM,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC;QAChC,CAAA,EAAA,GAAA,IAAI,CAAC,aAAa,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,aAAa,CAAC,OAAO,CAAC,EAAE,IAAG;AAC7C,YAAA,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;AACtD,SAAC,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,SAAS,EAAE;;YAElB,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;YAChC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AACrC,SAAA;KACF;IAEM,cAAc,GAAA;;AACnB,QAAA,IAAI,uBAAuB,GAAG,IAAI,CAAC,eAAe,CAAC;QACnD,IAAI,KAAK,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,aAAa,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,CAAC;QACtC,OAAO,CAAC,OAA2B,KAAqC;AACtE,YAAA,OAAO,uBAAuB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AACjD,SAAC,CAAC;KACH;;+HA9FU,kCAAkC,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAAL,EAAA,CAAA,WAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;mHAAlC,kCAAkC,EAAA,QAAA,EAAA,6BAAA,EAAA,MAAA,EAAA,EAAA,UAAA,EAAA,CAAA,WAAA,EAAA,YAAA,CAAA,EAAA,WAAA,EAAA,aAAA,EAAA,oBAAA,EAAA,CAAA,qBAAA,EAAA,sBAAA,CAAA,EAAA,eAAA,EAAA,CAAA,gBAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA,cAAA,EAAA,eAAA,EAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,WAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAYlC,qBAAqB,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECzClC,otBAmBA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAmD,qBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,aAAA,EAAA,YAAA,EAAA,YAAA,EAAA,aAAA,EAAA,MAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,eAAA,EAAA,mBAAA,EAAA,OAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,EAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA/C,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,EAAA,8BAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FDUa,kCAAkC,EAAA,UAAA,EAAA,CAAA;kBAN9C,SAAS;+BACE,6BAA6B,EAAA,aAAA,EAGxB,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,otBAAA,EAAA,CAAA;kIAGV,UAAU,EAAA,CAAA;sBAApC,KAAK;uBAAC,WAAW,CAAA;gBACF,WAAW,EAAA,CAAA;sBAA1B,KAAK;gBAC+B,oBAAoB,EAAA,CAAA;sBAAxD,KAAK;uBAAC,qBAAqB,CAAA;gBAEI,eAAe,EAAA,CAAA;sBAA9C,KAAK;uBAAC,gBAAgB,CAAA;gBAKS,cAAc,EAAA,CAAA;sBAA7C,MAAM;uBAAC,eAAe,CAAA;gBAEkB,SAAS,EAAA,CAAA;sBAAjD,SAAS;uBAAC,qBAAqB,CAAA;;;ME+BrB,kBAAkB,CAAA;;+GAAlB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;gHAAlB,kBAAkB,EAAA,YAAA,EAAA,CApCd,qBAAqB,CAAA,EAAA,OAAA,EAAA,CAGlC,mBAAmB;QACnB,YAAY;QACZ,WAAW;QAEX,eAAe;QACf,oBAAoB;QACpB,mBAAmB;QACnB,kBAAkB;QAClB,sBAAsB;QACtB,eAAe;QACf,qBAAqB;QACrB,uBAAuB;QACvB,oBAAoB;QAEpB,cAAc;QACd,iBAAiB;QACjB,aAAa;QACb,kBAAkB;QAClB,mBAAmB;QACnB,aAAa;QACb,eAAe;QACf,wBAAwB;QACxB,kBAAkB;QAClB,cAAc;QACd,mBAAmB;QACnB,gBAAgB;QAChB,qBAAqB;QACrB,aAAa;QACb,eAAe,aA9BP,qBAAqB,CAAA,EAAA,CAAA,CAAA;gHAmCpB,kBAAkB,EAAA,SAAA,EAHlB,CAAC,eAAe,EAAE,EAAE,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,EAAA,OAAA,EAAA,CA9B/G,mBAAmB;QACnB,YAAY;QACZ,WAAW;QAEX,eAAe;QACf,oBAAoB;QACpB,mBAAmB;QACnB,kBAAkB;QAClB,sBAAsB;QACtB,eAAe;QACf,qBAAqB;QACrB,uBAAuB;QACvB,oBAAoB;QAEpB,cAAc;QACd,iBAAiB;QACjB,aAAa;QACb,kBAAkB;QAClB,mBAAmB;QACnB,aAAa;QACb,eAAe;QACf,wBAAwB;QACxB,kBAAkB;QAClB,cAAc;QACd,mBAAmB;QACnB,gBAAgB;QAChB,qBAAqB;QACrB,aAAa;QACb,eAAe,CAAA,EAAA,CAAA,CAAA;2FAKN,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBArC9B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,qBAAqB,CAAC;oBACrC,OAAO,EAAE,CAAC,qBAAqB,CAAC;AAChC,oBAAA,OAAO,EAAE;wBACP,mBAAmB;wBACnB,YAAY;wBACZ,WAAW;wBAEX,eAAe;wBACf,oBAAoB;wBACpB,mBAAmB;wBACnB,kBAAkB;wBAClB,sBAAsB;wBACtB,eAAe;wBACf,qBAAqB;wBACrB,uBAAuB;wBACvB,oBAAoB;wBAEpB,cAAc;wBACd,iBAAiB;wBACjB,aAAa;wBACb,kBAAkB;wBAClB,mBAAmB;wBACnB,aAAa;wBACb,eAAe;wBACf,wBAAwB;wBACxB,kBAAkB;wBAClB,cAAc;wBACd,mBAAmB;wBACnB,gBAAgB;wBAChB,qBAAqB;wBACrB,aAAa;wBACb,eAAe;AAChB,qBAAA;oBACD,SAAS,EAAE,CAAC,eAAe,EAAE,EAAE,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;;iBAElH,CAAA;;;MC1DY,+BAA+B,CAAA;;4HAA/B,+BAA+B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAA/B,+BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,+BAA+B,EAJ3B,YAAA,EAAA,CAAA,kCAAkC,CAEvC,EAAA,OAAA,EAAA,CAAA,mBAAmB,EAAE,YAAY,EAAE,kBAAkB,EAAE,eAAe,EAAE,eAAe,aADvF,kCAAkC,CAAA,EAAA,CAAA,CAAA;6HAGjC,+BAA+B,EAAA,OAAA,EAAA,CAFhC,mBAAmB,EAAE,YAAY,EAAE,kBAAkB,EAAE,eAAe,EAAE,eAAe,CAAA,EAAA,CAAA,CAAA;2FAEtF,+BAA+B,EAAA,UAAA,EAAA,CAAA;kBAL3C,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,kCAAkC,CAAC;oBAClD,OAAO,EAAE,CAAC,kCAAkC,CAAC;oBAC7C,OAAO,EAAE,CAAC,mBAAmB,EAAE,YAAY,EAAE,kBAAkB,EAAE,eAAe,EAAE,eAAe,CAAC;iBACnG,CAAA;;;ACmEW,IAAA,kBAIX;AAJD,CAAA,UAAY,iBAAiB,EAAA;IAC3B,iBAAA,CAAA,iBAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,IAAM,CAAA;IACN,iBAAA,CAAA,iBAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,cAAgB,CAAA;IAChB,iBAAA,CAAA,iBAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAa,CAAA;AACf,CAAC,EAJW,iBAAiB,KAAjB,iBAAiB,GAI5B,EAAA,CAAA,CAAA;;MCtEY,2BAA2B,CAAA;IAUtC,WACS,CAAA,SAAoD,EAC3B,IAAS,EAAA;AADlC,QAAA,IAAS,CAAA,SAAA,GAAT,SAAS,CAA2C;AAC3B,QAAA,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAK;AAXpC,QAAA,IAAM,CAAA,MAAA,GAAiD,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;AAGhF,QAAA,IAAA,CAAA,WAAW,GAAQ,YAAY,CAAC,MAAM,CAAC,CAAC;QAE/B,IAAA,CAAA,kBAAkB,GAAG,CAAC,KAAK,EAAE,KAAK,CAAU,CAAC;QAQ3D,IAAI,IAAI,CAAC,WAAW;AAAE,YAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KACzD;AAEM,IAAA,UAAU,CAAC,GAAQ,EAAA;QACxB,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,QAAA,IAAI,GAAG,CAAC,IAAI,KAAK,cAAc,EAAE;YAC/B,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAC3B,SAAA;KACF;IAEM,cAAc,GAAA;AAKnB,QAAA,IAAI,KAAK,GAAW,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;AACrC,QAAA,IAAI,KAAK,GAAU,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;AAEpC,QAAA,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YAClD,KAAK,GAAG,UAAU,CAAC;YACnB,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,MAAM,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC5D,SAAA;AAED,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,sBAAsB,EAAE;AAC/C,YAAA,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAK,IAAY,CAAC,KAAK,CAAC,CAAC;AAC3D,SAAA;QAED,OAAO;AACL,YAAA,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW;AAC7B,YAAA,IAAI,EAAE,KAAK;AACX,YAAA,IAAI,EAAE,KAAK;SACZ,CAAC;KACH;AAEM,IAAA,KAAK,CAAC,KAAU,EAAA;QACrB,IAAI,KAAK,CAAC,KAAK;AAAE,YAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;AAC3D,QAAA,KAAK,CAAC,SAAU,CAAC,KAAK,EAAE,CAAC;KAC1B;AAEM,IAAA,QAAQ,CAAC,EAAO,EAAA;AACrB,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC3C,IAAI,KAAK,IAAI,CAAC;YAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;KACnD;IAEM,QAAQ,GAAA;QACb,IAAI,CAAC,IAAI,CAAC,UAAU;YAAE,OAAO;QAC7B,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE;YAC3C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACvC,YAAA,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,SAAU,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;AAC1C,SAAA;AACD,QAAA,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAO,CAAC,IAAI,CAC/D,GAAG,CAAC,CAAC,GAAc,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,UAAW,CAAC,CAAC,CAC/D,CAAC;KACH;IAEO,SAAS,CAAC,GAAc,EAAE,IAAsB,EAAA;AACtD,QAAA,IAAI,CAAC,GAAG;AAAE,YAAA,OAAO,EAAE,CAAC;AACpB,QAAA,OAAO,GAAG,CAAC,MAAM,CACf,IAAI,IACF,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CACjH,CAAC;KACH;AAEO,IAAA,QAAQ,CAAC,IAAsB,EAAA;AACrC,QAAA,OAAO,OAAO,IAAI,KAAK,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;KACrD;;AAhFU,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,2BAA2B,gDAY5B,eAAe,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAZd,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,2BAA2B,qKCbxC,4xMAuJA,EAAA,MAAA,EAAA,CAAA,2NAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAL,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,EAAA,0BAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,iGAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,qDAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAI,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,YAAA,EAAA,KAAA,EAAA,KAAA,EAAA,UAAA,EAAA,WAAA,EAAA,iBAAA,EAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,EAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,EAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,QAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAS,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,6GAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAP,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,EAAA,8BAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,eAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,8BAAA,CAAA,EAAA,QAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,mDAAA,EAAA,QAAA,EAAA,CAAA,wBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA2C,IAAA,CAAA,WAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,UAAA,EAAA,aAAA,EAAA,UAAA,EAAA,OAAA,EAAA,mBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,wBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,uBAAA,EAAA,+BAAA,EAAA,aAAA,EAAA,IAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,sBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,wEAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,UAAA,EAAA,eAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAArD,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,YAAA,EAAA,MAAA,EAAA,kBAAA,EAAA,gBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAqD,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,WAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FD1Ia,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBALvC,SAAS;+BACE,uBAAuB,EAAA,QAAA,EAAA,4xMAAA,EAAA,MAAA,EAAA,CAAA,2NAAA,CAAA,EAAA,CAAA;;;8BAgB9B,MAAM;+BAAC,eAAe,CAAA;;yBAJM,SAAS,EAAA,CAAA;sBAAvC,SAAS;uBAAC,WAAW,CAAA;;AA2ExB,MAAM,YAAY,GAAQ;AACxB,IAAA,IAAI,EAAE;QACJ,CAAC,SAAS,EAAE,WAAW,CAAC;QACxB,CAAC,MAAM,EAAE,cAAc,CAAC;QACxB,CAAC,cAAc,EAAE,UAAU,CAAC;AAC7B,KAAA;AACD,IAAA,MAAM,EAAE;QACN,CAAC,SAAS,EAAE,WAAW,CAAC;QACxB,CAAC,MAAM,EAAE,cAAc,CAAC;QACxB,CAAC,aAAa,EAAE,OAAO,CAAC;AACzB,KAAA;AACD,IAAA,IAAI,EAAE;QACJ,CAAC,SAAS,EAAE,WAAW,CAAC;QACxB,CAAC,MAAM,EAAE,cAAc,CAAC;QACxB,CAAC,WAAW,EAAE,OAAO,CAAC;AACvB,KAAA;AACD,IAAA,cAAc,EAAE;QACd,CAAC,SAAS,EAAE,WAAW,CAAC;QACxB,CAAC,MAAM,EAAE,cAAc,CAAC;AACzB,KAAA;AACD,IAAA,OAAO,EAAE;QACP,CAAC,SAAS,EAAE,WAAW,CAAC;QACxB,CAAC,MAAM,EAAE,cAAc,CAAC;AACzB,KAAA;AACD,IAAA,MAAM,EAAE;QACN,CAAC,SAAS,EAAE,WAAW,CAAC;QACxB,CAAC,MAAM,EAAE,cAAc,CAAC;QACxB,CAAC,gBAAgB,EAAE,UAAU,CAAC;AAC/B,KAAA;AACD,IAAA,YAAY,EAAE;QACZ,CAAC,SAAS,EAAE,WAAW,CAAC;QACxB,CAAC,MAAM,EAAE,cAAc,CAAC;QACxB,CAAC,sBAAsB,EAAE,UAAU,CAAC;AACrC,KAAA;AACD,IAAA,KAAK,EAAE;QACL,CAAC,SAAS,EAAE,WAAW,CAAC;QACxB,CAAC,MAAM,EAAE,cAAc,CAAC;AACzB,KAAA;CACF;;MExHY,4BAA4B,CAAA;IAMvC,WACS,CAAA,SAAqD,EAErD,IAIN,EAAA;AANM,QAAA,IAAS,CAAA,SAAA,GAAT,SAAS,CAA4C;AAErD,QAAA,IAAI,CAAA,IAAA,GAAJ,IAAI,CAIV;QAZI,IAAW,CAAA,WAAA,GAAW,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC;QAClD,IAAU,CAAA,UAAA,GAAgC,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,EAAE,CAAC;QAErE,IAAc,CAAA,cAAA,GAAa,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,YAAmB,GAAC,CAAC;AAmB5E,QAAA,IAAA,CAAA,QAAQ,GAAG,CAAC,KAAa,KAC9B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,SAAoC,KAAK,SAAS,CAAC,GAAG,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAThH,MAAM,QAAQ,GAAQ,EAAE,CAAC;AACzB,QAAA,IAAI,CAAC,UAAU,CAAC,OAAO,CACrB,CAAC,SAAoC,MAClC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,SAAS,CAAC,UAAU,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,CACtF,CAAC;QACF,IAAI,CAAC,SAAS,GAAG,IAAI,WAAW,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;KACpD;AAKM,IAAA,SAAS,CAAC,MAAW,EAAA;QAC1B,OAAO,CAAA,MAAM,KAAA,IAAA,IAAN,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAN,MAAM,CAAE,WAAW,KAAI,EAAE,CAAC;KAClC;IAEM,QAAQ,CAAC,GAAQ,EAAE,MAAiC,EAAA;AACzD,QAAA,IAAI,GAAG,CAAC,OAAO,KAAK,EAAE,EAAE;YACtB,OAAO;AACR,SAAA;AACD,QAAA,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAC9G;AAEM,IAAA,cAAc,CAAC,MAAiC,EAAA;AACrD,QAAA,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;KAC7B;IAEO,MAAM,CAAC,GAAc,EAAE,IAAS,EAAA;AACtC,QAAA,IAAI,CAAC,GAAG;AAAE,YAAA,OAAO,EAAE,CAAC;AACpB,QAAA,OAAO,GAAG,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;KACvG;AAEO,IAAA,cAAc,CAAC,MAAiC,EAAA;QACtD,MAAM,aAAa,GAAgC,IAAI,CAAC,UAAU,CAAC,MAAM,CACvE,SAAS,IAAI,SAAS,CAAC,SAAS,IAAI,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,GAAG,CAC1E,CAAC;AACF,QAAA,aAAa,CAAC,OAAO,CAAC,GAAG,IAAG;YAC1B,MAAM,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;AAClF,YAAA,IAAI,CAAC,YAAY;gBAAE,OAAO;YAC1B,MAAM,eAAe,GAA0C,IAAI,CAAC,UAAU,CAAC,IAAI,CACjF,SAAS,IAAI,SAAS,CAAC,GAAG,KAAK,YAAY,CAAC,GAAG,CAChD,CAAC;AACF,YAAA,IAAI,eAAe;AAAE,gBAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;YAC1E,IAAI,CAAC,cAAc,CACjB;gBACE,QAAQ,EAAE,GAAG,CAAC,GAAG;gBACjB,WAAW,EAAE,IAAI,CAAC,WAAW;gBAC7B,WAAW,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;aACxF,EACD,YAAY,CACb,CAAC;AACJ,SAAC,CAAC,CAAC;KACJ;IAEO,cAAc,CACpB,gBAAiD,EACjD,YAAuC,EAAA;QAEvC,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,CAAC,IAAe,KAAI;;YAClE,QAAQ,CAAA,EAAA,GAAA,YAAY,KAAA,IAAA,IAAZ,YAAY,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZ,YAAY,CAAE,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,WAAW,EAAE;AACvC,gBAAA,KAAK,QAAQ,CAAC;AACd,gBAAA,KAAK,OAAO;AACV,oBAAA,YAAa,CAAC,IAAI,GAAG,IAAI,CAAC;oBAC1B,MAAM;AACR,gBAAA,KAAK,cAAc;AACjB,oBAAA,YAAa,CAAC,IAAI,GAAG,IAAI,CAAC;AAC1B,oBAAA,YAAa,CAAC,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;oBAChC,MAAM;AACT,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;AAEO,IAAA,QAAQ,CAAC,IAAS,EAAA;AACxB,QAAA,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC;KAC3B;IAEM,QAAQ,GAAA;;QAEb,IAAI,CAAC,sBAAsB,EAAE,CAAC;;AAE9B,QAAA,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;AAC1B,YAAA,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC9C,OAAO;AACR,SAAA;QAED,MAAM,aAAa,GAAwE,EAAE,CAAC;AAC9F,QAAA,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,IAAG;;AAClC,YAAA,IAAI,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,EAAE;AACjD,gBAAA,IAAI,SAAS,CAAC,IAAI,KAAK,cAAc,EAAE;;oBAErC,aAAa,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC;AAClG,iBAAA;AAAM,qBAAA;oBACL,aAAa,CAAC,IAAI,CAAC;wBACjB,IAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,CAAC,CAAC;AACpE,wBAAA,MAAM,EAAE,SAAS;AAClB,qBAAA,CAAC,CAAC;AACJ,iBAAA;AACF,aAAA;AACH,SAAC,CAAC,CAAC;AACH,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;KACrC;IAEO,sBAAsB,GAAA;AAC5B,QAAA,IAAI,CAAC,UAAU;aACZ,MAAM,CAAC,SAAS,IAAI,SAAS,CAAC,IAAI,KAAK,cAAc,CAAC;aACtD,OAAO,CAAC,SAAS,IAAG;;AACnB,YAAA,IAAI,EAAC,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,KAAK,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,CAAA,EAAE;AACxD,gBAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;gBAC/C,SAAS,CAAC,MAAM,GAAG,EAAE,CAAC,SAAS,CAAC,IAAK,CAAC,CAAC;AACxC,aAAA;AACH,SAAC,CAAC,CAAC;KACN;AAEO,IAAA,wBAAwB,CAAC,IAAe,EAAA;AAC9C,QAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAU,IAAG;YAC9C,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,MAAM,IAAI,SAAS,EAAE;AACjD,gBAAA,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,sBAAsB,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;gBACrE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,aAAa,EAAE,CAAC;AAC3C,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;;AAtIU,4BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,4BAA4B,gDAQ7B,eAAe,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AARd,4BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,4BAA4B,6DCdzC,uyIA8FA,EAAA,MAAA,EAAA,CAAA,6tBAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAArD,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,iGAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAI,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,QAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,KAAA,EAAA,KAAA,EAAA,qBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAS,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,6GAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAP,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,EAAA,8BAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,eAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,8BAAA,CAAA,EAAA,QAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,mDAAA,EAAA,QAAA,EAAA,CAAA,wBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAV,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAoD,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,WAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDhFa,4BAA4B,EAAA,UAAA,EAAA,CAAA;kBALxC,SAAS;+BACE,uBAAuB,EAAA,QAAA,EAAA,uyIAAA,EAAA,MAAA,EAAA,CAAA,6tBAAA,CAAA,EAAA,CAAA;;;8BAY9B,MAAM;+BAAC,eAAe,CAAA;;;;AEQrB,MAAO,8BAA+B,SAAQ,gBAAgB,CAAA;IAClE,IAA4B,MAAM,CAAC,GAA0B,EAAA;AAC3D,QAAA,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC;AAAE,YAAA,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;;AAGtC,QAAA,GAAG,CAAC,IAAI,CAACE,MAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,OAAY,KAAI;AAC3C,YAAA,IAAI,CAAC,OAAO;gBAAE,OAAO;AACrB,YAAA,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC;YAClC,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAE1G,YAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC;AACvD,YAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;;YAEzE,IAAI,CAAC,sBAAsB,EAAE,CAAC;AAC9B,YAAA,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;;YAGvC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,QAAQ,GAAG,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,EAAE,CAAC;YACrF,IAAI,OAAO,CAAC,aAAa;gBAAE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;;AAG9E,YAAA,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,GAA8B,KAAK,GAAG,CAAC,eAAe,CAAC,CAAC;YACzG,IAAI,UAAU,CAAC,MAAM;AAAE,gBAAA,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;YAEvD,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;AACrD,gBAAA,MAAM,kBAAkB,GAAiD,IAAI,CAAC,YAAY,CAAC,IAAI,CAC7F,MAAM,IAAI,MAAM,CAAC,gBAAgB,CAClC,CAAC;AACF,gBAAA,IAAI,kBAAkB,EAAE;AACtB,oBAAA,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,CAAC;AAC5C,iBAAA;AACF,aAAA;YAED,IAAI,CAAC,YAAY,EAAE,CAAC;AACtB,SAAC,CAAC,CAAC;KACJ;AA8CD,IAAA,WAAA,CACU,eAAkC,EAClC,MAAiB,EACjB,SAA2B,EAAA;AAEnC,QAAA,KAAK,EAAE,CAAC;AAJA,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAmB;AAClC,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;AACjB,QAAA,IAAS,CAAA,SAAA,GAAT,SAAS,CAAkB;AA9CR,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,OAAO,EAAO,CAAC;AAC/B,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,YAAY,EAG7D,CAAC;AAEyB,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;AAClC,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,EAA8B,CAAC;QAE3D,IAAA,CAAA,eAAe,GAAgC,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;AAElF,QAAA,IAAO,CAAA,OAAA,GAAmC,EAAE,CAAC;AAC5C,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,YAAY,EAAkC,CAAC;AAEtD,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,OAAO,EAAO,CAAC;AAMnC,QAAA,IAAY,CAAA,YAAA,GAAuC,EAAE,CAAC;AACjD,QAAA,IAAA,CAAA,iBAAiB,GAAG,IAAI,YAAY,EAAoC,CAAC;AACvE,QAAA,IAAA,CAAA,mBAAmB,GAAG,IAAI,YAAY,EAAoC,CAAC;QAEzG,IAAA,CAAA,aAAa,GAAsE;YACxF,IAAI,EAAE,CAAC,EAAE,CAAC;AACV,YAAA,MAAM,EAAE,IAAI;SACb,CAAC;AAUK,QAAA,IAAiB,CAAA,iBAAA,GAAa,EAAE,CAAC;AAEjC,QAAA,IAAW,CAAA,WAAA,GAAY,KAAK,CAAC;AAC7B,QAAA,IAAkB,CAAA,kBAAA,GAA+B,EAAE,CAAC;AACpD,QAAA,IAAmB,CAAA,mBAAA,GAA4C,IAAI,CAAC;;AAqU3E;;;;AAIG;QACI,IAAA,CAAA,UAAU,GAAG,CAAC,UAAuC,KAC1D,UAAU;aACP,MAAM,CAAC,SAAS,IAAI,SAAS,CAAC,YAAY,CAAC;AAC3C,aAAA,MAAM,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,SAAS,CAAC,GAAG,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;AAE9F;;AAEG;AACI,QAAA,IAAA,CAAA,WAAW,GAAG,CAAC,MAAoC,KAAY;;YACpE,MAAM,OAAO,GAAW,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,KAAK,MAAM,CAAC,QAAQ,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,KAAK,CAAC;YACvG,IAAI,UAAU,GAAW,EAAE,CAAC;YAE5B,QAAQ,MAAM,CAAC,MAAM;AACnB,gBAAA,KAAK,MAAM;AACT,oBAAA,QAAQ,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE;AAC/B,wBAAA;4BACE,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,cAAc,IAAI,KAAK,CAAC,CAAC;4BACpD,MAAM;AACR,wBAAA,KAAK,QAAQ;AACX,4BAAA,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;4BAC7C,MAAM;AACR,wBAAA,KAAK,MAAM;4BACT,UAAU,GAAG,MAAM,CAAC,cAAc;AAChC,kCAAE,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,cAAc,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;AAC9F,kCAAE,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;4BAClC,MAAM;AACR,wBAAA,KAAK,QAAQ,CAAC;AACd,wBAAA,KAAK,OAAO,CAAC;AACb,wBAAA,KAAK,cAAc;AACjB,4BAAA,UAAU,GAAG,MAAM,CAAC,CAAA,EAAA,GAAA,MAAM,CAAC,eAAe,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;4BACxD,MAAM;AACT,qBAAA;oBACD,MAAM;AAER,gBAAA,KAAK,SAAS;oBACZ,UAAU,GAAG,cAAc,CAAC;oBAC5B,MAAM;AACR,gBAAA,KAAK,UAAU;oBACb,UAAU,GAAG,WAAW,CAAC;oBACzB,MAAM;AACR,gBAAA,KAAK,QAAQ;oBACX,UAAU;wBACR,CAAS,MAAA,EAAA,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,UAAU,IAAI,GAAG,CAAG,CAAA,CAAA;4BACvD,CAAS,MAAA,EAAA,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,WAAW,IAAI,GAAG,CAAA,CAAE,CAAC;oBAC3D,MAAM;AACR,gBAAA,KAAK,UAAU;AACb,oBAAA,UAAU,GAAG,CAAA,CAAA,EAAA,GAAA,MAAM,CAAC,cAAc,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,KAAI,EAAE,CAAC;oBAChE,MAAM;AAER,gBAAA;oBACE,UAAU,GAAG,OAAO,CAAC;oBACrB,MAAM;AACT,aAAA;YAED,IAAI,CAAC,OAAO,GAAG,UAAU,EAAE,MAAM,GAAG,EAAE;AAAE,gBAAA,OAAO,CAAM,GAAA,EAAA,OAAO,CAAS,MAAA,EAAA,UAAU,EAAE,CAAC;;gBAC7E,OAAO,CAAA,GAAA,EAAM,OAAO,CAAA,IAAA,CAAM,CAAC;AAClC,SAAC,CAAC;AAEF;;AAEG;QACI,IAAA,CAAA,aAAa,GAAG,CAAC,QAAwC,KAC9D,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;KAhYjC;IAEM,QAAQ,GAAA;AACb,QAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CACtC,GAAG,CAAC,CAAC,IAAyB,KAAI;YAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,IAAG;gBACpC,MAAM,IAAI,GAAQ,EAAE,CAAC;gBACrB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAQ,KAAI;oBAC/B,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,GAAG,CAAC,eAAe,CAAC;AACjD,iBAAC,CAAC,CAAC;AACH,gBAAA,OAAO,IAAI,CAAC;AACd,aAAC,CAAC,CAAC;AAEH,YAAA,OAAO,IAAI,CAAC;SACb,CAAC,CACH,CAAC;;AAGF,QAAA,IAAI,OAAO,IAAI,CAAC,eAAe,CAAC,aAAa,KAAK,WAAW;AAAE,YAAA,IAAI,CAAC,eAAe,CAAC,aAAa,GAAG,EAAE,CAAC;AACvG,QAAA,IAAI,OAAO,IAAI,CAAC,eAAe,CAAC,kBAAkB,KAAK,WAAW;AAAE,YAAA,IAAI,CAAC,eAAe,CAAC,kBAAkB,GAAG,IAAI,CAAC;AACnH,QAAA,IAAI,OAAO,IAAI,CAAC,eAAe,CAAC,iBAAiB,KAAK,WAAW;AAC/D,YAAA,IAAI,CAAC,eAAe,CAAC,iBAAiB,GAAG,QAAQ,CAAC;QACpD,IAAI,OAAO,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,YAAY,KAAK,WAAW;YACpE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,YAAY,GAAG,KAAK,CAAC;;QAGtD,IAAI,IAAI,CAAC,aAAa;YAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;KACnH;AAEO,IAAA,gBAAgB,CAAC,OAAuC,EAAA;QAC9D,MAAM,iBAAiB,GAAG,OAAO;AAC9B,aAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;aACjC,GAAG,CAAC,MAAM,IAAG;;YACZ,OAAO;gBACL,GAAG,EAAE,MAAM,CAAC,QAAQ;gBACpB,IAAI,EAAE,MAAM,CAAC,IAAI;gBACjB,KAAK,EAAE,MAAM,CAAC,KAAK;gBACnB,IAAI,EAAE,MAAM,CAAC,aAAa;AAC1B,gBAAA,MAAM,EAAE,MAAM,CAAC,IAAI,KAAK,cAAc,GAAG,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,SAAS;gBAC7E,MAAM,EAAE,MAAM,CAAC,MAAM;AACrB,gBAAA,aAAa,EAAE,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,GAAG,OAAO;gBACxD,QAAQ,EAAE,EAAE,CAAA,EAAA,GAAA,MAAM,CAAC,WAAW,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,IAAI,CAAC;AACvC,gBAAA,YAAY,EAAE,CAAA,EAAA,GAAA,MAAM,CAAC,UAAU,mCAAI,IAAI;gBACvC,IAAI,EAAE,MAAM,CAAC,QAAQ;AACrB,gBAAA,eAAe,EACb,MAAM,CAAC,aAAa,KAAK,iBAAiB,CAAC,SAAS;AACpD,oBAAA,MAAM,CAAC,aAAa,KAAK,iBAAiB,CAAC,YAAY;AACzD,gBAAA,UAAU,EAAE,MAAM,CAAC,aAAa,KAAK,iBAAiB,CAAC,SAAS;gBAChE,YAAY,EAAE,MAAM,CAAC,YAAY;AACjC,gBAAA,SAAS,EAAE,MAAM,CAAC,SAAS,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,SAAS;aAChC,CAAC;AACjC,SAAC,CAAC,CAAC;QAEL,OAAO;AACL,YAAA,iBAAiB,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,YAAY,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;AACxE,YAAA,iBAAiB,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,YAAY,IAAI,MAAM,CAAC,IAAI,CAAC;YACvE,iBAAiB;SAClB,CAAC;KACH;AAEO,IAAA,cAAc,CAAC,UAAuC,EAAA;QAC5D,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4BAA4B,EAAE;AAC/D,YAAA,QAAQ,EAAE,OAAO;AACjB,YAAA,QAAQ,EAAE,OAAO;AACjB,YAAA,YAAY,EAAE,IAAI;AAClB,YAAA,IAAI,EAAE,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,UAAU,EAAE,UAAU,EAAE,cAAc,EAAE,IAAI,CAAC,eAAe,EAAE;AACtG,SAAA,CAAC,CAAC;QAEH,SAAS;AACN,aAAA,WAAW,EAAE;AACb,aAAA,IAAI,CAACA,MAAI,CAAC,CAAC,CAAC,CAAC;AACb,aAAA,SAAS,CAAC,CAAC,YAAiF,KAAI;AAC/F,YAAA,IAAI,CAAC,YAAY,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC;gBAAE,OAAO;YACvD,YAAY;AACT,iBAAA,MAAM,CAAC,CAAC,UAAe,KAAK,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;iBAC3D,OAAO,CAAC,CAAC,UAAe,KAAK,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACpF,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACrC,SAAC,CAAC,CAAC;KACN;AAEO,IAAA,aAAa,CAAC,MAAyE,EAAA;QAC7F,QACE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YAChB,CAAC,CAAC,MAAM,CAAC,MAAM;AACf,aAAC,MAAM,CAAC,MAAO,CAAC,IAAI,KAAK,cAAc;iBACpC,MAAM,CAAC,MAAO,CAAC,IAAI,KAAK,cAAc,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,EACrF;KACH;;AAGM,IAAA,WAAW,CAAC,OAA2B,EAAA;QAC5C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;AAC7F,QAAA,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;KAC5B;AAEO,IAAA,gBAAgB,CAAC,OAA2B,EAAA;;QAClD,OAAO;AACL,YAAA,IAAI,EAAE,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,GAAG,CAAC;AACrC,YAAA,IAAI,EAAE,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,GAAG,EAAE;YACtC,QAAQ,EAAE,CAAA,EAAA,GAAA,OAAO,CAAC,IAAI,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,CAAC,GAAG,CAAE,CAAA,CAAC,CAAC;AACrC,YAAA,aAAa,EAAE,CAAA,EAAA,GAAA,OAAO,CAAC,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,CAAC,GAAG,CAAA,CAAE,CAAC,CAAA,CAAE,WAAW,EAAE;SACzD,CAAC;KACH;IAEO,YAAY,GAAA;;AAClB,QAAA,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;;AAGzB,QAAA,IAAI,CAAC,iBAAiB,GAAG,MAAA,IAAI,CAAC,aAAa,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,GAAG,CAAC,CAAC,GAAiB,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;QAEjF,UAAU,CAAC,MAAK;AACd,YAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AACxB,YAAA,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,CAAC;SACtC,EAAE,CAAC,CAAC,CAAC;KACP;AAEM,IAAA,WAAW,CAAC,GAAQ,EAAA;AACzB,QAAA,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;AACnD,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC;AAC1G,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;;QAExG,IAAI,CAAC,sBAAsB,EAAE,CAAC;;AAE9B,QAAA,IAAI,CAAC,kBAAkB,GAAG,UAAU,CAAC;QAErC,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;IAEM,eAAe,CAAC,EAAU,EAAE,KAAU,EAAA;QAC3C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;KACvC;AAEM,IAAA,iBAAiB,CAAC,EAAO,EAAA;AAC9B,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC5B;;IAGM,YAAY,GAAA;AACjB,QAAA,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YACjD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;gBAC3B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3B,aAAA;AACF,SAAA;;AAED,QAAA,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAE7B,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;IAEM,SAAS,GAAA;QACd,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC;YAAE,OAAO;QACpD,MAAM,MAAM,GAAiC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AACrF,QAAA,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AACnC,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,QAAA,IAAI,CAAC,aAAa,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;;AAElD,QAAA,IAAI,CAAC,kBAAkB,GAAG,UAAU,CAAC;AAErC,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KACpC;AAEO,IAAA,cAAc,CACpB,MAGC,EACD,UAAA,GAA4B,IAAI,EAAA;;;AAGhC,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAM,KAAK,EAAA,IAAA,EAAA,CAAA,CAAA,OAAA,CAAC,CAAC,GAAG,MAAK,CAAA,EAAA,GAAA,MAAM,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,GAAG,CAAA,CAAA,EAAA,CAAC,CAAC;AACrF,QAAA,MAAM,OAAO,GAAiC;YAC5C,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,QAAQ,EAAE,CAAA,EAAA,GAAA,OAAO,KAAP,IAAA,IAAA,OAAO,uBAAP,OAAO,CAAE,GAAG,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,MAAM;AAChC,YAAA,IAAI,EAAE,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,OAAO,aAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,WAAW,EAAE,mCAAI,MAAM;AAC5C,YAAA,MAAM,EAAE,MAAM;AACd,YAAA,YAAY,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,MAAM;AAC7B,YAAA,SAAS,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,SAAS;AAC7B,YAAA,MAAM,EAAE,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,UAAU;SAC5B,CAAC;QACF,IAAI,CAAC,UAAU,EAAE;YACf,QAAQ,CAAA,EAAA,GAAA,OAAO,KAAA,IAAA,IAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,WAAW,EAAE;AAClC,gBAAA;oBACE,OAAO,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACxC,MAAM;AACR,gBAAA,KAAK,QAAQ;oBACX,OAAO,CAAC,gBAAgB,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC3C,MAAM;AACR,gBAAA,KAAK,MAAM;AACT,oBAAA,OAAO,CAAC,cAAc,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBAClD,MAAM;AACR,gBAAA,KAAK,QAAQ,CAAC;AACd,gBAAA,KAAK,OAAO;oBACV,OAAO,CAAC,eAAe,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC3C,MAAM;AACR,gBAAA,KAAK,cAAc;AACjB,oBAAA,OAAO,CAAC,eAAe,GAAG,CAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAS,CAAC,KAAK,CAAC,CAAC;oBAC1D,MAAM;AACT,aAAA;AACF,SAAA;AAAM,aAAA;AACL,YAAA,QAAQ,UAAU;AAChB,gBAAA;oBACE,OAAO,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACxC,MAAM;AACR,gBAAA,KAAK,UAAU;AACb,oBAAA,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,OAAO,GAAG,SAAS,GAAG,UAAU,CAAC;oBACrE,MAAM;AACR,gBAAA,KAAK,WAAW;AACd,oBAAA,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC1B,oBAAA,OAAO,CAAC,QAAQ,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,oBAAA,OAAO,CAAC,SAAS,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7C,MAAM;AACR,gBAAA,KAAK,aAAa;AAChB,oBAAA,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC;oBAC1B,OAAO,CAAC,UAAU,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACrC,OAAO,CAAC,WAAW,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACtC,MAAM;AACR,gBAAA,KAAK,gBAAgB,CAAC;AACtB,gBAAA,KAAK,sBAAsB;AACzB,oBAAA,OAAO,CAAC,MAAM,GAAG,UAAU,CAAC;AAC5B,oBAAA,OAAO,CAAC,eAAe,GAAG,MAAM,CAAC,IAAI,CAAC;oBACtC,MAAM;AACR,gBAAA,KAAK,cAAc;AACjB,oBAAA,OAAO,CAAC,MAAM,GAAG,UAAU,CAAC;oBAC5B,OAAO,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC/C,MAAM;AACT,aAAA;AACF,SAAA;AACD,QAAA,OAAO,OAAO,CAAC;KAChB;AAEM,IAAA,YAAY,CAAC,MAAoC,EAAA;AACtD,QAAA,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;;AAG/B,QAAA,IAAI,CAAC,kBAAkB,GAAG,UAAU,CAAC;AAErC,QAAA,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,OAAO,CAAC,MAAM,CACjB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ,CAAC,EACrE,CAAC,CACF,CAAC;AACF,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KACpC;AAEO,IAAA,iBAAiB,CAAC,MAAoC,EAAA;AAC5D,QAAA,MAAM,CAAC,eAAe,GAAG,SAAS,CAAC;AACnC,QAAA,IAAI,MAAM,CAAC,IAAI,KAAK,cAAc,EAAE;YAClC,MAAM,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,GAAG,KAAK,MAAM,CAAC,QAAQ,CAAE,CAAC;YACjG,YAAY,CAAC,MAAM,GAAG,EAAE,CAAC,YAAY,CAAC,IAAK,CAAC,CAAC;AAC9C,SAAA;KACF;IAEO,cAAc,CAAC,MAAoC,EAAE,MAAe,EAAA;QAC1E,MAAM,aAAa,GAAmC,IAAI,CAAC,UAAU,CAAC,MAAM,CAC1E,GAAG,IAAI,GAAG,CAAC,SAAS,KAAK,MAAM,CAAC,QAAQ,CACzC,CAAC;AACF,QAAA,aAAa,CAAC,OAAO,CAAC,GAAG,IAAG;;YAC1B,MAAM,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,GAAG,KAAK,GAAG,CAAC,QAAQ,CAAC,CAAC;AAC7F,YAAA,IAAI,CAAC,YAAY;gBAAE,OAAO;AAC1B,YAAA,IAAI,MAAM,EAAE;gBACV,YAAa,CAAC,MAAM,GAAG,EAAE,CAAC,YAAY,CAAC,IAAK,CAAC,CAAC;gBAC9C,IAAI,CAAC,OAAO,CAAC,MAAM,CACjB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,KAAK,GAAG,CAAC,QAAQ,CAAC,EAClE,CAAC,CACF,CAAC;AACH,aAAA;AACD,YAAA,MAAM,gBAAgB,GAAoC;gBACxD,QAAQ,EAAE,GAAG,CAAC,QAAQ;gBACtB,WAAW,EAAE,GAAG,CAAC,WAAW;gBAC5B,WAAW,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ,GAAG,CAAA,CAAA,EAAA,GAAA,MAAM,CAAC,eAAe,0CAAE,IAAI,CAAC,GAAG,CAAC,KAAI,EAAE,EAAE;aAC5E,CAAC;YACF,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,CAAC,IAAe,KAAI;;gBACnE,QAAQ,CAAA,EAAA,GAAA,YAAY,KAAA,IAAA,IAAZ,YAAY,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZ,YAAY,CAAE,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,WAAW,EAAE;AACvC,oBAAA,KAAK,QAAQ,CAAC;AACd,oBAAA,KAAK,OAAO;AACV,wBAAA,YAAa,CAAC,IAAI,GAAG,IAAI,CAAC;wBAC1B,MAAM;AACR,oBAAA,KAAK,cAAc;AACjB,wBAAA,YAAa,CAAC,IAAI,GAAG,IAAI,CAAC;AAC1B,wBAAA,YAAa,CAAC,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;wBAChC,MAAM;AACT,iBAAA;AACH,aAAC,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;KACJ;AAED;;AAEG;IACI,cAAc,GAAA;QACnB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2BAA2B,EAAE;AAC9D,YAAA,KAAK,EAAE,KAAK;AACZ,YAAA,QAAQ,EAAE,OAAO;AACjB,YAAA,QAAQ,EAAE,OAAO;AACjB,YAAA,IAAI,EAAE;AACJ,gBAAA,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM;gBACtC,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;AACxC,aAAA;AACF,SAAA,CAAC,CAAC;QAEH,SAAS;AACN,aAAA,WAAW,EAAE;AACb,aAAA,IAAI,CAACA,MAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC,OAAO,IAAG;AACnB,YAAA,IAAI,CAAC,OAAO;gBAAE,OAAO;AACrB,YAAA,MAAM,MAAM,GAAiC,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;AACxF,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,YAAA,IAAI,CAAC,kBAAkB,GAAG,UAAU,CAAC;AACrC,YAAA,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AACnC,YAAA,IAAI,CAAC,aAAa,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;AAClD,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACrC,SAAC,CAAC,CAAC;KACN;IAyEM,eAAe,GAAA;;QACpB,IAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,aAAa,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,MAAK,cAAc,EAAE;AACtD,YAAA,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAK,CAAC,CAAC;AACxE,SAAA;KACF;AACM,IAAA,QAAQ,CAAC,MAA+D,EAAA;AAC7E,QAAA,MAAM,CAAC,MAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAO,CAAC,MAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAAC;KACpG;IAEO,MAAM,CAAC,GAAc,EAAE,IAAS,EAAA;AACtC,QAAA,IAAI,CAAC,GAAG;AAAE,YAAA,OAAO,EAAE,CAAC;AACpB,QAAA,OAAO,GAAG,CAAC,MAAM,CAAC,IAAI,IAAI,EAAA,IAAA,EAAA,CAAA,CAAA,OAAA,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAA,MAAA,IAAI,CAAC,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,WAAW,EAAE,KAAI,IAAI,CAAC,WAAW,EAAE,CAAC,CAAA,EAAA,CAAC,CAAC;KACrH;AAEM,IAAA,SAAS,CAAC,MAAW,EAAA;QAC1B,OAAO,CAAA,MAAM,KAAA,IAAA,IAAN,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAN,MAAM,CAAE,WAAW,KAAI,EAAE,CAAC;KAClC;AAED;;AAEG;AACI,IAAA,iBAAiB,CAAC,OAAyC,EAAA;;AAEhE,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;AAClD,QAAA,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;QAGnD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,IAAI,IAAG;YAC3D,IAAI,CAAC,GAAG,IAAI,CAAC;YACb,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAQ,KAAI;AACnC,gBAAA,IAAI,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,QAAQ,EAAE;AAC7B,oBAAA,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC;oBACnC,CAAC,GAAG,IAAI,CAAC;AACV,iBAAA;AACH,aAAC,CAAC,CAAC;AACH,YAAA,OAAO,CAAC,CAAC;AACX,SAAC,CAAC,CAAC;AACH,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;;QAExG,IAAI,CAAC,sBAAsB,EAAE,CAAC;AAE9B,QAAA,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC;AACnC,QAAA,IAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC;QAEnC,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;AAED;;AAEG;IACU,gBAAgB,GAAA;;AAC3B,YAAA,MAAM,KAAK,GAAQ,MAAM,IAAI,CAAC,gBAAgB,EAAE,CAAC;AACjD,YAAA,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI;gBAAE,OAAO;AAClC,YAAA,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;AACzB,YAAA,MAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC;AAC/B,YAAA,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,qBAAqB,EAAE,CAAC;YACjD,IAAI,OAAO,KAAK,KAAK,WAAW;gBAAE,OAAO;AAEzC,YAAA,MAAM,OAAO,GAAqC;gBAChD,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,GAAG,IAAG;oBACzC,OAAO;wBACL,QAAQ,EAAE,GAAG,CAAC,GAAG;AACjB,wBAAA,aAAa,EAAE,CAAC,GAAG,CAAC,QAAQ;qBAC7B,CAAC;AACJ,iBAAC,CAAC;AACF,gBAAA,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC;gBAC5C,WAAW,EAAE,IAAI,CAAC,WAAW;AAC7B,gBAAA,MAAM,EAAE,KAAK;AACb,gBAAA,gBAAgB,EAAE,QAAQ;gBAC1B,SAAS,EAAE,CAAC,KAAK;aAClB,CAAC;AAEF,YAAA,IAAI,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,gBAAgB,EAAE;AACjD,gBAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;AAClB,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,OAAO,EAAE,yDAAyD;AAClE,oBAAA,KAAK,EAAE,OAAO;AACd,oBAAA,IAAI,EAAE,OAAO;AACb,oBAAA,IAAI,EAAE,SAAS;AACf,oBAAA,KAAK,EAAE,cAAc;AACrB,oBAAA,WAAW,EAAE,WAAW;AACzB,iBAAA,CAAC,CAAC;gBACH,OAAO;AACR,aAAA;;YAGD,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM,CAAC,CAAC;AAEzE,YAAA,IAAI,OAAO,EAAE;gBACX,IAAI,OAAO,CAAC,SAAS;AACnB,oBAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;AAClB,wBAAA,UAAU,EAAE,IAAI;AAChB,wBAAA,OAAO,EAAE,mEAAmE;AAC5E,wBAAA,KAAK,EAAE,OAAO;AACd,wBAAA,IAAI,EAAE,OAAO;AACb,wBAAA,IAAI,EAAE,SAAS;AACf,wBAAA,KAAK,EAAE,cAAc;AACrB,wBAAA,WAAW,EAAE,WAAW;AACzB,qBAAA,CAAC,CAAC;;AAEH,oBAAA,IAAI,CAAC,SAAS;AACX,yBAAA,IAAI,CAAC;AACJ,wBAAA,SAAS,EAAE,IAAI;AACf,wBAAA,UAAU,EAAE,IAAI;AAChB,wBAAA,OAAO,EAAE,iEAAiE;AAC1E,wBAAA,KAAK,EAAE,oBAAoB;AAC3B,wBAAA,IAAI,EAAE,OAAO;AACb,wBAAA,IAAI,EAAE,SAAS;AACf,wBAAA,KAAK,EAAE,cAAc;AACrB,wBAAA,WAAW,EAAE,SAAS;AACtB,wBAAA,UAAU,EAAE,UAAU;qBACvB,CAAC;AACD,yBAAA,SAAS,CAAC,CAAC,IAAS,KAAI;AACvB,wBAAA,IAAI,IAAI,EAAE;AACR,4BAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACrC,4BAAA,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC;AACnC,4BAAA,IAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC;AACpC,yBAAA;AACH,qBAAC,CAAC,CAAC;AACR,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACrC,gBAAA,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC;AACnC,gBAAA,IAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC;AACpC,aAAA;AAED,YAAA,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,CAAC;SACtC,CAAA,CAAA;AAAA,KAAA;AAED;;AAEG;IACI,kBAAkB,GAAA;AACvB,QAAA,IAAI,IAAI,CAAC,mBAAmB,KAAK,IAAI,EAAE;AACrC,YAAA,IAAI,CAAC,SAAS;AACX,iBAAA,IAAI,CAAC;AACJ,gBAAA,SAAS,EAAE,IAAI;AACf,gBAAA,UAAU,EAAE,IAAI;gBAChB,OAAO,EAAE,uCAAuC,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,GAAG,uBAAuB;AAC5G,gBAAA,KAAK,EAAE,wBAAwB;AAC/B,gBAAA,IAAI,EAAE,OAAO;AACb,gBAAA,IAAI,EAAE,SAAS;AACf,gBAAA,KAAK,EAAE,cAAc;AACrB,gBAAA,WAAW,EAAE,SAAS;AACtB,gBAAA,UAAU,EAAE,UAAU;aACvB,CAAC;AACD,iBAAA,SAAS,CAAC,CAAC,IAAS,KAAI;AACvB,gBAAA,IAAI,IAAI,EAAE;oBACR,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,mBAAmB,CAAC,iBAAiB;wBACxE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;;AAExD,wBAAA,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAC3B,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAA,IAAA,EAAA,CAAA,CAAA,OAAA,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,mBAAmB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,MAAK,CAAC,CAAC,MAAM,CAAA,EAAA,CAAC,CACrF,CAAC;AACJ,oBAAA,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;AAC7B,oBAAA,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;AACjC,iBAAA;AACH,aAAC,CAAC,CAAC;AACN,SAAA;KACF;IAEa,gBAAgB,GAAA;;AAC5B,YAAA,OAAO,IAAI,OAAO,CAAC,OAAO,IAAG;AAC3B,gBAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,gCAAgC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,KAAI;oBAChF,OAAO,CAAC,IAAI,CAAC,CAAC;AAChB,iBAAC,CAAC,CAAC;AACL,aAAC,CAAC,CAAC;SACJ,CAAA,CAAA;AAAA,KAAA;IAEa,qBAAqB,GAAA;;AACjC,YAAA,OAAO,IAAI,OAAO,CAAC,OAAO,IAAG;AAC3B,gBAAA,IAAI,CAAC,SAAS;AACX,qBAAA,IAAI,CAAC;AACJ,oBAAA,SAAS,EAAE,IAAI;AACf,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,OAAO,EAAE,+CAA+C;AACxD,oBAAA,KAAK,EAAE,oBAAoB;AAC3B,oBAAA,IAAI,EAAE,OAAO;AACb,oBAAA,IAAI,EAAE,SAAS;AACf,oBAAA,KAAK,EAAE,cAAc;AACrB,oBAAA,WAAW,EAAE,SAAS;AACtB,oBAAA,UAAU,EAAE,SAAS;iBACtB,CAAC;qBACD,SAAS,CAAC,CAAC,IAAS,KAAK,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;AAC7C,aAAC,CAAC,CAAC;SACJ,CAAA,CAAA;AAAA,KAAA;IAEO,sBAAsB,GAAA;AAC5B,QAAA,IAAI,CAAC,aAAa;AACf,aAAA,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,KAAK,cAAc,CAAC;AAC/D,aAAA,OAAO,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,IAAK,CAAC,CAAC,CAAC,CAAC;KAC1D;;2HAvpBU,8BAA8B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAAvD,IAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAAkC,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA9B,8BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,8BAA8B,0mBC9B3C,soRA8MA,EAAA,MAAA,EAAA,CAAA,opCAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAhC,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,EAAA,0BAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,iGAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,qDAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAmD,qBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,aAAA,EAAA,YAAA,EAAA,YAAA,EAAA,aAAA,EAAA,MAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,eAAA,EAAA,mBAAA,EAAA,OAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,EAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA1C,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,QAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,KAAA,EAAA,KAAA,EAAA,qBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAP,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,6GAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA+C,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,EAAA,8BAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAJ,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,WAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,MAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,6CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAI,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAb,GAAA,CAAA,eAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,8BAAA,CAAA,EAAA,QAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,mDAAA,EAAA,QAAA,EAAA,CAAA,wBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,wDAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,UAAA,EAAA,eAAA,EAAA,UAAA,EAAA,MAAA,EAAA,IAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,WAAA,EAAA,aAAA,CAAA,EAAA,OAAA,EAAA,CAAA,SAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,UAAA,EAAA,kBAAA,EAAA,YAAA,EAAA,aAAA,EAAA,UAAA,EAAA,8BAAA,EAAA,OAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA7C,IAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA8C,EAAA,CAAA,aAAA,EAAA,IAAA,EAAA,WAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDhLa,8BAA8B,EAAA,UAAA,EAAA,CAAA;kBAL1C,SAAS;+BACE,0BAA0B,EAAA,QAAA,EAAA,soRAAA,EAAA,MAAA,EAAA,CAAA,opCAAA,CAAA,EAAA,CAAA;8JAKR,MAAM,EAAA,CAAA;sBAAjC,KAAK;uBAAC,QAAQ,CAAA;gBAoCa,WAAW,EAAA,CAAA;sBAAtC,KAAK;uBAAC,YAAY,CAAA;gBACU,YAAY,EAAA,CAAA;sBAAxC,KAAK;uBAAC,aAAa,CAAA;gBACY,cAAc,EAAA,CAAA;sBAA7C,MAAM;uBAAC,eAAe,CAAA;gBAKO,YAAY,EAAA,CAAA;sBAAzC,MAAM;uBAAC,aAAa,CAAA;gBACS,YAAY,EAAA,CAAA;sBAAzC,MAAM;uBAAC,aAAa,CAAA;gBAEY,eAAe,EAAA,CAAA;sBAA/C,KAAK;uBAAC,iBAAiB,CAAA;gBAER,OAAO,EAAA,CAAA;sBAAtB,KAAK;gBACW,aAAa,EAAA,CAAA;sBAA7B,MAAM;gBAEuB,aAAa,EAAA,CAAA;sBAA1C,KAAK;uBAAC,cAAc,CAAA;gBAEW,eAAe,EAAA,CAAA;sBAA9C,KAAK;uBAAC,gBAAgB,CAAA;gBAIO,YAAY,EAAA,CAAA;sBAAzC,KAAK;uBAAC,cAAc,CAAA;gBACc,iBAAiB,EAAA,CAAA;sBAAnD,MAAM;uBAAC,kBAAkB,CAAA;gBACW,mBAAmB,EAAA,CAAA;sBAAvD,MAAM;uBAAC,oBAAoB,CAAA;;MAwnBjB,gCAAgC,CAAA;AAG3C,IAAA,WAAA,CAA2B,aAA+B,EAAA;AAA/B,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAkB;AADnD,QAAA,IAAQ,CAAA,QAAA,GAAY,KAAK,CAAC;KAC8B;IAExD,WAAW,GAAA;AAChB,QAAA,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;KAC5E;IAEM,aAAa,GAAA;AAClB,QAAA,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;KAChC;;6HAXU,gCAAgC,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAd,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAhC,gCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,gCAAgC,EAxBjC,QAAA,EAAA,6BAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AAsBT,EAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA7B,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,qDAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAsD,kBAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,OAAA,EAAA,OAAA,EAAA,MAAA,EAAA,MAAA,EAAA,YAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAApD,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAE,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAV,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FAEU,gCAAgC,EAAA,UAAA,EAAA,CAAA;kBA1B5C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,6BAA6B;AACvC,oBAAA,QAAQ,EAAE,CAAA;;;;;;;;;;;;;;;;;;;;;;AAsBT,EAAA,CAAA;iBACF,CAAA;;;MEhpBY,2BAA2B,CAAA;;wHAA3B,2BAA2B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAA3B,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,2BAA2B,iBApCpC,8BAA8B;QAC9B,2BAA2B;QAC3B,4BAA4B;AAC5B,QAAA,gCAAgC,aAShC,YAAY;QACZ,WAAW;QACX,mBAAmB;QACnB,eAAe;QACf,mBAAmB;QAEnB,kBAAkB;QAClB,eAAe;QAEf,mBAAmB;QACnB,kBAAkB;QAClB,cAAc;QACd,eAAe;QACf,aAAa;QACb,cAAc;QACd,eAAe;QACf,aAAa;QACb,gBAAgB;QAChB,qBAAqB;QACrB,cAAc;QACd,gBAAgB;AAChB,QAAA,eAAe,aA3Bf,8BAA8B;QAC9B,2BAA2B;QAC3B,4BAA4B;QAC5B,gCAAgC,CAAA,EAAA,CAAA,CAAA;AA2BvB,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,2BAA2B,YAxBpC,YAAY;QACZ,WAAW;QACX,mBAAmB;QACnB,eAAe;QACf,mBAAmB;QAEnB,kBAAkB;QAClB,eAAe;QAEf,mBAAmB;QACnB,kBAAkB;QAClB,cAAc;QACd,eAAe;QACf,aAAa;QACb,cAAc;QACd,eAAe;QACf,aAAa;QACb,gBAAgB;QAChB,qBAAqB;QACrB,cAAc;QACd,gBAAgB;QAChB,eAAe,CAAA,EAAA,CAAA,CAAA;2FAGN,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBAtCvC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE;wBACZ,8BAA8B;wBAC9B,2BAA2B;wBAC3B,4BAA4B;wBAC5B,gCAAgC;AACjC,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,8BAA8B;wBAC9B,2BAA2B;wBAC3B,4BAA4B;wBAC5B,gCAAgC;AACjC,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,WAAW;wBACX,mBAAmB;wBACnB,eAAe;wBACf,mBAAmB;wBAEnB,kBAAkB;wBAClB,eAAe;wBAEf,mBAAmB;wBACnB,kBAAkB;wBAClB,cAAc;wBACd,eAAe;wBACf,aAAa;wBACb,cAAc;wBACd,eAAe;wBACf,aAAa;wBACb,gBAAgB;wBAChB,qBAAqB;wBACrB,cAAc;wBACd,gBAAgB;wBAChB,eAAe;AAChB,qBAAA;iBACF,CAAA;;;MCzDY,oBAAoB,CAAA;AALjC,IAAA,WAAA,GAAA;AAQS,QAAA,IAAM,CAAA,MAAA,GAAuB,SAAS,CAAA;KAE9C;;iHALY,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,oBAAoB,kFCPjC,+LASA,EAAA,MAAA,EAAA,CAAA,oSAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDFa,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBALhC,SAAS;+BACE,cAAc,EAAA,QAAA,EAAA,+LAAA,EAAA,MAAA,EAAA,CAAA,oSAAA,CAAA,EAAA,CAAA;8BAOjB,MAAM,EAAA,CAAA;sBADZ,KAAK;;;MEQK,iBAAiB,CAAA;;8GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;+GAAjB,iBAAiB,EAAA,YAAA,EAAA,CAV1B,oBAAoB,CAAA,EAAA,OAAA,EAAA,CAGpB,YAAY;QACZ,gBAAgB,aAGhB,oBAAoB,CAAA,EAAA,CAAA,CAAA;AAGX,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,YAP1B,YAAY;QACZ,gBAAgB,CAAA,EAAA,CAAA,CAAA;2FAMP,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAZ7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE;wBACZ,oBAAoB;AACrB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,gBAAgB;AACjB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,oBAAoB;AACrB,qBAAA;iBACF,CAAA;;;ACgBK,MAAO,mBAAoB,SAAQ,gBAAgB,CAAA;AAgGvD,IAAA,WAAA,CAA6B,cAA6B,EAAA;AACxD,QAAA,KAAK,EAAE,CAAC;AADmB,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAe;AA/F1C,QAAA,IAAO,CAAA,OAAA,GAAG,IAAI,CAAC;AACf,QAAA,IAAgB,CAAA,gBAAA,GAAG,IAAI,CAAC;AACxB,QAAA,IAAkB,CAAA,kBAAA,GAAG,GAAG,CAAC;AACzB,QAAA,IAAW,CAAA,WAAA,GAAG,GAAG,CAAC;AAClB,QAAA,IAAc,CAAA,cAAA,GAAG,YAAY,CAAC;AAC9B,QAAA,IAAoB,CAAA,oBAAA,GAAG,kBAAkB,CAAC;AAC1C,QAAA,IAAU,CAAA,UAAA,GAAG,QAAQ,CAAC;AACtB,QAAA,IAAmB,CAAA,mBAAA,GAAG,iBAAiB,CAAC;AACxC,QAAA,IAAgB,CAAA,gBAAA,GAAG,cAAc,CAAC;AAClC,QAAA,IAAkB,CAAA,kBAAA,GAAG,gBAAgB,CAAC;AACtC,QAAA,IAAe,CAAA,eAAA,GAAG,aAAa,CAAC;AAChC,QAAA,IAAgB,CAAA,gBAAA,GAAG,cAAc,CAAC;AACjC,QAAA,IAAqB,CAAA,qBAAA,GAAW,GAAG,CAAC;AACpC,QAAA,IAAS,CAAA,SAAA,GAAW,GAAG,CAAC;AACxB,QAAA,IAAY,CAAA,YAAA,GAAG,QAAQ,CAAC;AAOlC,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAAc,CAAC;;AAM5C,QAAA,IAAO,CAAA,OAAA,GAAW,GAAG,CAAC;AAEtB,QAAA,IAAS,CAAA,SAAA,GAAW,KAAK,CAAC;AAQ1B,QAAA,IAAA,CAAA,IAAI,GAAW,IAAI,CAAC,OAAO,CAAC;;AAI5B,QAAA,IAAa,CAAA,aAAA,GAAY,KAAK,CAAC;AAI/B,QAAA,IAAc,CAAA,cAAA,GAAW,SAAS,CAAC;AAEnC,QAAA,IAAa,CAAA,aAAA,GAAW,QAAQ,CAAC;AAEjC,QAAA,IAAa,CAAA,aAAA,GAAW,UAAU,CAAC;;AAMnC,QAAA,IAAa,CAAA,aAAA,GAAY,KAAK,CAAC;AAI/B,QAAA,IAAc,CAAA,cAAA,GAAW,SAAS,CAAC;AAEnC,QAAA,IAAa,CAAA,aAAA,GAAW,QAAQ,CAAC;AAEjC,QAAA,IAAa,CAAA,aAAA,GAAW,QAAQ,CAAC;;AAMjC,QAAA,IAAQ,CAAA,QAAA,GAAW,yBAAyB,CAAC;;AAI7C,QAAA,IAAkB,CAAA,kBAAA,GAAiB,SAAS,CAAC;AAE7C,QAAA,IAAoB,CAAA,oBAAA,GAAa,KAAK,CAAC;AAMvC,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,YAAY,EAAsB,CAAC;AAIxD,QAAA,IAAa,CAAA,aAAA,GAAgC,EAAE,CAAC;AAIhD,QAAA,IAAA,CAAA,kBAAkB,GAAG,IAAI,GAAG,EAAiC,CAAC;AAE9D,QAAA,IAAA,CAAA,yBAAyB,GAAG,IAAI,GAAG,EAAmC,CAAC;AAEvE,QAAA,IAAM,CAAA,MAAA,GAAa,EAAE,CAAC;KAI5B;IAEM,QAAQ,GAAA;AACb,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAgB,KAAI;AACpF,YAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;YACpD,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,aAAa,EAAE,CAAC;AACrB,YAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAClC,YAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjC,YAAA,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACrC,IAAI,CAAC,uBAAuB,EAAE,CAAC;AACjC,SAAC,CAAC,CAAC;KACJ;;IAGO,WAAW,GAAA;QACjB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,KAAK,KAAK,CAAC,OAAO,GAAG,CAAA,EAAG,KAAK,CAAC,EAAE,CAAA,CAAA,EAAI,KAAK,CAAC,KAAK,CAAA,CAAE,CAAC,CAAC,CAAC;KACpF;IAEO,aAAa,GAAA;AACnB,QAAA,MAAM,YAAY,GAAG,IAAI,GAAG,EAAU,CAAC;QACvC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,IAAG;AAChC,YAAA,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAChC,SAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACxC;AAED;AACgC;IACxB,uBAAuB,GAAA;QAC7B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAe,KAAI;YAC5C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CAAC,MAAK;;;gBAEjG,QAAQ,KAAK,CAAC,QAAQ;oBACpB,KAAK,IAAI,CAAC,cAAc;wBACtB,KAAK,CAAC,KAAK,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,KAAK,0CAAE,MAAM,EAAA,CAAG,QAAQ,EAAE,CAAC;wBAC7E,MAAM;oBACR,KAAK,IAAI,CAAC,oBAAoB;;AAE5B,wBAAA,KAAK,CAAC,KAAK;AACT,4BAAA,KAAK,CAAC,KAAK,IAAI,EAAC,MAAA,KAAK,CAAC,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAA;kCAC1D,KAAK,CAAC,KAAK;AACX,oCAAA,IAAI,CAAC,kBAAkB;qCACvB,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,KAAK,0CAAE,MAAM,EAAA,CAAG,QAAQ,EAAE,CAAA;AACxF,kCAAE,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,EAAG,CAAA,QAAQ,EAAE,CAAC;wBACrE,MAAM;oBACR,KAAK,IAAI,CAAC,UAAU,CAAC;oBACrB,KAAK,IAAI,CAAC,gBAAgB,CAAC;oBAC3B,KAAK,IAAI,CAAC,mBAAmB;AAC3B,wBAAA,IAAI,KAAK,CAAC,gBAAgB,IAAI,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;AAChF,4BAAA,MAAM,YAAY,GAAa,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC5E,4BAAA,YAAY,CAAC,OAAO,CAAC,WAAW,IAAG;gCACjC,MAAM,SAAS,GAAG,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;AACnE,gCAAA,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAC7C,CAAC,IACC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CACpG,CAAC;AACH,gCAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;AACvD,gCAAA,IAAI,SAAS,EAAE;AACb,oCAAA,IAAI,IAAI,CAAC,yBAAyB,CAAC,gBAAgB,CAAC,EAAE;AACpD,wCAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,gBAAiB,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;AACzD,wCAAA,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;AAC5C,qCAAA;;AAAM,wCAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;AACjE,iCAAA;AAAM,qCAAA;AACL,oCAAA,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;AAC5C,iCAAA;AACH,6BAAC,CAAC,CAAC;AACJ,yBAAA;wBACD,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;wBAClD,MAAM;AACR,oBAAA;AACE,wBAAA,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;wBACxD,MAAM;AACT,iBAAA;gBACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACnC,aAAC,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;KACJ;AAEO,IAAA,eAAe,CAAC,OAAe,EAAA;;AACrC,QAAA,OAAO,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,cAAc,CAAC,OAAO,CAAC;AACjE,cAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,KAAK;cACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;KACzC;AAEO,IAAA,yBAAyB,CAAC,KAAe,EAAA;QAC/C,IAAI,SAAS,GAAY,IAAI,CAAC;AAC9B,QAAA,MAAM,MAAM,GAAe,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAG;YACtD,MAAM,cAAc,GAAW,CAAA,EAAG,KAAK,CAAC,KAAK,CAAA,EAAG,IAAI,CAAC,qBAAqB,CAAA,CAAE,CAAC;YAC7E,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,CAAI,CAAA,EAAA,cAAc,CAAU,OAAA,EAAA,cAAc,CAAE,CAAA,CAAC,CAAC;YACxE,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC;AACzC,SAAC,CAAC,CAAC;AACH,QAAA,MAAM,CAAC,OAAO,CAAC,CAAC,IAAG;YACjB,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;AACrD,YAAA,IAAI,CAAC,YAAY,KAAK,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,CAAC,EAAE;;gBAE/E,SAAS,GAAG,KAAK,CAAC;AACnB,aAAA;AACD,YAAA,MAAM,SAAS,GAAkB,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,gBAAgB,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;AACxF,YAAA,IAAI,SAAS,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;;gBAExE,SAAS,GAAG,KAAK,CAAC;AACnB,aAAA;AACH,SAAC,CAAC,CAAC;AACH,QAAA,OAAO,SAAS,CAAC;KAClB;IAEO,gBAAgB,CAAC,YAAoB,EAAE,KAAa,EAAA;QAC1D,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,CAAG,EAAA,KAAK,CAAkB,gBAAA,CAAA,CAAC,CAAC;QACrD,MAAM,YAAY,GAAG,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC/C,QAAA,IAAI,YAAY,IAAI,YAAY,CAAC,CAAC,CAAC,EAAE;AACnC,YAAA,OAAO,YAAY,CAAC,CAAC,CAAC,CAAC;AACxB,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;KACF;;AAGM,IAAA,WAAW,CAAC,OAA2B,EAAA;AAC5C,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACnC;AAEO,IAAA,cAAc,CAAC,MAAkB,EAAA;AACvC,QAAA,MAAM,CAAC,OAAO,CAAC,CAAC,KAAe,KAAK,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;KACvE;IAEO,aAAa,CAAC,KAAe,EAAE,QAAiB,EAAA;;AAEtD,QAAA,IAAI,QAAQ,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;YAAE,OAAO;QACnE,QAAQ,KAAK,CAAC,QAAQ;YACpB,KAAK,IAAI,CAAC,UAAU,CAAC;YACrB,KAAK,IAAI,CAAC,mBAAmB;;AAE3B,gBAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC;AAClF,gBAAA,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAY,QAAQ,CAAC,CAAC,CAAC;gBACzF,MAAM;YACR,KAAK,IAAI,CAAC,gBAAgB;;AAExB,gBAAA,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,OAA2B,KAAI;AAChF,oBAAA,IAAI,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC;oBAChF,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC;oBACzF,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAsB,QAAQ,CAAC,CAAC;AAChE,iBAAC,CAAC,CAAC;gBACH,MAAM;AACT,SAAA;KACF;AAEO,IAAA,qBAAqB,CAAC,GAAW,EAAA;QACvC,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YAC/B,MAAM,OAAO,GAAqB,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAE,CAAC;AAChE,YAAA,KAAK,IAAI,KAAK,IAAI,OAAO,EAAE;AACzB,gBAAA,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;gBACnG,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;AAC9F,aAAA;AACF,SAAA;AACD,QAAA,OAAO,GAAG,CAAC;KACZ;AAEO,IAAA,uBAAuB,CAAC,OAA2B,EAAA;AACzD,QAAA,OAAO,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC;AAC3B,aAAA,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK,CAAG,EAAA,GAAG,CAAI,CAAA,EAAA,KAAK,EAAE,CAAC;aACxC,IAAI,CAAC,GAAG,CAAC,CAAC;KACd;AAEO,IAAA,kBAAkB,CAAC,MAAkB,EAAA;AAC3C,QAAA,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,OAAO,EAAE;AAC9B,YAAA,MAAM,CAAC,OAAO,CAAC,CAAC,KAAe,KAAI;AACjC,gBAAA,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC;AAChF,aAAC,CAAC,CAAC;AACJ,SAAA;AAAM,aAAA;AACL,YAAA,MAAM,CAAC,OAAO,CAAC,CAAC,KAAe,KAAI;AACjC,gBAAA,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC;AACnF,aAAC,CAAC,CAAC;AACJ,SAAA;KACF;AAEO,IAAA,mBAAmB,CAAC,KAAe,EAAA;AACzC,QAAA,IAAI,IAAI,CAAC;QACT,QAAQ,KAAK,CAAC,QAAQ;YACpB,KAAK,IAAI,CAAC,eAAe,CAAC;YAC1B,KAAK,IAAI,CAAC,gBAAgB;gBACxB,IAAI,GAAG,QAAQ,CAAC;gBAChB,MAAM;YACR,KAAK,IAAI,CAAC,oBAAoB,CAAC;YAC/B,KAAK,IAAI,CAAC,cAAc;gBACtB,IAAI,GAAG,MAAM,CAAC;gBACd,MAAM;YACR,KAAK,IAAI,CAAC,kBAAkB;gBAC1B,IAAI,GAAG,SAAS,CAAC;gBACjB,MAAM;AACR,YAAA;gBACE,IAAI,GAAG,MAAM,CAAC;gBACd,MAAM;AACT,SAAA;AACD,QAAA,OAAO,IAAI,CAAC;KACb;AAEO,IAAA,eAAe,CAAC,KAAe,EAAE,KAAa,EAAE,IAAS,EAAA;AAC/D,QAAA,MAAM,YAAY,GAA8B;YAC9C,GAAG,EAAE,KAAK,CAAC,QAAQ;AACnB,YAAA,IAAI,EAAE,IAAI;AACV,YAAA,KAAK,EAAE,KAAK;SACb,CAAC;AAEF,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACvC;AAEO,IAAA,eAAe,CAAC,MAAkB,EAAA;QACxC,IAAI,CAAC,MAAM,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC;AAChC,QAAA,MAAM,CAAC,OAAO,CAAC,CAAC,KAAe,KAAI;YACjC,IAAI,KAAK,CAAC,QAAQ,KAAK,IAAI,CAAC,mBAAmB,IAAI,KAAK,CAAC,KAAK,EAAE;AAC9D,gBAAA,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACjD,aAAA;AACD,YAAA,IAAI,CAAC,MAAM,CAAC,UAAU,CACpB,KAAK,CAAC,OAAO,EACb,IAAI,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE;AAC3B,gBAAA,KAAK,CAAC,aAAa,KAAK,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,QAAQ,GAAG,UAAU,CAAC,aAAa;AAC1F,aAAA,CAAC,CACH,CAAC;;AAGF,YAAA,IAAI,KAAK,CAAC,QAAQ,KAAK,IAAI,CAAC,oBAAoB,EAAE;AAChD,gBAAA,IAAI,CAAC,MAAM,CAAC,UAAU,CACpB,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,EACrC,IAAI,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE;AAC3B,oBAAA,KAAK,CAAC,aAAa,KAAK,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,QAAQ,GAAG,UAAU,CAAC,aAAa;AAC1F,iBAAA,CAAC,CACH,CAAC;AACH,aAAA;;YAED,MAAM,cAAc,GAAW,CAAA,EAAG,KAAK,CAAC,KAAK,CAAA,EAAG,IAAI,CAAC,qBAAqB,CAAA,CAAE,CAAC;YAC7E,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,CAAI,CAAA,EAAA,cAAc,CAAU,OAAA,EAAA,cAAc,CAAE,CAAA,CAAC,CAAC;YACxE,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;;AAEpF,YAAA,IAAI,KAAK,CAAC,QAAQ,IAAI,cAAc,EAAE;AACpC,gBAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;AAC/C,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;IAEM,MAAM,GAAA;QACX,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,IAAG;AAChC,YAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,aAAa,EAAE,CAAC;AACpD,YAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,sBAAsB,EAAE,CAAC;AAC/D,SAAC,CAAC,CAAC;AACH,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;YACrB,IAAI,CAAC,YAAY,EAAE,CAAC;AACrB,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;AACzC,SAAA;KACF;IAEM,MAAM,GAAA;QACX,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,IAAG;AAChC,YAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,aAAa,EAAE,CAAC;AACpD,YAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,sBAAsB,EAAE,CAAC;AAC/D,SAAC,CAAC,CAAC;AACH,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;YACrB,IAAI,CAAC,YAAY,EAAE,CAAC;AACrB,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;AACzC,SAAA;KACF;;gHAzWU,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA2D,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;oGAAnB,mBAAmB,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,EAAA,WAAA,EAAA,aAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,OAAA,EAAA,SAAA,EAAA,SAAA,EAAA,WAAA,EAAA,KAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,IAAA,EAAA,MAAA,EAAA,aAAA,EAAA,eAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,eAAA,EAAA,aAAA,EAAA,eAAA,EAAA,YAAA,EAAA,CAAA,aAAA,EAAA,cAAA,CAAA,EAAA,aAAA,EAAA,eAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,eAAA,EAAA,aAAA,EAAA,eAAA,EAAA,YAAA,EAAA,CAAA,aAAA,EAAA,cAAA,CAAA,EAAA,QAAA,EAAA,UAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,oBAAA,EAAA,sBAAA,EAAA,WAAA,EAAA,CAAA,YAAA,EAAA,aAAA,CAAA,EAAA,YAAA,EAAA,CAAA,aAAA,EAAA,cAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA,UAAA,EAAA,YAAA,EAAA,cAAA,EAAA,eAAA,EAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EChChC,s+JAmHA,EAAA,MAAA,EAAA,CAAA,8FAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,CAAA,cAAA,OAAA3D,IAAA,CAAA,OAAA,CAAA,EAAA,CAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,CAAA,YAAA,EAAA,OAAAA,IAAA,CAAA,OAAA,CAAA,EAAA,CAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,CAAA,YAAA,EAAA,OAAAA,IAAA,CAAA,IAAA,CAAA,EAAA,CAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,CAAA,YAAA,EAAA,OAAA4D,qBAAA,CAAA,EAAA,CAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,CAAA,YAAA,EAAA,OAAAC,kBAAA,CAAA,EAAA,CAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,mBAAA,EAAA,aAAA,EAAA,YAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,CAAA,YAAA,EAAA,OAAA1B,kBAAA,CAAA,EAAA,CAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,OAAA,EAAA,OAAA,EAAA,MAAA,EAAA,MAAA,EAAA,YAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,CAAA,cAAA,OAAA2B,2BAAA,CAAA,EAAA,CAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,eAAA,EAAA,cAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,CAAA,YAAA,EAAA,OAAAzB,sBAAA,CAAA,EAAA,CAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,MAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,CAAA,YAAA,EAAA,OAAA0B,sBAAA,CAAA,EAAA,CAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,CAAA,YAAA,EAAA,OAAAC,uBAAA,CAAA,EAAA,CAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,CAAA,cAAA,OAAAC,yBAAA,CAAA,EAAA,CAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,EAAA,UAAA,EAAA,cAAA,EAAA,WAAA,EAAA,eAAA,EAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,CAAA,YAAA,EAAA,OAAAxB,wBAAA,CAAA,EAAA,CAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,uBAAA,EAAA,wBAAA,EAAA,YAAA,EAAA,aAAA,EAAA,MAAA,EAAA,SAAA,EAAA,WAAA,EAAA,YAAA,EAAA,aAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,eAAA,EAAA,mBAAA,EAAA,OAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,CAAA,YAAA,EAAA,OAAA,GAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,CAAA,YAAA,EAAA,OAAA,GAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,SAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,CAAA,YAAA,EAAA,OAAAyB,oBAAA,CAAA,EAAA,CAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,CAAA,YAAA,EAAA,OD0Ra,iBAAiB,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,eAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FA7WjB,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAN/B,SAAS;+BACE,aAAa,EAAA,aAAA,EAGR,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,s+JAAA,EAAA,MAAA,EAAA,CAAA,8FAAA,CAAA,EAAA,CAAA;iGAsB9B,WAAW,EAAA,CAAA;sBADjB,KAAK;gBAGC,UAAU,EAAA,CAAA;sBADhB,MAAM;gBAGA,cAAc,EAAA,CAAA;sBADpB,KAAK;gBAKC,OAAO,EAAA,CAAA;sBADb,KAAK;gBAGC,SAAS,EAAA,CAAA;sBADf,KAAK;gBAKC,KAAK,EAAA,CAAA;sBADX,KAAK;gBAGC,QAAQ,EAAA,CAAA;sBADd,KAAK;gBAGC,IAAI,EAAA,CAAA;sBADV,KAAK;gBAKC,aAAa,EAAA,CAAA;sBADnB,KAAK;gBAGC,cAAc,EAAA,CAAA;sBADpB,KAAK;gBAGC,cAAc,EAAA,CAAA;sBADpB,KAAK;gBAGC,aAAa,EAAA,CAAA;sBADnB,KAAK;gBAGC,aAAa,EAAA,CAAA;sBADnB,KAAK;gBAGC,YAAY,EAAA,CAAA;sBADlB,KAAK;uBAAC,aAAa,CAAA;gBAKb,aAAa,EAAA,CAAA;sBADnB,KAAK;gBAGC,cAAc,EAAA,CAAA;sBADpB,KAAK;gBAGC,cAAc,EAAA,CAAA;sBADpB,KAAK;gBAGC,aAAa,EAAA,CAAA;sBADnB,KAAK;gBAGC,aAAa,EAAA,CAAA;sBADnB,KAAK;gBAGC,YAAY,EAAA,CAAA;sBADlB,KAAK;uBAAC,aAAa,CAAA;gBAKb,QAAQ,EAAA,CAAA;sBADd,KAAK;gBAKC,kBAAkB,EAAA,CAAA;sBADxB,KAAK;gBAGC,oBAAoB,EAAA,CAAA;sBAD1B,KAAK;gBAKC,WAAW,EAAA,CAAA;sBADjB,KAAK;uBAAC,YAAY,CAAA;gBAGZ,cAAc,EAAA,CAAA;sBADpB,MAAM;uBAAC,eAAe,CAAA;gBAGhB,YAAY,EAAA,CAAA;sBADlB,KAAK;uBAAC,aAAa,CAAA;;MA0RT,iBAAiB,CAAA;IACrB,SAAS,CAAC,MAAkB,EAAE,KAAa,EAAA;AAChD,QAAA,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC;KACtD;;8GAHU,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA;4GAAjB,iBAAiB,EAAA,IAAA,EAAA,eAAA,EAAA,CAAA,CAAA;2FAAjB,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAD7B,IAAI;mBAAC,EAAE,IAAI,EAAE,eAAe,EAAE,CAAA;;;MEhWlB,iBAAiB,CAAA;;8GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,EAxBb,YAAA,EAAA,CAAA,mBAAmB,EAAE,iBAAiB,aAInD,mBAAmB;QACnB,YAAY;QACZ,WAAW;QACX,kBAAkB;QAClB,eAAe;QACf,qBAAqB;QACrB,cAAc;QACd,aAAa;QACb,eAAe;QACf,wBAAwB;QACxB,mBAAmB;QACnB,mBAAmB;QACnB,oBAAoB;QACpB,sBAAsB;QACtB,qBAAqB;QACrB,iBAAiB;QACjB,kBAAkB;QAClB,iBAAiB,aApBT,mBAAmB,CAAA,EAAA,CAAA,CAAA;AAuBlB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,EAtBjB,SAAA,EAAA,CAAC,aAAa,CAAC,YAExB,mBAAmB;QACnB,YAAY;QACZ,WAAW;QACX,kBAAkB;QAClB,eAAe;QACf,qBAAqB;QACrB,cAAc;QACd,aAAa;QACb,eAAe;QACf,wBAAwB;QACxB,mBAAmB;QACnB,mBAAmB;QACnB,oBAAoB;QACpB,sBAAsB;QACtB,qBAAqB;QACrB,iBAAiB;QACjB,kBAAkB;QAClB,iBAAiB,CAAA,EAAA,CAAA,CAAA;2FAGR,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAzB7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE,CAAC,mBAAmB,EAAE,iBAAiB,CAAC;oBACtD,OAAO,EAAE,CAAC,mBAAmB,CAAC;oBAC9B,SAAS,EAAE,CAAC,aAAa,CAAC;AAC1B,oBAAA,OAAO,EAAE;wBACP,mBAAmB;wBACnB,YAAY;wBACZ,WAAW;wBACX,kBAAkB;wBAClB,eAAe;wBACf,qBAAqB;wBACrB,cAAc;wBACd,aAAa;wBACb,eAAe;wBACf,wBAAwB;wBACxB,mBAAmB;wBACnB,mBAAmB;wBACnB,oBAAoB;wBACpB,sBAAsB;wBACtB,qBAAqB;wBACrB,iBAAiB;wBACjB,kBAAkB;wBAClB,iBAAiB;AAClB,qBAAA;iBACF,CAAA;;;AC/BD,MAAM,SAAS,GAAW,WAAW,CAAC;MAKzB,YAAY,CAAA;AACvB,IAAA,WAAA,CACU,IAAuB,EACvB,cAA6B,EAC7B,iBAAmC,EACnC,aAA4B,EAAA;AAH5B,QAAA,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAmB;AACvB,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAe;AAC7B,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAkB;AACnC,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;KAClC;IAEG,gBAAgB,CACrB,IAA4B,EAC5B,KAA0B,EAAA;;AAE1B,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,IAAG,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;KACtF;IAEM,WAAW,CAChB,IAA4B,EAC5B,KAA0B,EAAA;AAE1B,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;KAC9C;AAEO,IAAA,QAAQ,CAAC,IAA4B,EAAE,KAA0B,EAAE,IAAU,EAAA;;AACnF,QAAA,IAAI,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE;YAC/B,MAAM,IAAI,GAAW,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;AACjD,YAAA,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YACxC,CAAA,EAAA,GAAA,IAAI,CAAC,iBAAiB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,aAAa,CAAC,IAAI,CAAC,CAAC;AAC7C,SAAA;;AAED,QAAA,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE;;AAE7B,YAAA,YAAY,CAAC,OAAO,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;AACjE,YAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;AACzB,SAAA;AAAM,aAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE;AAChC,YAAA,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,8BAA8B,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;AACjF,gBAAA,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;AACjE,aAAA;AAAM,iBAAA;;AAEL,gBAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE;oBAClB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;AACvG,iBAAA;AACF,aAAA;AACF,SAAA;AACD,QAAA,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE;AACtB,YAAA,IAAI,CAAC,cAAc;AAChB,iBAAA,GAAG,CAAW,IAAI,CAAC,YAAY,CAAC,EAAE;AACjC,gBAAA,OAAO,EAAE,UAAU;AACnB,gBAAA,YAAY,EAAE,MAAgB;aAC/B,CAAC;AACD,iBAAA,SAAS,CAAC;AACT,gBAAA,IAAI,EAAE,CAAC,QAAgC,KAAI;AACzC,oBAAA,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACtB,oBAAA,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,CAAC;iBAClF;AACD,gBAAA,KAAK,EAAE,CAAC,GAAQ,KAAI;AAClB,oBAAA,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC;iBACvC;AACF,aAAA,CAAC,CAAC;AACN,SAAA;AACD,QAAA,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;KAC3D;AAEO,IAAA,cAAc,CAAC,IAA4B,EAAE,KAAa,EAAE,IAAY,EAAA;QAC9E,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACtC,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAEtC,IAAI,KAAK,IAAI,KAAK,EAAE;YAClB,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;AACpC,gBAAA,OAAO,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;AAC3C,aAAA;AACD,YAAA,OAAO,IAAI,CAAC,qBAAqB,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;AACxE,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;AACjB,SAAA;KACF;IAEO,qBAAqB,CAAC,EAC5B,KAAK,EACL,KAAK,EACL,IAAI,EACJ,IAAI,EACJ,KAAK,EAON,EAAA;AACC,QAAA,IAAI,QAAQ,GAAW,IAAI,GAAG,gBAAgB,CAAC;AAC/C,QAAA,IAAI,KAAK,EAAE;AACT,YAAA,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;AACjC,YAAA,QAAQ,IAAI,CAAA,YAAA,EAAe,KAAK,CAAA,CAAE,CAAC;AACpC,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;AACjC,YAAA,QAAQ,IAAI,CAAA,SAAA,EAAY,KAAK,CAAA,CAAE,CAAC;AACjC,SAAA;QACD,OAAO,IAAI,CAAC,cAAc;aACvB,GAAG,CAAW,QAAQ,EAAE;AACvB,YAAA,OAAO,EAAE,UAAU;AACnB,YAAA,YAAY,EAAE,MAAgB;SAC/B,CAAC;AACD,aAAA,IAAI,CACH,GAAG,CAAC,CAAC,KAA6B,KAAI;;YACpC,MAAM,IAAI,GAAW,CAAA,CAAA,EAAA,GAAA,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,KAAI,IAAI,CAAC;AAClF,YAAA,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;YACtC,CAAA,EAAA,GAAA,IAAI,CAAC,iBAAiB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,aAAa,CAAC,IAAI,CAAC,CAAC;AAC5C,YAAA,IAAI,KAAK,EAAE;AACT,gBAAA,IAAI,CAAC,IAAI,CAAC,qCAAqC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC,CAAC;AAC5G,gBAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AACtD,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC;AACpE,gBAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AACtD,aAAA;AACD,YAAA,OAAO,IAAI,CAAC;AACd,SAAC,CAAC,EACFC,YAAU,CAAC,GAAG,IAAG;AACf,YAAA,OAAO,CAAC,GAAG,CAAC,wCAAwC,EAAE,GAAG,CAAC,CAAC;AAC3D,YAAA,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;SACjB,CAAC,CACH,CAAC;KACL;;yGAzHU,YAAY,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA1C,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAA2C,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAnE,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAG,IAAA,CAAA,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAZ,YAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,cAFX,MAAM,EAAA,CAAA,CAAA;2FAEP,YAAY,EAAA,UAAA,EAAA,CAAA;kBAHxB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;ACuED;;AC1EA;;ACbY,IAAA,iBAEX;AAFD,CAAA,UAAY,gBAAgB,EAAA;AAC1B,IAAA,gBAAA,CAAA,kBAAA,CAAA,GAAA,kBAAqC,CAAA;AACvC,CAAC,EAFW,gBAAgB,KAAhB,gBAAgB,GAE3B,EAAA,CAAA,CAAA;;ACGY,MAAA,cAAc,GAAG,CAAgC,OAAU,KAAI;AAC1E,IAAA,IAAI,OAAY,CAAC;IACjB,OAAO;AACL,QAAA,MAAM,EAAE,CAAC,KAA6B,EAAE,KAA0B,KAAI;YACpE,IAAI,QAAQ,GAAuB,SAAS,CAAC;YAC7C,IAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;gBAClC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAE,CAAC;AAC5C,aAAA;YACD,IAAI,CAAC,OAAO,EAAE;AACZ,gBAAA,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,aAAA;AACD,YAAA,OAAO,OAAO,CAAC;SAChB;AACD,QAAA,OAAO,EAAE,CAAC,KAA6B,EAAE,KAA0B,KAAI;AACrE,YAAA,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;AACpB,gBAAA,OAAO,IAAI,CAAC;AACb,aAAA;YACD,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC+D,YAAU,CAAC,CAAC,KAAwB,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACpF;AACD,QAAA,QAAQ,EAAE,CAAC,KAA6B,EAAE,KAA0B,KAAI;AACtE,YAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;AACrB,gBAAA,OAAO,IAAI,CAAC;AACb,aAAA;YACD,IAAI,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC5B,OAAO,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,IAAI,CAACA,YAAU,CAAC,CAAC,KAAwB,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACvF;KACF,CAAC;AACJ;;AC9BgB,SAAA,WAAW,CAAC,SAA2B,EAAE,WAAgB,EAAA;IACvE,OAAO,YAAA;AACL,QAAA,MAAM,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC;AAC7E,QAAA,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC9B,OAAO,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;AAC1C,KAAC,CAAC;AACJ;;ACRO,MAAM,OAAO,GAAG,UAAU;AAWjC;;;AAGkF;;ACdlF;;AAEG;;;;"}